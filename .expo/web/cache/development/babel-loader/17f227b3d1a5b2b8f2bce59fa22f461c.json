{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Tour On\\\\Touron-Mobileapp\\\\src\\\\Screens\\\\SelfPlanTourScreens\\\\SelfPlanningFormScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { database } from \"firebase\";\nimport { Surface } from \"react-native-paper\";\nimport DatePicker from \"react-native-datepicker\";\nimport moment from \"moment\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport ProgressiveImage from \"./../../Reusable Components/ProgressiveImage\";\nimport touron from \"../../api/touron\";\nimport Tourtype from \"./../CategoryScreens/Reusable components/Tourtype\";\nimport SubmittedQuery from \"./../CategoryScreens/Reusable components/SubmittedQuery\";\nimport SelfTourHome from \"./SelfTourHome\";\nimport OverviewToursScreen from \"../CheckoutScreens/OverviewToursScreen\";\nimport ProgressScreen from \"../CheckoutScreens/ProgressScreen\";\nimport OverviewCitiesScreen from \"../CheckoutScreens/OverviewCitiesScreen\";\nimport Card from \"../../../assets/Board.jpg\";\nvar HEIGHT = Dimensions.get(\"window\").height;\nvar WIDTH = Dimensions.get(\"window\").width;\n\nvar SelfPlanForm = function SelfPlanForm(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      cities = _useContext.cities,\n      userInfo = _useContext.userInfo;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      destination = _useState2[0],\n      setDestination = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedCity = _useState4[0],\n      setSelectedCity = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedCityNames = _useState6[0],\n      setSelectedCityNames = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loader = _useState8[0],\n      setLoader = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tourType = _useState10[0],\n      setTourType = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      totalDays = _useState12[0],\n      setTotalDays = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      fromDate = _useState14[0],\n      setFromDate = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      toDate = _useState16[0],\n      setToDate = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedState = _useState18[0],\n      setSelectedState = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      adult = _useState20[0],\n      setAdult = _useState20[1];\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      children = _useState22[0],\n      setChildren = _useState22[1];\n\n  var _useState23 = useState(2),\n      _useState24 = _slicedToArray(_useState23, 2),\n      step = _useState24[0],\n      _setStep = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      dcities = _useState26[0],\n      setDCities = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      states = _useState28[0],\n      setStates = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      hotelType = _useState30[0],\n      setHoteltype = _useState30[1];\n\n  var _useState31 = useState(\"\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      travelmode = _useState32[0],\n      setTravelmode = _useState32[1];\n\n  var _useState33 = useState(\"\"),\n      _useState34 = _slicedToArray(_useState33, 2),\n      flightType = _useState34[0],\n      setFlightType = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      loaded = _useState36[0],\n      setLoaded = _useState36[1];\n\n  var _useState37 = useState(),\n      _useState38 = _slicedToArray(_useState37, 2),\n      date = _useState38[0],\n      setDate = _useState38[1];\n\n  var _useState39 = useState(),\n      _useState40 = _slicedToArray(_useState39, 2),\n      month = _useState40[0],\n      setMonth = _useState40[1];\n\n  var _useState41 = useState(),\n      _useState42 = _slicedToArray(_useState41, 2),\n      year = _useState42[0],\n      setYear = _useState42[1];\n\n  var random;\n  var formatedMonth;\n\n  var renderCity = function renderCity(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: {\n        alignItems: \"center\",\n        width: \"33%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, selectedCityNames.includes(item.cityName) ? React.createElement(Feather, {\n      name: \"check-circle\",\n      size: 24,\n      color: \"green\",\n      style: {\n        bottom: 20,\n        right: 0,\n        zIndex: 10,\n        position: \"absolute\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }) : null, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        if (selectedCityNames.includes(item.cityName)) {\n          var filter = selectedCity.filter(function (sa) {\n            return sa.cityName !== item.cityName;\n          });\n          setSelectedCity(filter);\n          var filters = selectedCityNames.filter(function (sa) {\n            return sa !== item.cityName;\n          });\n          setSelectedCityNames(filters);\n        } else {\n          setSelectedCityNames([].concat(_toConsumableArray(selectedCityNames), [item.cityName]));\n          setSelectedCity([].concat(_toConsumableArray(selectedCity), [{\n            cityName: item.cityName,\n            imageUrl: item.imageUrl,\n            days: 0,\n            countryName: item.countryName\n          }]));\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, React.createElement(ProgressiveImage, {\n      style: styles.cityImage,\n      source: {\n        uri: item.imageUrl\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    })), React.createElement(Text, {\n      style: {\n        textAlign: \"center\",\n        marginBottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, item.cityName)));\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      random = Math.floor((Math.random() + 4) * 345334);\n      var requestDate = new Date();\n      var currentYear = requestDate.getFullYear();\n      setDate(requestDate.getDate());\n      setMonth(requestDate.getMonth() + 1);\n      setYear(currentYear.toString().slice(2, 5));\n      formatedMonth = month < 10 ? \"0\" + month : month;\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var getCity = function getCity() {\n    if (destination === \"\") return cities.reverse();\n    var c = cities.filter(function (c) {\n      return c.cityName.trim().toUpperCase().includes(destination.toUpperCase().trim());\n    });\n    var countries = cities.filter(function (c) {\n      return c.countryName.trim().toUpperCase().includes(destination.toUpperCase().trim());\n    });\n    var result = [].concat(_toConsumableArray(c), _toConsumableArray(countries));\n    return result;\n  };\n\n  var getStates = function getStates() {\n    var stateResponse;\n    return _regeneratorRuntime.async(function getStates$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoaded(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(touron.get(\"/state\"));\n\n          case 4:\n            stateResponse = _context.sent;\n            setStates(stateResponse.data);\n            setLoaded(false);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0, \"err\");\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var getDomesticCities = function getDomesticCities(name) {\n    var domesticResponse;\n    return _regeneratorRuntime.async(function getDomesticCities$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setLoaded(true);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(touron.get(\"/statecity/statename/\" + name));\n\n          case 4:\n            domesticResponse = _context2.sent;\n            setDCities(domesticResponse.data);\n            console.log(\"object\", domesticResponse.data);\n            setLoaded(false);\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0, \"err\");\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      getStates();\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var calculateTotalDays = function calculateTotalDays() {\n    var count = 0;\n    selectedCity.forEach(function (c) {\n      return count = count + c.days * 1;\n    });\n    return count;\n  };\n\n  var filterState = function filterState() {\n    if (destination === \"\") return states;\n    var state = states.filter(function (c) {\n      return c.stateName.trim().toUpperCase().includes(destination.toUpperCase().trim());\n    });\n    return state;\n  };\n\n  var submitD = function submitD() {\n    database().ref(\"self-planned-tours\").push({\n      requestID: \"TO-\" + date + formatedMonth + year + \"-\" + random,\n      tourType: tourType,\n      userId: userInfo.userID,\n      adult: adult,\n      children: children,\n      fromData: fromDate,\n      toData: toDate,\n      selectedCities: selectedCity,\n      name: userInfo.name,\n      phoneNumber: userInfo.phoneNumber,\n      totalDays: totalDays,\n      hotelType: hotelType,\n      travelmode: travelmode,\n      flightType: flightType,\n      selectedState: selectedState,\n      tourDetails: [],\n      tourCategory: \"Self Plan Tour\",\n      status: \"Query Received\",\n      tourCost: 0\n    }).then(function (data) {\n      _setStep(5);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  var renderDomesticForm = function renderDomesticForm() {\n    switch (step) {\n      case 1:\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.background,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }\n        }, React.createElement(Feather, {\n          name: \"search\",\n          style: styles.iconStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputStyle,\n          placeholder: \"Search\",\n          onChangeText: function onChangeText(text) {\n            return setDestination(text);\n          },\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }\n        })), !loader ? React.createElement(ActivityIndicator, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }\n        }) : React.createElement(ScrollView, {\n          showsVerticalScrollIndicator: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            width: WIDTH,\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }\n        }, filterState().map(function (item, index) {\n          return React.createElement(View, {\n            style: {\n              alignItems: \"center\"\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 23\n            }\n          }, selectedState === item.stateName ? React.createElement(Feather, {\n            name: \"check-circle\",\n            size: 24,\n            color: \"green\",\n            style: {\n              bottom: 20,\n              right: 0,\n              zIndex: 10,\n              position: \"absolute\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 27\n            }\n          }) : null, React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 25\n            }\n          }, React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return setSelectedState(item.stateName);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 27\n            }\n          }, React.createElement(ProgressiveImage, {\n            style: styles.cityImage,\n            source: {\n              uri: item.imageUrl\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }\n          })), React.createElement(Text, {\n            style: {\n              textAlign: \"center\",\n              marginBottom: 5\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 27\n            }\n          }, item.stateName)));\n        }))), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            getDomesticCities(selectedState);\n\n            _setStep(step + 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.proceedButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            color: \"white\",\n            fontFamily: \"Andika\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }\n        }, \"Select State and Proceed\"))));\n\n      case 2:\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: \"center\",\n            fontSize: 20,\n            fontFamily: \"Andika\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }\n        }, \"Select Citiess\")), loaded ? React.createElement(ActivityIndicator, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }\n        }) : React.createElement(ScrollView, {\n          showsVerticalScrollIndicator: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }\n        }, dcities.length === 0 ? React.createElement(View, {\n          style: {\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flex: 1,\n            backgroundColor: \"#fff\",\n            height: HEIGHT / 1.2,\n            width: WIDTH\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 21\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: WIDTH * 0.9,\n            height: WIDTH * 0.9\n          },\n          source: require(\"../../../assets/oops.jpg\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 23\n          }\n        })), React.createElement(Text, {\n          style: {\n            fontFamily: \"Avenir\",\n            fontSize: 23\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 21\n          }\n        }, \"No Cities Found\")) : React.createElement(View, {\n          style: {\n            width: WIDTH,\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 19\n          }\n        }, dcities.map(function (t, index) {\n          return React.createElement(View, {\n            style: {\n              alignItems: \"center\"\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 25\n            }\n          }, selectedCityNames.includes(t.cityName) ? React.createElement(Feather, {\n            name: \"check-circle\",\n            size: 24,\n            color: \"green\",\n            style: {\n              bottom: 20,\n              right: 10,\n              zIndex: 10,\n              position: \"absolute\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 29\n            }\n          }) : null, React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 27\n            }\n          }, React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              if (selectedCityNames.includes(t.cityName)) {\n                var filter = selectedCity.filter(function (sa) {\n                  return sa.cityName !== t.cityName;\n                });\n                setSelectedCity(filter);\n                var filters = selectedCityNames.filter(function (sa) {\n                  return sa !== t.cityName;\n                });\n                setSelectedCityNames(filters);\n              } else {\n                setSelectedCity([].concat(_toConsumableArray(selectedCity), [{\n                  cityName: t.cityName,\n                  days: 0,\n                  stateName: t.stateName,\n                  idealDays: t.idealDays,\n                  suggestedCombinations: t.suggestedCombinations,\n                  imageUrl: t.imageUrl\n                }]));\n                setSelectedCityNames([].concat(_toConsumableArray(selectedCityNames), [t.cityName]));\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 29\n            }\n          }, React.createElement(ProgressiveImage, {\n            style: styles.cityImage,\n            source: {\n              uri: t.imageUrl\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 31\n            }\n          })), React.createElement(Text, {\n            style: {\n              textAlign: \"center\",\n              marginBottom: 5\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 29\n            }\n          }, t.cityName)));\n        }))), selectedCity.length === 0 ? null : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _setStep(3);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: styles.proceedButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            color: \"white\",\n            fontFamily: \"Andika\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 19\n          }\n        }, \"Select State and Proceed\"))));\n\n      case 3:\n        return React.createElement(ScrollView, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: \"#F1F3F6\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: \"center\",\n            fontSize: 20,\n            fontFamily: \"Andika\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 17\n          }\n        }, \"Overview of the seletecd cities\")), selectedCity.map(function (item, index) {\n          return React.createElement(Surface, {\n            style: styles.surfaces,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }\n          }, React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }\n          }, React.createElement(Surface, {\n            style: styles.surface,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 21\n            }\n          }, React.createElement(Image, {\n            style: styles.cityimage,\n            source: {\n              uri: item.imageUrl\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 23\n            }\n          })), React.createElement(Text, {\n            style: styles.cityName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 21\n            }\n          }, item.cityName)), React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 19\n            }\n          }, React.createElement(Image, {\n            style: {\n              height: 40,\n              width: 40\n            },\n            source: require(\"../../../assets/Calendar.png\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 21\n            }\n          })), React.createElement(View, {\n            style: {\n              marginHorizontal: 20,\n              alignItems: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 19\n            }\n          }, React.createElement(Text, {\n            style: {\n              textAlign: \"center\",\n              fontSize: 14,\n              fontWeight: \"bold\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 21\n            }\n          }, \"Enter No Of Days\"), React.createElement(View, {\n            style: styles.inputContainer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 21\n            }\n          }, React.createElement(TextInput, {\n            keyboardType: \"number-pad\",\n            onChangeText: function onChangeText(value) {\n              var index = selectedCity.findIndex(function (a) {\n                return a.cityName === item.cityName;\n              });\n\n              var ne = _toConsumableArray(selectedCity);\n\n              ne[index].days = value * 1;\n              setSelectedCity(ne);\n              setTotalDays(calculateTotalDays());\n            },\n            style: {\n              fontSize: 25,\n              marginTop: 5,\n              height: HEIGHT / 25,\n              width: WIDTH / 9,\n              textAlign: \"center\"\n            },\n            editable: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 23\n            }\n          }))));\n        }), React.createElement(View, {\n          style: {\n            width: WIDTH,\n            marginLeft: -20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          style: styles.calendarImage,\n          source: Card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }\n        }), React.createElement(View, {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            left: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.embark,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: WIDTH / 22,\n            color: \"#F1F3F6\",\n            fontFamily: \"Andika\",\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 21\n          }\n        }, \"When do you embark your journey\")), React.createElement(View, {\n          style: styles.dateContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: styles.from,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            color: \"#fff\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 25\n          }\n        }, \"Onward\")), React.createElement(View, {\n          style: styles.picker,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 23\n          }\n        }, React.createElement(DatePicker, {\n          style: {\n            width: 200\n          },\n          date: fromDate,\n          mode: \"date\",\n          placeholder: \"\",\n          format: \"YYYY-MM-DD\",\n          minDate: moment().add(14, \"days\").format(\"YYYY-MM-DD\"),\n          confirmBtnText: \"Confirm\",\n          cancelBtnText: \"Cancel\",\n          onDateChange: function onDateChange(date) {\n            var dates = moment(date).add(totalDays - 1, \"days\").format(\"YYYY-MM-DD\");\n            setFromDate(date);\n            setToDate(dates);\n          },\n          showIcon: false,\n          customStyles: {\n            dateInput: {\n              borderWidth: 0\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 25\n          }\n        }))), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: styles.from,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            color: \"#fff\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 25\n          }\n        }, \"Return\")), React.createElement(View, {\n          style: styles.picker,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 23\n          }\n        }, toDate === \"\" ? React.createElement(Text, {\n          style: {\n            fontSize: 15,\n            color: \"#333\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 27\n          }\n        }, \"Select Date\") : React.createElement(Text, {\n          style: {\n            fontSize: 15,\n            color: \"#333\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 27\n          }\n        }, toDate)))), React.createElement(View, {\n          style: styles.numbers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            textAlign: \"center\",\n            fontFamily: \"Avenir\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 21\n          }\n        }, \"No of Persons\"), React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            marginVertical: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: styles.personText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 25\n          }\n        }, \"Adults\"), React.createElement(Image, {\n          style: styles.image,\n          source: {\n            uri: \"https://image.freepik.com/free-vector/illustration-with-young-people-concept_23-2148467324.jpg\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 25\n          }\n        }), React.createElement(View, {\n          style: styles.personContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 25\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            if (adult > 0) setAdult(adult - 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 27\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 29\n          }\n        }, \"-\")), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 27\n          }\n        }, React.createElement(TextInput, {\n          keyboardType: \"number-pad\",\n          style: {\n            fontSize: 20,\n            marginTop: 10\n          },\n          value: adult.toString(),\n          editable: true,\n          onChangeText: function onChangeText(value) {\n            return setAdult(+value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 29\n          }\n        })), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return setAdult(adult + 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 27\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 29\n          }\n        }, \"+\")))), React.createElement(View, {\n          style: {\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: styles.personText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 25\n          }\n        }, \"Childrens\"), React.createElement(Image, {\n          style: styles.image,\n          source: {\n            uri: \"https://image.freepik.com/free-vector/smiling-boy-girl-kids-holding-hands-childhood-friendship-concept-love-romance-children-cartoon-characters-flat-vector-illustration-isolated-white-background_71593-450.jpg\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 25\n          }\n        }), React.createElement(View, {\n          style: styles.personContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 25\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            if (children > 0) setChildren(children - 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 27\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 29\n          }\n        }, \"-\")), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 27\n          }\n        }, React.createElement(TextInput, {\n          style: {\n            marginTop: 10,\n            fontSize: 20\n          },\n          editable: true,\n          value: children.toString(),\n          onChangeText: function onChangeText(value) {\n            return setChildren(+value);\n          },\n          keyboardType: \"number-pad\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 29\n          }\n        })), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return setChildren(children + 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 27\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 29\n          }\n        }, \"+\")))))), React.createElement(TouchableOpacity, {\n          style: {\n            marginTop: HEIGHT < 550 ? -WIDTH / 10 - 20 : -WIDTH / 10 - 20\n          },\n          onPress: function onPress() {\n            _setStep(step + 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.exploreButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 23\n          }\n        }, \"Proceed\")))))));\n\n      case 4:\n        var hotels = [\"3 Star Hotel\", \"4 Star Hotel\", \"5 Star Hotel\"];\n        var tourtype = [\"Train\", \"Flight\"];\n        var flighttypes = [\"Non Stop\", \"Low Fare\"];\n        return React.createElement(View, {\n          style: {\n            width: WIDTH,\n            alignItems: \"center\",\n            flex: 1,\n            marginTop: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            alignItems: \"flex-start\",\n            marginBottom: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontFamily: \"Andika\",\n            fontSize: 20,\n            paddingLeft: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }\n        }, \"Select the type of hotel ?\"), React.createElement(View, {\n          style: styles.ftypecontainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 15\n          }\n        }, hotels.map(function (t, index) {\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return setHoteltype(t);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 19\n            }\n          }, React.createElement(Surface, {\n            style: {\n              margin: 10,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              elevation: 5,\n              height: WIDTH / 4,\n              borderRadius: 20,\n              width: WIDTH / 4\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 21\n            }\n          }, hotelType === t ? React.createElement(View, {\n            style: styles.tick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 27\n            }\n          }, \"\\u2714\\uFE0F\")) : null, React.createElement(Text, {\n            style: {\n              fontFamily: \"Andika\",\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 23\n            }\n          }, t)));\n        }))), React.createElement(View, {\n          style: {\n            alignItems: \"flex-start\",\n            marginBottom: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontFamily: \"Andika\",\n            fontSize: 20,\n            paddingLeft: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 15\n          }\n        }, \"How do you want to travel ?\"), React.createElement(View, {\n          style: styles.ftypecontainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }\n        }, tourtype.map(function (t, index) {\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return setTravelmode(t);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 19\n            }\n          }, React.createElement(Surface, {\n            style: styles.ftype,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 21\n            }\n          }, travelmode === t ? React.createElement(View, {\n            style: styles.tick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 27\n            }\n          }, \"\\u2714\\uFE0F\")) : null, React.createElement(Text, {\n            style: {\n              fontFamily: \"Andika\",\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 23\n            }\n          }, t)));\n        }))), travelmode === \"Flight\" ? React.createElement(View, {\n          style: {\n            alignItems: \"flex-start\",\n            marginBottom: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontFamily: \"Andika\",\n            fontSize: 20,\n            paddingLeft: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 17\n          }\n        }, \"Flight Type\"), React.createElement(View, {\n          style: styles.ftypecontainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 17\n          }\n        }, flighttypes.map(function (t, index) {\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return setFlightType(t);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 21\n            }\n          }, React.createElement(Surface, {\n            style: styles.ftype,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 23\n            }\n          }, flightType === t ? React.createElement(View, {\n            style: styles.tick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 837,\n              columnNumber: 29\n            }\n          }, \"\\u2714\\uFE0F\")) : null, React.createElement(Text, {\n            style: {\n              fontFamily: \"Andika\",\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 25\n            }\n          }, t)));\n        }))) : null, React.createElement(TouchableOpacity, {\n          onPress: submitD,\n          style: {\n            bottom: 10,\n            position: \"absolute\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: styles.exploreButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 17\n          }\n        }, \"Submit\"))));\n\n      case 5:\n        return React.createElement(SubmittedQuery, {\n          navigation: navigation,\n          type: \"Self Plan\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 16\n          }\n        });\n    }\n  };\n\n  var _prevStep = function prevStep() {\n    _setStep(step - 1);\n  };\n\n  var renderInternational = function renderInternational() {\n    switch (step) {\n      case 1:\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            width: WIDTH * 0.9,\n            alignItems: \"flex-end\",\n            justifyContent: \"center\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginHorizontal: 30,\n            paddingBottom: 10,\n            position: \"relative\",\n            marginTop: Platform.OS == \"android\" ? HEIGHT / 14 : 80\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            setTourType(\"\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 17\n          }\n        }, React.createElement(AntDesign, {\n          name: \"arrowleft\",\n          size: 28,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 19\n          }\n        }))), React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            fontFamily: \"NewYorkl\",\n            flex: 0.7,\n            marginBottom: Platform.OS == \"ios\" ? 5 : 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 15\n          }\n        }, \"Select your cities\"), React.createElement(TouchableOpacity, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 17\n          }\n        }))), React.createElement(View, {\n          style: styles.background,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 13\n          }\n        }, React.createElement(Feather, {\n          name: \"search\",\n          style: styles.iconStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 15\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputStyle,\n          placeholder: \"Search\",\n          onChangeText: function onChangeText(value) {\n            return setDestination(value);\n          },\n          onSubmitEditing: getCity,\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 15\n          }\n        })), selectedCity.length === 0 ? null : React.createElement(TouchableOpacity, {\n          style: {\n            position: \"absolute\",\n            bottom: 0,\n            zIndex: 10\n          },\n          onPress: function onPress() {\n            _setStep(2);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: styles.proceedButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            color: \"white\",\n            fontFamily: \"Andika\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 19\n          }\n        }, \"Proceed\"))), !loader ? React.createElement(ActivityIndicator, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 15\n          }\n        }) : React.createElement(ScrollView, {\n          showsVerticalScrollIndicator: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            width: WIDTH,\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 17\n          }\n        }, getCity().map(function (item, index) {\n          return React.createElement(View, {\n            style: {\n              alignItems: \"center\"\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 23\n            }\n          }, React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 25\n            }\n          }, selectedCityNames.includes(item.cityName) ? React.createElement(Feather, {\n            name: \"check-circle\",\n            size: 24,\n            color: \"green\",\n            style: {\n              bottom: 20,\n              right: 0,\n              zIndex: 10,\n              position: \"absolute\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 975,\n              columnNumber: 29\n            }\n          }) : null, React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              if (selectedCityNames.includes(item.cityName)) {\n                var filter = selectedCity.filter(function (sa) {\n                  return sa.cityName !== item.cityName;\n                });\n                setSelectedCity(filter);\n                var filters = selectedCityNames.filter(function (sa) {\n                  return sa !== item.cityName;\n                });\n                setSelectedCityNames(filters);\n              } else {\n                setSelectedCityNames([].concat(_toConsumableArray(selectedCityNames), [item.cityName]));\n                setSelectedCity([].concat(_toConsumableArray(selectedCity), [{\n                  cityName: item.cityName,\n                  imageUrl: item.imageUrl,\n                  days: 0,\n                  countryName: item.countryName\n                }]));\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 27\n            }\n          }, React.createElement(ProgressiveImage, {\n            style: styles.cityImage,\n            source: {\n              uri: item.imageUrl\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 29\n            }\n          })), React.createElement(Text, {\n            style: {\n              textAlign: \"center\",\n              marginBottom: 5\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 27\n            }\n          }, item.cityName)));\n        }))));\n\n      case 2:\n        return React.createElement(OverviewCitiesScreen, {\n          selectedCitys: selectedCity,\n          selectedCityNamess: selectedCityNames,\n          setStep: function setStep() {\n            return _setStep(3);\n          },\n          prevStep: function prevStep() {\n            return _prevStep();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1038,\n            columnNumber: 11\n          }\n        });\n\n      case 3:\n        return React.createElement(SelfTourHome, {\n          selectedCitys: selectedCity,\n          selectedCityNamess: selectedCityNames,\n          setStep: function setStep() {\n            return _setStep(4);\n          },\n          prevStep: function prevStep() {\n            return _prevStep();\n          },\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 11\n          }\n        });\n\n      case 4:\n        return React.createElement(OverviewToursScreen, {\n          selectedCitys: selectedCity,\n          prevStep: function prevStep() {\n            return _prevStep();\n          },\n          setStep: function setStep() {\n            return _setStep(5);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 11\n          }\n        });\n\n      case 5:\n        return React.createElement(ProgressScreen, {\n          prevStep: function prevStep() {\n            return _prevStep();\n          },\n          selectedCitys: selectedCity,\n          setStep: function setStep() {\n            return _setStep(6);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1065,\n            columnNumber: 11\n          }\n        });\n\n      case 6:\n        return React.createElement(SubmittedQuery, {\n          navigation: navigation,\n          type: \"Self Plan\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 16\n          }\n        });\n    }\n  };\n\n  return React.createElement(React.Fragment, null, tourType === \"\" ? React.createElement(View, {\n    style: {\n      marginTop: Platform.OS === \"ios\" ? 30 : 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 9\n    }\n  }, React.createElement(Tourtype, {\n    imgSrc1: require(\"../../../assets/planned-tour/india.png\"),\n    imgScr2: require(\"../../../assets/planned-tour/International.png\"),\n    nextStep: function nextStep() {\n      return _setStep(1);\n    },\n    prevStep: function prevStep() {\n      return navigation.goBack();\n    },\n    tourType: tourType,\n    tourName: \"Self Tour\",\n    setDomestic: function setDomestic() {\n      return setTourType(\"Domestic\");\n    },\n    setInternational: function setInternational() {\n      return setTourType(\"International\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 11\n    }\n  })) : React.createElement(React.Fragment, null, tourType === \"Domestic\" ? React.createElement(React.Fragment, null, step === 5 ? null : React.createElement(View, {\n    style: {\n      alignItems: \"flex-end\",\n      justifyContent: \"center\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      marginHorizontal: WIDTH / 15,\n      marginVertical: Platform.OS === \"ios\" ? 30 : 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1095,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (step > 1) _setStep(step - 1);else setTourType(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1111,\n      columnNumber: 21\n    }\n  }, React.createElement(AntDesign, {\n    name: \"arrowleft\",\n    size: 28,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1112,\n      columnNumber: 23\n    }\n  }))), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontFamily: \"NewYorkl\",\n      marginTop: Platform.OS == \"android\" ? 30 : 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1116,\n      columnNumber: 19\n    }\n  }, \"Domestic\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _setStep(step + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1126,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1127,\n      columnNumber: 21\n    }\n  }, React.createElement(AntDesign, {\n    name: \"arrowright\",\n    size: 28,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1128,\n      columnNumber: 23\n    }\n  })))), renderDomesticForm()) : React.createElement(React.Fragment, null, renderInternational())));\n};\n\nexport default SelfPlanForm;\nvar styles = StyleSheet.create({\n  picker: {\n    width: WIDTH / 3,\n    height: WIDTH / 8,\n    borderRadius: 15,\n    backgroundColor: \"#f1f2f6\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\"\n  },\n  from: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  dateContainer: {\n    width: WIDTH,\n    alignItems: \"center\",\n    marginVertical: 5,\n    justifyContent: \"space-around\",\n    position: \"absolute\",\n    flexDirection: \"row\",\n    bottom: HEIGHT * 0.5\n  },\n  embark: {\n    position: \"absolute\",\n    bottom: HEIGHT / 1.45,\n    left: 0,\n    right: 0,\n    zIndex: 1\n  },\n  calendarImage: {\n    marginTop: 0,\n    height: HEIGHT / 1.3,\n    width: WIDTH * 1.1,\n    position: \"relative\"\n  },\n  cityimage: {\n    width: 100,\n    height: 100,\n    margin: 10,\n    borderRadius: 20\n  },\n  surfaces: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginHorizontal: 20,\n    marginVertical: 10,\n    height: 160,\n    borderRadius: 20,\n    width: WIDTH * 0.9,\n    elevation: 8,\n    justifyContent: \"space-between\"\n  },\n  numbers: {\n    position: \"absolute\",\n    height: HEIGHT / 3.7,\n    width: WIDTH * 0.9,\n    marginHorizontal: 20,\n    zIndex: 1,\n    bottom: HEIGHT * 0.11,\n    borderRadius: 20\n  },\n  personText: {\n    textAlign: \"center\",\n    fontSize: 18,\n    fontFamily: \"Andika\"\n  },\n  personContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: WIDTH / 3,\n    alignItems: \"center\"\n  },\n  image: {\n    height: HEIGHT / 10,\n    width: WIDTH / 4,\n    marginVertical: 10\n  },\n  inputContainer: {\n    backgroundColor: \"#f1f2f6\",\n    marginTop: 5,\n    height: HEIGHT / 25,\n    width: WIDTH / 9,\n    borderRadius: 10\n  },\n  buttonContainer: {\n    backgroundColor: \"#626E7B\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    width: WIDTH * 0.9,\n    marginRight: 15,\n    marginLeft: 10,\n    marginBottom: 1\n  },\n  exploreButton: {\n    fontSize: 15,\n    color: \"white\",\n    fontFamily: \"Avenir\",\n    padding: WIDTH / 25\n  },\n  cityName: {\n    fontWeight: \"bold\",\n    fontSize: 14,\n    marginBottom: 10,\n    textAlign: \"center\"\n  },\n  inputContainer: {\n    marginHorizontal: 5,\n    alignItems: \"center\",\n    width: WIDTH / 6,\n    height: WIDTH / 8,\n    backgroundColor: \"#F1F3F6\",\n    borderRadius: 15,\n    marginVertical: 10\n  },\n  surface: {\n    padding: 8,\n    height: 100,\n    borderRadius: 20,\n    width: 100,\n    marginHorizontal: 20,\n    marginVertical: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 20\n  },\n  cityImage: {\n    width: 100,\n    height: 100,\n    margin: 10,\n    borderRadius: 100\n  },\n  proceedButton: {\n    width: WIDTH * 0.9,\n    backgroundColor: \"#626E7B\",\n    borderRadius: 10,\n    padding: 5,\n    alignItems: \"center\",\n    marginBottom: 5\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  background: {\n    backgroundColor: \"#fff\",\n    height: HEIGHT / 15,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginVertical: 10,\n    marginHorizontal: WIDTH / 18\n  },\n  inputStyle: {\n    fontSize: 18,\n    flex: 1\n  },\n  iconStyle: {\n    fontSize: 30,\n    alignSelf: \"center\",\n    marginHorizontal: 15\n  },\n  ftype: {\n    margin: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 5,\n    height: WIDTH / 3,\n    borderRadius: 20,\n    width: WIDTH / 3\n  },\n  ftypecontainer: {\n    alignItems: \"center\",\n    width: WIDTH,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  tick: {\n    top: 0,\n    right: 0,\n    borderBottomLeftRadius: 20,\n    position: \"absolute\",\n    backgroundColor: \"#00d8d6\",\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 40\n  }\n});","map":{"version":3,"sources":["D:/Tour On/Touron-Mobileapp/src/Screens/SelfPlanTourScreens/SelfPlanningFormScreen.js"],"names":["React","useState","useEffect","useContext","useMemo","AntDesign","database","Surface","DatePicker","moment","Feather","AuthContext","ProgressiveImage","touron","Tourtype","SubmittedQuery","SelfTourHome","OverviewToursScreen","ProgressScreen","OverviewCitiesScreen","Card","HEIGHT","Dimensions","get","height","WIDTH","width","SelfPlanForm","navigation","cities","userInfo","destination","setDestination","selectedCity","setSelectedCity","selectedCityNames","setSelectedCityNames","loader","setLoader","tourType","setTourType","totalDays","setTotalDays","fromDate","setFromDate","toDate","setToDate","selectedState","setSelectedState","adult","setAdult","children","setChildren","step","setStep","dcities","setDCities","states","setStates","hotelType","setHoteltype","travelmode","setTravelmode","flightType","setFlightType","loaded","setLoaded","date","setDate","month","setMonth","year","setYear","random","formatedMonth","renderCity","item","alignItems","includes","cityName","bottom","right","zIndex","position","filter","sa","filters","imageUrl","days","countryName","styles","cityImage","uri","textAlign","marginBottom","mounted","Math","floor","requestDate","Date","currentYear","getFullYear","getDate","getMonth","toString","slice","getCity","reverse","c","trim","toUpperCase","countries","result","getStates","stateResponse","data","console","log","getDomesticCities","name","domesticResponse","calculateTotalDays","count","forEach","filterState","state","stateName","submitD","ref","push","requestID","userId","userID","fromData","toData","selectedCities","phoneNumber","tourDetails","tourCategory","status","tourCost","then","catch","err","renderDomesticForm","container","background","iconStyle","inputStyle","text","flex","justifyContent","display","flexDirection","flexWrap","map","index","proceedButton","fontSize","color","fontFamily","length","backgroundColor","require","t","idealDays","suggestedCombinations","surfaces","surface","cityimage","marginHorizontal","fontWeight","inputContainer","value","findIndex","a","ne","marginTop","marginLeft","calendarImage","left","embark","dateContainer","from","picker","add","format","dates","dateInput","borderWidth","numbers","marginVertical","personText","image","personContainer","buttonContainer","exploreButton","hotels","tourtype","flighttypes","paddingLeft","ftypecontainer","margin","elevation","borderRadius","tick","ftype","prevStep","renderInternational","paddingBottom","Platform","OS","goBack","StyleSheet","create","marginRight","padding","alignSelf","top","borderBottomLeftRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useMemo } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Platform,\r\n  Image,\r\n  ScrollView,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { database } from \"firebase\";\r\nimport { Surface } from \"react-native-paper\";\r\nimport DatePicker from \"react-native-datepicker\";\r\nimport moment from \"moment\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\n\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport ProgressiveImage from \"./../../Reusable Components/ProgressiveImage\";\r\nimport touron from \"../../api/touron\";\r\nimport Tourtype from \"./../CategoryScreens/Reusable components/Tourtype\";\r\nimport SubmittedQuery from \"./../CategoryScreens/Reusable components/SubmittedQuery\";\r\nimport SelfTourHome from \"./SelfTourHome\";\r\nimport OverviewToursScreen from \"../CheckoutScreens/OverviewToursScreen\";\r\nimport ProgressScreen from \"../CheckoutScreens/ProgressScreen\";\r\nimport OverviewCitiesScreen from \"../CheckoutScreens/OverviewCitiesScreen\";\r\nimport Card from \"../../../assets/Board.jpg\";\r\n\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nconst SelfPlanForm = ({ navigation }) => {\r\n  const { cities, userInfo } = useContext(AuthContext);\r\n  const [destination, setDestination] = useState(\"\");\r\n  const [selectedCity, setSelectedCity] = useState([]);\r\n  const [selectedCityNames, setSelectedCityNames] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [tourType, setTourType] = useState(\"\");\r\n  const [totalDays, setTotalDays] = useState(0);\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [selectedState, setSelectedState] = useState(\"\");\r\n  const [adult, setAdult] = useState(0);\r\n  const [children, setChildren] = useState(0);\r\n  const [step, setStep] = useState(2);\r\n  const [dcities, setDCities] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [hotelType, setHoteltype] = useState(\"\");\r\n  const [travelmode, setTravelmode] = useState(\"\");\r\n  const [flightType, setFlightType] = useState(\"\");\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [date, setDate] = useState();\r\n  const [month, setMonth] = useState();\r\n  const [year, setYear] = useState();\r\n  let random;\r\n  let formatedMonth;\r\n\r\n  const renderCity = ({ item }) => (\r\n    <View style={{ alignItems: \"center\", width: \"33%\" }}>\r\n      <View>\r\n        {selectedCityNames.includes(item.cityName) ? (\r\n          <Feather\r\n            name=\"check-circle\"\r\n            size={24}\r\n            color=\"green\"\r\n            style={{\r\n              bottom: 20,\r\n              right: 0,\r\n              zIndex: 10,\r\n              position: \"absolute\",\r\n            }}\r\n          />\r\n        ) : null}\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            if (selectedCityNames.includes(item.cityName)) {\r\n              const filter = selectedCity.filter((sa) => {\r\n                return sa.cityName !== item.cityName;\r\n              });\r\n              setSelectedCity(filter);\r\n              const filters = selectedCityNames.filter((sa) => {\r\n                return sa !== item.cityName;\r\n              });\r\n              setSelectedCityNames(filters);\r\n            } else {\r\n              setSelectedCityNames([...selectedCityNames, item.cityName]);\r\n              setSelectedCity([\r\n                ...selectedCity,\r\n                {\r\n                  cityName: item.cityName,\r\n                  imageUrl: item.imageUrl,\r\n                  days: 0,\r\n                  countryName: item.countryName,\r\n                },\r\n              ]);\r\n            }\r\n          }}\r\n        >\r\n          <ProgressiveImage\r\n            style={styles.cityImage}\r\n            source={{ uri: item.imageUrl }}\r\n          />\r\n        </TouchableOpacity>\r\n        <Text style={{ textAlign: \"center\", marginBottom: 5 }}>\r\n          {item.cityName}\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  // const memoCity = useMemo(() => renderCity, [city]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted) {\r\n      random = Math.floor((Math.random() + 4) * 345334);\r\n      const requestDate = new Date();\r\n      let currentYear = requestDate.getFullYear();\r\n      setDate(requestDate.getDate());\r\n      setMonth(requestDate.getMonth() + 1);\r\n      setYear(currentYear.toString().slice(2, 5));\r\n      formatedMonth = month < 10 ? \"0\" + month : month;\r\n    }\r\n    return () => (mounted = false);\r\n  }, []);\r\n\r\n  const getCity = () => {\r\n    if (destination === \"\") return cities.reverse();\r\n    const c = cities.filter((c) => {\r\n      return c.cityName\r\n        .trim()\r\n        .toUpperCase()\r\n        .includes(destination.toUpperCase().trim());\r\n    });\r\n\r\n    const countries = cities.filter((c) => {\r\n      return c.countryName\r\n        .trim()\r\n        .toUpperCase()\r\n        .includes(destination.toUpperCase().trim());\r\n    });\r\n\r\n    const result = [...c, ...countries];\r\n    return result;\r\n  };\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      setLoaded(true);\r\n\r\n      const stateResponse = await touron.get(`/state`);\r\n      setStates(stateResponse.data);\r\n      // console.log(\"object\", stateResponse.data);\r\n      setLoaded(false);\r\n    } catch (err) {\r\n      console.log(err, \"err\");\r\n    }\r\n  };\r\n\r\n  const getDomesticCities = async (name) => {\r\n    // console.log(`name`, name.length);\r\n    try {\r\n      setLoaded(true);\r\n      const domesticResponse = await touron.get(`/statecity/statename/${name}`);\r\n\r\n      setDCities(domesticResponse.data);\r\n      console.log(`object`, domesticResponse.data);\r\n      setLoaded(false);\r\n    } catch (err) {\r\n      console.log(err, \"err\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted) {\r\n      getStates();\r\n    }\r\n    return () => (mounted = false);\r\n  }, []);\r\n\r\n  const calculateTotalDays = () => {\r\n    let count = 0;\r\n    selectedCity.forEach((c) => {\r\n      return (count = count + c.days * 1);\r\n    });\r\n    // console.log(\"count\", count);\r\n    return count;\r\n  };\r\n\r\n  const filterState = () => {\r\n    // console.log(`destination`, destination);\r\n\r\n    if (destination === \"\") return states;\r\n\r\n    const state = states.filter((c) => {\r\n      return c.stateName\r\n        .trim()\r\n        .toUpperCase()\r\n        .includes(destination.toUpperCase().trim());\r\n    });\r\n\r\n    return state;\r\n  };\r\n  const submitD = () => {\r\n    database()\r\n      .ref(`self-planned-tours`)\r\n      .push({\r\n        requestID: `TO-${date}${formatedMonth}${year}-${random}`,\r\n        tourType: tourType,\r\n        userId: userInfo.userID,\r\n        adult: adult,\r\n        children: children,\r\n        fromData: fromDate,\r\n        toData: toDate,\r\n        selectedCities: selectedCity,\r\n        name: userInfo.name,\r\n        phoneNumber: userInfo.phoneNumber,\r\n        totalDays: totalDays,\r\n        hotelType: hotelType,\r\n        travelmode: travelmode,\r\n        flightType: flightType,\r\n        selectedState: selectedState,\r\n        tourDetails: [],\r\n        tourCategory: \"Self Plan Tour\",\r\n        status: \"Query Received\",\r\n        tourCost: 0,\r\n      })\r\n      .then((data) => {\r\n        setStep(5);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const renderDomesticForm = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <View style={styles.container}>\r\n            <View style={styles.background}>\r\n              <Feather name=\"search\" style={styles.iconStyle}></Feather>\r\n              <TextInput\r\n                style={styles.inputStyle}\r\n                placeholder=\"Search\"\r\n                onChangeText={(text) => setDestination(text)}\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n              />\r\n            </View>\r\n\r\n            {!loader ? (\r\n              <ActivityIndicator\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                size=\"large\"\r\n              />\r\n            ) : (\r\n              <ScrollView showsVerticalScrollIndicator={false}>\r\n                <View\r\n                  style={{\r\n                    width: WIDTH,\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    flexWrap: \"wrap\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {filterState().map((item, index) => {\r\n                    return (\r\n                      <View style={{ alignItems: \"center\" }} key={index}>\r\n                        {selectedState === item.stateName ? (\r\n                          <Feather\r\n                            name=\"check-circle\"\r\n                            size={24}\r\n                            color=\"green\"\r\n                            style={{\r\n                              bottom: 20,\r\n                              right: 0,\r\n                              zIndex: 10,\r\n                              position: \"absolute\",\r\n                            }}\r\n                          />\r\n                        ) : null}\r\n                        <View>\r\n                          <TouchableOpacity\r\n                            onPress={() => setSelectedState(item.stateName)}\r\n                          >\r\n                            <ProgressiveImage\r\n                              style={styles.cityImage}\r\n                              source={{ uri: item.imageUrl }}\r\n                            />\r\n                          </TouchableOpacity>\r\n                          <Text\r\n                            style={{ textAlign: \"center\", marginBottom: 5 }}\r\n                          >\r\n                            {item.stateName}\r\n                          </Text>\r\n                        </View>\r\n                      </View>\r\n                    );\r\n                  })}\r\n                </View>\r\n              </ScrollView>\r\n            )}\r\n\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                getDomesticCities(selectedState);\r\n                setStep(step + 1);\r\n              }}\r\n            >\r\n              <View style={styles.proceedButton}>\r\n                <Text\r\n                  style={{ fontSize: 20, color: \"white\", fontFamily: \"Andika\" }}\r\n                >\r\n                  Select State and Proceed\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n        );\r\n      case 2:\r\n        return (\r\n          <View style={styles.container}>\r\n            <View>\r\n              <Text\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontSize: 20,\r\n                  fontFamily: \"Andika\",\r\n                }}\r\n              >\r\n                Select Citiess\r\n              </Text>\r\n            </View>\r\n\r\n            {loaded ? (\r\n              <ActivityIndicator\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                size=\"large\"\r\n              />\r\n            ) : (\r\n              <ScrollView showsVerticalScrollIndicator={false}>\r\n                {dcities.length === 0 ? (\r\n                  <View\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      flex: 1,\r\n                      backgroundColor: \"#fff\",\r\n                      height: HEIGHT / 1.2,\r\n                      width: WIDTH,\r\n                    }}\r\n                  >\r\n                    <View>\r\n                      <Image\r\n                        style={{ width: WIDTH * 0.9, height: WIDTH * 0.9 }}\r\n                        source={require(\"../../../assets/oops.jpg\")}\r\n                      />\r\n                    </View>\r\n                    <Text style={{ fontFamily: \"Avenir\", fontSize: 23 }}>\r\n                      No Cities Found\r\n                    </Text>\r\n                  </View>\r\n                ) : (\r\n                  <View\r\n                    style={{\r\n                      width: WIDTH,\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      flexWrap: \"wrap\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    {dcities.map((t, index) => {\r\n                      return (\r\n                        <View style={{ alignItems: \"center\" }} key={index}>\r\n                          {selectedCityNames.includes(t.cityName) ? (\r\n                            <Feather\r\n                              name=\"check-circle\"\r\n                              size={24}\r\n                              color=\"green\"\r\n                              style={{\r\n                                bottom: 20,\r\n                                right: 10,\r\n                                zIndex: 10,\r\n                                position: \"absolute\",\r\n                              }}\r\n                            />\r\n                          ) : null}\r\n                          <View>\r\n                            <TouchableOpacity\r\n                              onPress={() => {\r\n                                if (selectedCityNames.includes(t.cityName)) {\r\n                                  const filter = selectedCity.filter((sa) => {\r\n                                    return sa.cityName !== t.cityName;\r\n                                  });\r\n                                  setSelectedCity(filter);\r\n                                  const filters = selectedCityNames.filter(\r\n                                    (sa) => {\r\n                                      return sa !== t.cityName;\r\n                                    }\r\n                                  );\r\n                                  setSelectedCityNames(filters);\r\n                                } else {\r\n                                  setSelectedCity([\r\n                                    ...selectedCity,\r\n                                    {\r\n                                      cityName: t.cityName,\r\n                                      days: 0,\r\n                                      stateName: t.stateName,\r\n                                      idealDays: t.idealDays,\r\n                                      suggestedCombinations:\r\n                                        t.suggestedCombinations,\r\n                                      imageUrl: t.imageUrl,\r\n                                    },\r\n                                  ]);\r\n                                  setSelectedCityNames([\r\n                                    ...selectedCityNames,\r\n                                    t.cityName,\r\n                                  ]);\r\n                                }\r\n                              }}\r\n                            >\r\n                              <ProgressiveImage\r\n                                style={styles.cityImage}\r\n                                source={{ uri: t.imageUrl }}\r\n                              />\r\n                            </TouchableOpacity>\r\n                            <Text\r\n                              style={{ textAlign: \"center\", marginBottom: 5 }}\r\n                            >\r\n                              {t.cityName}\r\n                            </Text>\r\n                          </View>\r\n                        </View>\r\n                      );\r\n                    })}\r\n                  </View>\r\n                )}\r\n              </ScrollView>\r\n            )}\r\n\r\n            {selectedCity.length === 0 ? null : (\r\n              <TouchableOpacity onPress={() => setStep(3)}>\r\n                <View style={styles.proceedButton}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 20,\r\n                      color: \"white\",\r\n                      fontFamily: \"Andika\",\r\n                    }}\r\n                  >\r\n                    Select State and Proceed\r\n                  </Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n        );\r\n      case 3:\r\n        return (\r\n          <ScrollView>\r\n            <View style={{ flex: 1, backgroundColor: \"#F1F3F6\" }}>\r\n              <View>\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    fontSize: 20,\r\n                    fontFamily: \"Andika\",\r\n                  }}\r\n                >\r\n                  Overview of the seletecd cities\r\n                </Text>\r\n              </View>\r\n\r\n              {selectedCity.map((item, index) => (\r\n                <Surface style={styles.surfaces} key={index}>\r\n                  <View>\r\n                    <Surface style={styles.surface}>\r\n                      <Image\r\n                        style={styles.cityimage}\r\n                        source={{ uri: item.imageUrl }}\r\n                      />\r\n                    </Surface>\r\n\r\n                    <Text style={styles.cityName}>{item.cityName}</Text>\r\n                  </View>\r\n\r\n                  <View>\r\n                    <Image\r\n                      style={{ height: 40, width: 40 }}\r\n                      source={require(\"../../../assets/Calendar.png\")}\r\n                    />\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      marginHorizontal: 20,\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        fontSize: 14,\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      Enter No Of Days\r\n                    </Text>\r\n\r\n                    <View style={styles.inputContainer}>\r\n                      <TextInput\r\n                        keyboardType=\"number-pad\"\r\n                        // value={item.days.toString()}\r\n                        onChangeText={(value) => {\r\n                          const index = selectedCity.findIndex((a) => {\r\n                            return a.cityName === item.cityName;\r\n                          });\r\n                          const ne = [...selectedCity];\r\n                          ne[index].days = value * 1;\r\n                          setSelectedCity(ne);\r\n                          setTotalDays(calculateTotalDays());\r\n                        }}\r\n                        style={{\r\n                          fontSize: 25,\r\n                          marginTop: 5,\r\n                          height: HEIGHT / 25,\r\n                          width: WIDTH / 9,\r\n                          textAlign: \"center\",\r\n                        }}\r\n                        editable={true}\r\n                      />\r\n                    </View>\r\n                  </View>\r\n                </Surface>\r\n              ))}\r\n\r\n              <View style={{ width: WIDTH, marginLeft: -20 }}>\r\n                <Image style={styles.calendarImage} source={Card} />\r\n                <View\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    left: 20,\r\n                  }}\r\n                >\r\n                  <View style={styles.embark}>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: WIDTH / 22,\r\n                        color: \"#F1F3F6\",\r\n                        fontFamily: \"Andika\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      When do you embark your journey\r\n                    </Text>\r\n                  </View>\r\n                  <View style={styles.dateContainer}>\r\n                    <View>\r\n                      <View style={styles.from}>\r\n                        <Text style={{ fontSize: 20, color: \"#fff\" }}>\r\n                          Onward\r\n                        </Text>\r\n                      </View>\r\n                      <View style={styles.picker}>\r\n                        <DatePicker\r\n                          style={{ width: 200 }}\r\n                          date={fromDate}\r\n                          mode=\"date\"\r\n                          placeholder=\"\"\r\n                          format=\"YYYY-MM-DD\"\r\n                          minDate={moment()\r\n                            .add(14, \"days\")\r\n                            .format(\"YYYY-MM-DD\")}\r\n                          confirmBtnText=\"Confirm\"\r\n                          cancelBtnText=\"Cancel\"\r\n                          onDateChange={(date) => {\r\n                            const dates = moment(date)\r\n                              .add(totalDays - 1, \"days\")\r\n                              .format(\"YYYY-MM-DD\");\r\n                            setFromDate(date);\r\n                            setToDate(dates);\r\n                          }}\r\n                          showIcon={false}\r\n                          customStyles={{\r\n                            dateInput: {\r\n                              borderWidth: 0,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </View>\r\n                    </View>\r\n                    <View>\r\n                      <View style={styles.from}>\r\n                        <Text style={{ fontSize: 20, color: \"#fff\" }}>\r\n                          Return\r\n                        </Text>\r\n                      </View>\r\n                      <View style={styles.picker}>\r\n                        {toDate === \"\" ? (\r\n                          <Text style={{ fontSize: 15, color: \"#333\" }}>\r\n                            Select Date\r\n                          </Text>\r\n                        ) : (\r\n                          <Text style={{ fontSize: 15, color: \"#333\" }}>\r\n                            {toDate}\r\n                          </Text>\r\n                        )}\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                  <View style={styles.numbers}>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 20,\r\n                        textAlign: \"center\",\r\n                        fontFamily: \"Avenir\",\r\n                      }}\r\n                    >\r\n                      No of Persons\r\n                    </Text>\r\n                    <View\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-around\",\r\n                        marginVertical: 1,\r\n                      }}\r\n                    >\r\n                      <View style={{ alignItems: \"center\" }}>\r\n                        <Text style={styles.personText}>Adults</Text>\r\n                        <Image\r\n                          style={styles.image}\r\n                          source={{\r\n                            uri: \"https://image.freepik.com/free-vector/illustration-with-young-people-concept_23-2148467324.jpg\",\r\n                          }}\r\n                        />\r\n                        <View style={styles.personContainer}>\r\n                          <TouchableOpacity\r\n                            onPress={() => {\r\n                              if (adult > 0) setAdult(adult - 1);\r\n                            }}\r\n                          >\r\n                            <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>\r\n                              -\r\n                            </Text>\r\n                          </TouchableOpacity>\r\n                          <View style={styles.inputContainer}>\r\n                            <TextInput\r\n                              keyboardType=\"number-pad\"\r\n                              style={{\r\n                                fontSize: 20,\r\n                                marginTop: 10,\r\n                              }}\r\n                              value={adult.toString()}\r\n                              editable={true}\r\n                              onChangeText={(value) => setAdult(+value)}\r\n                            />\r\n                          </View>\r\n                          <TouchableOpacity onPress={() => setAdult(adult + 1)}>\r\n                            <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>\r\n                              +\r\n                            </Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      </View>\r\n                      <View style={{ alignItems: \"center\" }}>\r\n                        <Text style={styles.personText}>Childrens</Text>\r\n                        <Image\r\n                          style={styles.image}\r\n                          source={{\r\n                            uri: \"https://image.freepik.com/free-vector/smiling-boy-girl-kids-holding-hands-childhood-friendship-concept-love-romance-children-cartoon-characters-flat-vector-illustration-isolated-white-background_71593-450.jpg\",\r\n                          }}\r\n                        />\r\n                        <View style={styles.personContainer}>\r\n                          <TouchableOpacity\r\n                            onPress={() => {\r\n                              if (children > 0) setChildren(children - 1);\r\n                            }}\r\n                          >\r\n                            <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>\r\n                              -\r\n                            </Text>\r\n                          </TouchableOpacity>\r\n                          <View style={styles.inputContainer}>\r\n                            <TextInput\r\n                              style={{\r\n                                marginTop: 10,\r\n                                fontSize: 20,\r\n                              }}\r\n                              editable={true}\r\n                              value={children.toString()}\r\n                              onChangeText={(value) => setChildren(+value)}\r\n                              keyboardType=\"number-pad\"\r\n                            />\r\n                          </View>\r\n                          <TouchableOpacity\r\n                            onPress={() => setChildren(children + 1)}\r\n                          >\r\n                            <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>\r\n                              +\r\n                            </Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      marginTop:\r\n                        HEIGHT < 550 ? -WIDTH / 10 - 20 : -WIDTH / 10 - 20,\r\n                    }}\r\n                    onPress={() => {\r\n                      setStep(step + 1);\r\n                    }}\r\n                  >\r\n                    <View style={styles.buttonContainer}>\r\n                      <Text style={styles.exploreButton}>Proceed</Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </ScrollView>\r\n        );\r\n      case 4:\r\n        const hotels = [\"3 Star Hotel\", \"4 Star Hotel\", \"5 Star Hotel\"];\r\n        const tourtype = [\"Train\", \"Flight\"];\r\n\r\n        const flighttypes = [\"Non Stop\", \"Low Fare\"];\r\n        return (\r\n          <View\r\n            style={{\r\n              // justifyContent: \"center\",\r\n              width: WIDTH,\r\n              alignItems: \"center\",\r\n              flex: 1,\r\n              marginTop: 30,\r\n            }}\r\n          >\r\n            <View style={{ alignItems: \"flex-start\", marginBottom: 15 }}>\r\n              <Text\r\n                style={{ fontFamily: \"Andika\", fontSize: 20, paddingLeft: 20 }}\r\n              >\r\n                Select the type of hotel ?\r\n              </Text>\r\n              <View style={styles.ftypecontainer}>\r\n                {hotels.map((t, index) => (\r\n                  <TouchableOpacity onPress={() => setHoteltype(t)} key={index}>\r\n                    <Surface\r\n                      style={{\r\n                        margin: 10,\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        elevation: 5,\r\n                        height: WIDTH / 4,\r\n                        borderRadius: 20,\r\n                        width: WIDTH / 4,\r\n                      }}\r\n                    >\r\n                      {hotelType === t ? (\r\n                        <View style={styles.tick}>\r\n                          <Text>✔️</Text>\r\n                        </View>\r\n                      ) : null}\r\n\r\n                      <Text\r\n                        style={{ fontFamily: \"Andika\", textAlign: \"center\" }}\r\n                      >\r\n                        {t}\r\n                      </Text>\r\n                    </Surface>\r\n                  </TouchableOpacity>\r\n                ))}\r\n              </View>\r\n            </View>\r\n            <View style={{ alignItems: \"flex-start\", marginBottom: 15 }}>\r\n              <Text\r\n                style={{ fontFamily: \"Andika\", fontSize: 20, paddingLeft: 20 }}\r\n              >\r\n                How do you want to travel ?\r\n              </Text>\r\n              <View style={styles.ftypecontainer}>\r\n                {tourtype.map((t, index) => (\r\n                  <TouchableOpacity\r\n                    onPress={() => setTravelmode(t)}\r\n                    key={index}\r\n                  >\r\n                    <Surface style={styles.ftype}>\r\n                      {travelmode === t ? (\r\n                        <View style={styles.tick}>\r\n                          <Text>✔️</Text>\r\n                        </View>\r\n                      ) : null}\r\n\r\n                      <Text\r\n                        style={{ fontFamily: \"Andika\", textAlign: \"center\" }}\r\n                      >\r\n                        {t}\r\n                      </Text>\r\n                    </Surface>\r\n                  </TouchableOpacity>\r\n                ))}\r\n              </View>\r\n            </View>\r\n            {travelmode === \"Flight\" ? (\r\n              <View style={{ alignItems: \"flex-start\", marginBottom: 15 }}>\r\n                <Text\r\n                  style={{\r\n                    fontFamily: \"Andika\",\r\n                    fontSize: 20,\r\n                    paddingLeft: 20,\r\n                  }}\r\n                >\r\n                  Flight Type\r\n                </Text>\r\n                <View style={styles.ftypecontainer}>\r\n                  {flighttypes.map((t, index) => (\r\n                    <TouchableOpacity\r\n                      onPress={() => setFlightType(t)}\r\n                      key={index}\r\n                    >\r\n                      <Surface style={styles.ftype}>\r\n                        {flightType === t ? (\r\n                          <View style={styles.tick}>\r\n                            <Text>✔️</Text>\r\n                          </View>\r\n                        ) : null}\r\n\r\n                        <Text\r\n                          style={{ fontFamily: \"Andika\", textAlign: \"center\" }}\r\n                        >\r\n                          {t}\r\n                        </Text>\r\n                      </Surface>\r\n                    </TouchableOpacity>\r\n                  ))}\r\n                </View>\r\n              </View>\r\n            ) : null}\r\n            <TouchableOpacity\r\n              onPress={submitD}\r\n              style={{\r\n                // marginTop: 0,\r\n                bottom: 10,\r\n                position: \"absolute\",\r\n              }}\r\n            >\r\n              <View style={styles.buttonContainer}>\r\n                <Text style={styles.exploreButton}>Submit</Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n        );\r\n      case 5:\r\n        return <SubmittedQuery navigation={navigation} type={\"Self Plan\"} />;\r\n    }\r\n  };\r\n\r\n  const prevStep = () => {\r\n    setStep(step - 1);\r\n  };\r\n\r\n  const renderInternational = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <View style={styles.container}>\r\n            <View\r\n              style={{\r\n                width: WIDTH * 0.9,\r\n                alignItems: \"flex-end\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                marginHorizontal: 30,\r\n                paddingBottom: 10,\r\n                position: \"relative\",\r\n                marginTop: Platform.OS == \"android\" ? HEIGHT / 14 : 80,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setTourType(\"\");\r\n                }}\r\n              >\r\n                <View>\r\n                  <AntDesign name=\"arrowleft\" size={28} />\r\n                </View>\r\n              </TouchableOpacity>\r\n\r\n              <Text\r\n                style={{\r\n                  fontSize: 20,\r\n                  fontFamily: \"NewYorkl\",\r\n                  flex: 0.7,\r\n                  marginBottom: Platform.OS == \"ios\" ? 5 : 0,\r\n                }}\r\n              >\r\n                Select your cities\r\n              </Text>\r\n\r\n              <TouchableOpacity>\r\n                <View>{/* <AntDesign name=\"arrowright\" size={28} /> */}</View>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.background}>\r\n              <Feather name=\"search\" style={styles.iconStyle}></Feather>\r\n              <TextInput\r\n                style={styles.inputStyle}\r\n                placeholder=\"Search\"\r\n                onChangeText={(value) => setDestination(value)}\r\n                onSubmitEditing={getCity}\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n              />\r\n            </View>\r\n            {selectedCity.length === 0 ? null : (\r\n              <TouchableOpacity\r\n                style={{ position: \"absolute\", bottom: 0, zIndex: 10 }}\r\n                onPress={() => {\r\n                  setStep(2);\r\n                }}\r\n              >\r\n                <View style={styles.proceedButton}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 20,\r\n                      color: \"white\",\r\n                      fontFamily: \"Andika\",\r\n                    }}\r\n                  >\r\n                    Proceed\r\n                  </Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            )}\r\n            {!loader ? (\r\n              <ActivityIndicator\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                size=\"large\"\r\n              />\r\n            ) : (\r\n              <ScrollView showsVerticalScrollIndicator={false}>\r\n                <View\r\n                  style={{\r\n                    width: WIDTH,\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    flexWrap: \"wrap\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {getCity().map((item, index) => {\r\n                    return (\r\n                      <View style={{ alignItems: \"center\" }} key={index}>\r\n                        <View>\r\n                          {selectedCityNames.includes(item.cityName) ? (\r\n                            <Feather\r\n                              name=\"check-circle\"\r\n                              size={24}\r\n                              color=\"green\"\r\n                              style={{\r\n                                bottom: 20,\r\n                                right: 0,\r\n                                zIndex: 10,\r\n                                position: \"absolute\",\r\n                              }}\r\n                            />\r\n                          ) : null}\r\n                          <TouchableOpacity\r\n                            onPress={() => {\r\n                              if (selectedCityNames.includes(item.cityName)) {\r\n                                const filter = selectedCity.filter((sa) => {\r\n                                  return sa.cityName !== item.cityName;\r\n                                });\r\n                                setSelectedCity(filter);\r\n                                const filters = selectedCityNames.filter(\r\n                                  (sa) => {\r\n                                    return sa !== item.cityName;\r\n                                  }\r\n                                );\r\n                                setSelectedCityNames(filters);\r\n                              } else {\r\n                                setSelectedCityNames([\r\n                                  ...selectedCityNames,\r\n                                  item.cityName,\r\n                                ]);\r\n                                setSelectedCity([\r\n                                  ...selectedCity,\r\n                                  {\r\n                                    cityName: item.cityName,\r\n                                    imageUrl: item.imageUrl,\r\n                                    days: 0,\r\n                                    countryName: item.countryName,\r\n                                  },\r\n                                ]);\r\n                              }\r\n                            }}\r\n                          >\r\n                            <ProgressiveImage\r\n                              style={styles.cityImage}\r\n                              source={{ uri: item.imageUrl }}\r\n                            />\r\n                          </TouchableOpacity>\r\n                          <Text\r\n                            style={{ textAlign: \"center\", marginBottom: 5 }}\r\n                          >\r\n                            {item.cityName}\r\n                          </Text>\r\n                        </View>\r\n                      </View>\r\n                    );\r\n                  })}\r\n                </View>\r\n              </ScrollView>\r\n            )}\r\n          </View>\r\n        );\r\n      case 2:\r\n        return (\r\n          <OverviewCitiesScreen\r\n            selectedCitys={selectedCity}\r\n            selectedCityNamess={selectedCityNames}\r\n            setStep={() => setStep(3)}\r\n            prevStep={() => prevStep()}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <SelfTourHome\r\n            selectedCitys={selectedCity}\r\n            selectedCityNamess={selectedCityNames}\r\n            setStep={() => setStep(4)}\r\n            prevStep={() => prevStep()}\r\n            navigation={navigation}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <OverviewToursScreen\r\n            selectedCitys={selectedCity}\r\n            prevStep={() => prevStep()}\r\n            setStep={() => setStep(5)}\r\n          />\r\n        );\r\n      case 5:\r\n        return (\r\n          <ProgressScreen\r\n            prevStep={() => prevStep()}\r\n            selectedCitys={selectedCity}\r\n            setStep={() => setStep(6)}\r\n          />\r\n        );\r\n      case 6:\r\n        return <SubmittedQuery navigation={navigation} type={\"Self Plan\"} />;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {tourType === \"\" ? (\r\n        <View style={{ marginTop: Platform.OS === \"ios\" ? 30 : 0 }}>\r\n          <Tourtype\r\n            imgSrc1={require(\"../../../assets/planned-tour/india.png\")}\r\n            imgScr2={require(\"../../../assets/planned-tour/International.png\")}\r\n            nextStep={() => setStep(1)}\r\n            prevStep={() => navigation.goBack()}\r\n            tourType={tourType}\r\n            tourName={\"Self Tour\"}\r\n            setDomestic={() => setTourType(\"Domestic\")}\r\n            setInternational={() => setTourType(\"International\")}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <>\r\n          {tourType === \"Domestic\" ? (\r\n            <>\r\n              {step === 5 ? null : (\r\n                <View\r\n                  style={{\r\n                    alignItems: \"flex-end\",\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    marginHorizontal: WIDTH / 15,\r\n                    marginVertical: Platform.OS === \"ios\" ? 30 : 20,\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      if (step > 1) setStep(step - 1);\r\n                      else setTourType(\"\");\r\n                    }}\r\n                  >\r\n                    <View>\r\n                      <AntDesign name=\"arrowleft\" size={28} />\r\n                    </View>\r\n                  </TouchableOpacity>\r\n\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 20,\r\n                      fontFamily: \"NewYorkl\",\r\n                      marginTop: Platform.OS == \"android\" ? 30 : 40,\r\n                    }}\r\n                  >\r\n                    Domestic\r\n                  </Text>\r\n\r\n                  <TouchableOpacity onPress={() => setStep(step + 1)}>\r\n                    <View>\r\n                      <AntDesign name=\"arrowright\" size={28} />\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n              {renderDomesticForm()}\r\n            </>\r\n          ) : (\r\n            <>{renderInternational()}</>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelfPlanForm;\r\n\r\nconst styles = StyleSheet.create({\r\n  picker: {\r\n    width: WIDTH / 3,\r\n    height: WIDTH / 8,\r\n    borderRadius: 15,\r\n    backgroundColor: \"#f1f2f6\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  from: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  dateContainer: {\r\n    width: WIDTH,\r\n    alignItems: \"center\",\r\n    marginVertical: 5,\r\n    justifyContent: \"space-around\",\r\n    position: \"absolute\",\r\n    flexDirection: \"row\",\r\n    bottom: HEIGHT * 0.5,\r\n  },\r\n  embark: {\r\n    position: \"absolute\",\r\n    bottom: HEIGHT / 1.45,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 1,\r\n  },\r\n  calendarImage: {\r\n    marginTop: 0,\r\n    height: HEIGHT / 1.3,\r\n    width: WIDTH * 1.1,\r\n    position: \"relative\",\r\n  },\r\n  cityimage: {\r\n    width: 100,\r\n    height: 100,\r\n    margin: 10,\r\n    borderRadius: 20,\r\n  },\r\n  surfaces: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginHorizontal: 20,\r\n    marginVertical: 10,\r\n    height: 160,\r\n    borderRadius: 20,\r\n    width: WIDTH * 0.9,\r\n    elevation: 8,\r\n    justifyContent: \"space-between\",\r\n  },\r\n  numbers: {\r\n    position: \"absolute\",\r\n    height: HEIGHT / 3.7,\r\n    width: WIDTH * 0.9,\r\n    marginHorizontal: 20,\r\n    zIndex: 1,\r\n    bottom: HEIGHT * 0.11,\r\n    borderRadius: 20,\r\n  },\r\n  personText: {\r\n    textAlign: \"center\",\r\n    fontSize: 18,\r\n    fontFamily: \"Andika\",\r\n  },\r\n  personContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    width: WIDTH / 3,\r\n    alignItems: \"center\",\r\n  },\r\n  image: {\r\n    height: HEIGHT / 10,\r\n    width: WIDTH / 4,\r\n    marginVertical: 10,\r\n  },\r\n  inputContainer: {\r\n    backgroundColor: \"#f1f2f6\",\r\n    marginTop: 5,\r\n    height: HEIGHT / 25,\r\n    width: WIDTH / 9,\r\n    borderRadius: 10,\r\n  },\r\n  buttonContainer: {\r\n    backgroundColor: \"#626E7B\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    width: WIDTH * 0.9,\r\n    marginRight: 15,\r\n    marginLeft: 10,\r\n    marginBottom: 1,\r\n  },\r\n  exploreButton: {\r\n    fontSize: 15,\r\n    color: \"white\",\r\n    fontFamily: \"Avenir\",\r\n    padding: WIDTH / 25,\r\n  },\r\n  cityName: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 14,\r\n    marginBottom: 10,\r\n    textAlign: \"center\",\r\n  },\r\n  inputContainer: {\r\n    marginHorizontal: 5,\r\n    alignItems: \"center\",\r\n    width: WIDTH / 6,\r\n    height: WIDTH / 8,\r\n    backgroundColor: \"#F1F3F6\",\r\n    borderRadius: 15,\r\n    marginVertical: 10,\r\n  },\r\n  surface: {\r\n    padding: 8,\r\n    height: 100,\r\n    borderRadius: 20,\r\n    width: 100,\r\n    marginHorizontal: 20,\r\n    marginVertical: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    elevation: 20,\r\n  },\r\n  cityImage: {\r\n    width: 100,\r\n    height: 100,\r\n    margin: 10,\r\n    borderRadius: 100,\r\n  },\r\n  proceedButton: {\r\n    width: WIDTH * 0.9,\r\n    backgroundColor: \"#626E7B\",\r\n    borderRadius: 10,\r\n    padding: 5,\r\n    alignItems: \"center\",\r\n    marginBottom: 5,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  background: {\r\n    backgroundColor: \"#fff\",\r\n    height: HEIGHT / 15,\r\n    borderRadius: 20,\r\n    flexDirection: \"row\",\r\n    marginVertical: 10,\r\n    marginHorizontal: WIDTH / 18,\r\n  },\r\n  inputStyle: {\r\n    fontSize: 18,\r\n    flex: 1,\r\n  },\r\n  iconStyle: {\r\n    fontSize: 30,\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 15,\r\n  },\r\n\r\n  ftype: {\r\n    margin: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    elevation: 5,\r\n    height: WIDTH / 3,\r\n    borderRadius: 20,\r\n    width: WIDTH / 3,\r\n  },\r\n  ftypecontainer: {\r\n    alignItems: \"center\",\r\n    width: WIDTH,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  tick: {\r\n    top: 0,\r\n    right: 0,\r\n    borderBottomLeftRadius: 20,\r\n    position: \"absolute\",\r\n    backgroundColor: \"#00d8d6\",\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: 40,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}