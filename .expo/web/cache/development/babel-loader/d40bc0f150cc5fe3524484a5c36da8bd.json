{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Tour On\\\\Touron-Mobileapp\\\\src\\\\Reusable Components\\\\Slider.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useWindowDimensions } from \"react-native-web/dist/index\";\nvar HEIGHT = Dimensions.get(\"window\").height;\nvar WIDTH = Dimensions.get(\"window\").width;\n\nvar Slider = function Slider(_ref) {\n  var data = _ref.data,\n      renderItem = _ref.renderItem,\n      key = _ref.key,\n      dotStyle = _ref.dotStyle,\n      showDots = _ref.showDots,\n      setActiveSlide = _ref.setActiveSlide;\n  console.log(\"objecat\", typeof setActiveSlide);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentIndex = _useState2[0],\n      setCurrentIndex = _useState2[1];\n\n  var scrollX = useRef(new Animated.Value(0)).current;\n  var viewConfig = useRef({\n    viewAreaCoveragePercentThreshold: 50\n  }).current;\n  var slidesRef = useRef(null);\n  var viewableItemChanged = useRef(function (_ref2) {\n    var viewableItems = _ref2.viewableItems;\n    setCurrentIndex(viewableItems[0].index);\n\n    if (typeof setActiveSlide == \"function\") {\n      console.log(\"calling\");\n      setActiveSlide(viewableItems[0].index);\n    }\n  }).current;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item, i) {\n      return i.toString();\n    },\n    renderItem: renderItem,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    pagingEnabled: true,\n    scrollEventThrottle: 32,\n    onScroll: new Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          x: scrollX\n        }\n      }\n    }], {\n      useNativeDriver: false\n    }),\n    bounces: true,\n    onViewableItemsChanged: viewableItemChanged,\n    viewabilityConfig: viewConfig,\n    ref: slidesRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), showDots && React.createElement(View, {\n    style: {\n      marginTop: 20,\n      flexDirection: \"row\",\n      height: 64\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, data.map(function (s, i) {\n    var inputRange = [(i - 1) * width, i * width, (i + 1) * width];\n    var dotWidth = scrollX.interpolate({\n      inputRange: inputRange,\n      outputRange: [10, 20, 10],\n      extrapolate: \"clamp\"\n    });\n    var opacity = scrollX.interpolate({\n      inputRange: inputRange,\n      outputRange: [0.3, 1, 0.3],\n      extrapolate: \"clamp\"\n    });\n    return React.createElement(Animated.View, {\n      style: [dotStyle, {\n        width: dotWidth,\n        opacity: opacity\n      }],\n      key: i.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    });\n  }))));\n};\n\nexport default Slider;\nvar styles = new StyleSheet.create({\n  dot: {\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: \"#ff6b81\",\n    marginHorizontal: 8\n  },\n  loginButton: {\n    marginVertical: 10,\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 55,\n    paddingVertical: 15,\n    borderRadius: 10\n  },\n  signupButton: {\n    marginVertical: 20,\n    backgroundColor: \"black\",\n    paddingHorizontal: 45,\n    paddingVertical: 15,\n    borderRadius: 10\n  },\n  buttonContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    width: WIDTH,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Tour On/Touron-Mobileapp/src/Reusable Components/Slider.js"],"names":["React","useState","useRef","useEffect","useWindowDimensions","HEIGHT","Dimensions","get","height","WIDTH","width","Slider","data","renderItem","key","dotStyle","showDots","setActiveSlide","console","log","currentIndex","setCurrentIndex","scrollX","Animated","Value","current","viewConfig","viewAreaCoveragePercentThreshold","slidesRef","viewableItemChanged","viewableItems","index","justifyContent","alignItems","flex","item","i","toString","event","nativeEvent","contentOffset","x","useNativeDriver","marginTop","flexDirection","map","s","inputRange","dotWidth","interpolate","outputRange","extrapolate","opacity","styles","StyleSheet","create","dot","borderRadius","backgroundColor","marginHorizontal","loginButton","marginVertical","paddingHorizontal","paddingVertical","signupButton","buttonContainer","position","bottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;;;;;;;SAUEC,mB;AAGF,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAxC;AACA,IAAMC,KAAK,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,KAAvC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAOT;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,GAII,QAJJA,GAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,cACI,QADJA,cACI;AACJC,EAAAA,OAAO,CAACC,GAAR,YAAuB,OAAOF,cAA9B;;AACA,kBAAwChB,QAAQ,CAAC,CAAD,CAAhD;AAAA;AAAA,MAAOmB,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAMC,OAAO,GAAGpB,MAAM,CAAC,IAAIqB,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA9C;AACA,MAAMC,UAAU,GAAGxB,MAAM,CAAC;AAAEyB,IAAAA,gCAAgC,EAAE;AAApC,GAAD,CAAN,CAAiDF,OAApE;AACA,MAAMG,SAAS,GAAG1B,MAAM,CAAC,IAAD,CAAxB;AACA,MAAM2B,mBAAmB,GAAG3B,MAAM,CAAC,iBAAuB;AAAA,QAApB4B,aAAoB,SAApBA,aAAoB;AACxDT,IAAAA,eAAe,CAACS,aAAa,CAAC,CAAD,CAAb,CAAiBC,KAAlB,CAAf;;AACA,QAAI,OAAOd,cAAP,IAAyB,UAA7B,EAAyC;AACvCC,MAAAA,OAAO,CAACC,GAAR;AACAF,MAAAA,cAAc,CAACa,aAAa,CAAC,CAAD,CAAb,CAAiBC,KAAlB,CAAd;AACD;AACF,GANiC,CAAN,CAMzBN,OANH;;AAOA,6BAA0BrB,mBAAmB,EAA7C;AAAA,MAAQM,KAAR,wBAAQA,KAAR;AAAA,MAAeF,MAAf,wBAAeA,MAAf;;AAEA,SACE,0CACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLwB,MAAAA,cAAc,EAAE,QADX;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,IAAI,EAAE;AAHD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEtB,IADR;AAEE,IAAA,YAAY,EAAE,sBAACuB,IAAD,EAAOC,CAAP;AAAA,aAAaA,CAAC,CAACC,QAAF,EAAb;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAExB,UAHd;AAIE,IAAA,UAAU,MAJZ;AAKE,IAAA,8BAA8B,EAAE,KALlC;AAME,IAAA,aAAa,MANf;AAOE,IAAA,mBAAmB,EAAE,EAPvB;AAQE,IAAA,QAAQ,EACN,IAAIU,QAAQ,CAACe,KAAb,CACE,CAAC;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAEC,UAAAA,CAAC,EAAEnB;AAAL;AAAjB;AAAf,KAAD,CADF,EAEE;AAAEoB,MAAAA,eAAe,EAAE;AAAnB,KAFF,CATJ;AAcE,IAAA,OAAO,EAAE,IAdX;AAeE,IAAA,sBAAsB,EAAEb,mBAf1B;AAgBE,IAAA,iBAAiB,EAAEH,UAhBrB;AAiBE,IAAA,GAAG,EAAEE,SAjBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EA0BGZ,QAAQ,IACP,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE2B,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,aAAa,EAAE,KAAhC;AAAuCpC,MAAAA,MAAM,EAAE;AAA/C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,IAAI,CAACiC,GAAL,CAAS,UAACC,CAAD,EAAIV,CAAJ,EAAU;AAClB,QAAMW,UAAU,GAAG,CAAC,CAACX,CAAC,GAAG,CAAL,IAAU1B,KAAX,EAAkB0B,CAAC,GAAG1B,KAAtB,EAA6B,CAAC0B,CAAC,GAAG,CAAL,IAAU1B,KAAvC,CAAnB;AACA,QAAMsC,QAAQ,GAAG1B,OAAO,CAAC2B,WAAR,CAAoB;AACnCF,MAAAA,UAAU,EAAVA,UADmC;AAEnCG,MAAAA,WAAW,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAFsB;AAGnCC,MAAAA,WAAW,EAAE;AAHsB,KAApB,CAAjB;AAKA,QAAMC,OAAO,GAAG9B,OAAO,CAAC2B,WAAR,CAAoB;AAClCF,MAAAA,UAAU,EAAVA,UADkC;AAElCG,MAAAA,WAAW,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,CAFqB;AAGlCC,MAAAA,WAAW,EAAE;AAHqB,KAApB,CAAhB;AAMA,WACE,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,KAAK,EAAE,CAACpC,QAAD,EAAW;AAAEL,QAAAA,KAAK,EAAEsC,QAAT;AAAmBI,QAAAA,OAAO,EAAPA;AAAnB,OAAX,CADT;AAEE,MAAA,GAAG,EAAEhB,CAAC,CAACC,QAAF,EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD,GAnBA,CADH,CA3BJ,CADF,CADF;AAuDD,CA7ED;;AA+EA,eAAe1B,MAAf;AAEA,IAAM0C,MAAM,GAAG,IAAIC,UAAU,CAACC,MAAf,CAAsB;AACnCC,EAAAA,GAAG,EAAE;AACHhD,IAAAA,MAAM,EAAE,EADL;AAEHiD,IAAAA,YAAY,EAAE,CAFX;AAGHC,IAAAA,eAAe,EAAE,SAHd;AAIHC,IAAAA,gBAAgB,EAAE;AAJf,GAD8B;AAOnCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,cAAc,EAAE,EADL;AAEXH,IAAAA,eAAe,EAAE,MAFN;AAGXI,IAAAA,iBAAiB,EAAE,EAHR;AAIXC,IAAAA,eAAe,EAAE,EAJN;AAKXN,IAAAA,YAAY,EAAE;AALH,GAPsB;AAcnCO,EAAAA,YAAY,EAAE;AACZH,IAAAA,cAAc,EAAE,EADJ;AAEZH,IAAAA,eAAe,EAAE,OAFL;AAGZI,IAAAA,iBAAiB,EAAE,EAHP;AAIZC,IAAAA,eAAe,EAAE,EAJL;AAKZN,IAAAA,YAAY,EAAE;AALF,GAdqB;AAqBnCQ,EAAAA,eAAe,EAAE;AACfC,IAAAA,QAAQ,EAAE,UADK;AAEfC,IAAAA,MAAM,EAAE,CAFO;AAGfzD,IAAAA,KAAK,EAAED,KAHQ;AAIfwB,IAAAA,UAAU,EAAE;AAJG;AArBkB,CAAtB,CAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  Animated,\r\n  Dimensions,\r\n  Text,\r\n  FlatList,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\n\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\n\r\nconst Slider = ({\r\n  data,\r\n  renderItem,\r\n  key,\r\n  dotStyle,\r\n  showDots,\r\n  setActiveSlide,\r\n}) => {\r\n  console.log(`objecat`, typeof setActiveSlide);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const scrollX = useRef(new Animated.Value(0)).current;\r\n  const viewConfig = useRef({ viewAreaCoveragePercentThreshold: 50 }).current;\r\n  const slidesRef = useRef(null);\r\n  const viewableItemChanged = useRef(({ viewableItems }) => {\r\n    setCurrentIndex(viewableItems[0].index);\r\n    if (typeof setActiveSlide == \"function\") {\r\n      console.log(`calling`);\r\n      setActiveSlide(viewableItems[0].index);\r\n    }\r\n  }).current;\r\n  const { width, height } = useWindowDimensions();\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <FlatList\r\n          data={data}\r\n          keyExtractor={(item, i) => i.toString()}\r\n          renderItem={renderItem}\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          pagingEnabled\r\n          scrollEventThrottle={32}\r\n          onScroll={\r\n            new Animated.event(\r\n              [{ nativeEvent: { contentOffset: { x: scrollX } } }],\r\n              { useNativeDriver: false }\r\n            )\r\n          }\r\n          bounces={true}\r\n          onViewableItemsChanged={viewableItemChanged}\r\n          viewabilityConfig={viewConfig}\r\n          ref={slidesRef}\r\n        />\r\n        {showDots && (\r\n          <View style={{ marginTop: 20, flexDirection: \"row\", height: 64 }}>\r\n            {data.map((s, i) => {\r\n              const inputRange = [(i - 1) * width, i * width, (i + 1) * width];\r\n              const dotWidth = scrollX.interpolate({\r\n                inputRange,\r\n                outputRange: [10, 20, 10],\r\n                extrapolate: \"clamp\",\r\n              });\r\n              const opacity = scrollX.interpolate({\r\n                inputRange,\r\n                outputRange: [0.3, 1, 0.3],\r\n                extrapolate: \"clamp\",\r\n              });\r\n\r\n              return (\r\n                <Animated.View\r\n                  style={[dotStyle, { width: dotWidth, opacity }]}\r\n                  key={i.toString()}\r\n                ></Animated.View>\r\n              );\r\n            })}\r\n          </View>\r\n        )}\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n\r\nconst styles = new StyleSheet.create({\r\n  dot: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n    backgroundColor: \"#ff6b81\",\r\n    marginHorizontal: 8,\r\n  },\r\n  loginButton: {\r\n    marginVertical: 10,\r\n    backgroundColor: \"#fff\",\r\n    paddingHorizontal: 55,\r\n    paddingVertical: 15,\r\n    borderRadius: 10,\r\n  },\r\n  signupButton: {\r\n    marginVertical: 20,\r\n    backgroundColor: \"black\",\r\n    paddingHorizontal: 45,\r\n    paddingVertical: 15,\r\n    borderRadius: 10,\r\n  },\r\n  buttonContainer: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    width: WIDTH,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}