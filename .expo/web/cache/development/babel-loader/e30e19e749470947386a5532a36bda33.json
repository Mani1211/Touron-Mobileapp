{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Project\\\\TourOn\\\\Touron-Mobileapp-1\\\\src\\\\Screens\\\\StoriesScreens\\\\AddStories.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useWindowDimensions } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport HeaderTile from \"./../../Reusable Components/HeaderTile\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { View, Fab, Toast } from \"native-base\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { storage, database } from \"firebase\";\nimport moment from \"moment\";\nimport { ProgressBar } from \"react-native-paper\";\nimport { useIsFocused } from \"@react-navigation/native\";\n\nvar AddStories = function AddStories(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var _route$params = route.params,\n      key = _route$params.key,\n      value = _route$params.value,\n      story = _route$params.story,\n      categoryName = _route$params.categoryName;\n  console.log(\"key,value\", key, value, story, categoryName);\n  console.log(\"story\", story);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      storyTitle = _useState2[0],\n      setStoryTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      storyContent = _useState4[0],\n      setStoryContent = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imageUrl = _useState6[0],\n      setImageUrl = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      categoryTitle = _useState8[0],\n      setCategoryTitle = _useState8[1];\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      progress = _useState10[0],\n      setProgress = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      imageUploaded = _useState12[0],\n      setImageUploaded = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      storyUploaded = _useState14[0],\n      setStoryUploaded = _useState14[1];\n\n  var isFocused = useIsFocused();\n\n  var updateStory = function updateStory() {\n    var story = {\n      createdAt: moment().toString(),\n      storyTitle: storyTitle,\n      storyContent: storyContent,\n      imageUrl: imageUrl,\n      type: imageUrl === null ? \"TEXT\" : \"IMAGE\",\n      categoryTitle: categoryTitle\n    };\n    setStoryUploaded(true);\n    database().ref(\"stories/story\" + route.params.story + \"/\" + key).update(story).then(function () {\n      setStoryContent(\"\");\n      setStoryTitle(\"\");\n      setImageUrl(null);\n      setStoryUploaded(false);\n      Toast.show({\n        text: \"Posted!!\",\n        buttonText: \"Okay\",\n        duration: 2000,\n        textStyle: {\n          marginHorizontal: 20,\n          fontFamily: \"Andika\",\n          width: width * 0.7\n        },\n        buttonTextStyle: {\n          fontFamily: \"Andika\"\n        }\n      });\n    }).catch(function (err) {\n      Toast.show({\n        text: err.message,\n        buttonText: \"Okay\",\n        duration: 2000,\n        textStyle: {\n          marginHorizontal: 20,\n          fontFamily: \"Andika\",\n          width: width * 0.7\n        },\n        buttonTextStyle: {\n          fontFamily: \"Andika\"\n        }\n      });\n      setStoryUploaded(true);\n    });\n  };\n\n  useEffect(function () {\n    if (value !== null && key !== null) {\n      setStoryTitle(value == null ? void 0 : value.storyTitle);\n      setStoryContent(value == null ? void 0 : value.storyContent);\n      setCategoryTitle(value == null ? void 0 : value.categoryTitle);\n      setImageUrl(value != null && value.imageUrl ? value == null ? void 0 : value.imageUrl : null);\n    } else {\n      setCategoryTitle(categoryName);\n    }\n  }, [isFocused]);\n\n  var addStory = function addStory() {\n    var story = {\n      createdAt: moment().toString(),\n      storyTitle: storyTitle,\n      storyContent: storyContent,\n      imageUrl: imageUrl,\n      type: imageUrl === null ? \"TEXT\" : \"IMAGE\",\n      categoryTitle: categoryTitle\n    };\n    setStoryUploaded(true);\n    database().ref(\"stories/story\" + route.params.story).push(story).then(function () {\n      setStoryContent(\"\");\n      setStoryTitle(\"\");\n      setImageUrl(null);\n      setStoryUploaded(false);\n      Toast.show({\n        text: \"Posted!!\",\n        buttonText: \"Okay\",\n        duration: 2000,\n        textStyle: {\n          marginHorizontal: 20,\n          fontFamily: \"Andika\",\n          width: width * 0.7\n        },\n        buttonTextStyle: {\n          fontFamily: \"Andika\"\n        }\n      });\n    }).catch(function (err) {\n      Toast.show({\n        text: err.message,\n        buttonText: \"Okay\",\n        duration: 2000,\n        textStyle: {\n          marginHorizontal: 20,\n          fontFamily: \"Andika\",\n          width: width * 0.7\n        },\n        buttonTextStyle: {\n          fontFamily: \"Andika\"\n        }\n      });\n      setStoryUploaded(true);\n    });\n  };\n\n  var pickImage = function pickImage() {\n    var result, response, blob, ref, task;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (result.cancelled) {\n              _context.next = 23;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(result.uri));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 9:\n            blob = _context.sent;\n            ref = storage().ref(\"stories/\" + moment().format(\"MMM Do YY\") + \"/\" + Date.now() + \"images.jpg\");\n            task = ref.put(blob);\n            task.on(\"state_changed\", function (taskSnapshot) {\n              var per = taskSnapshot.bytesTransferred * 100 / taskSnapshot.totalBytes;\n              console.log(\"object\", Math.round(per) / 100);\n              setProgress(Math.round(per) / 100);\n            });\n            task.then(function () {\n              ref.getDownloadURL().then(function (url) {\n                return setImageUrl(url);\n              });\n            });\n            _context.prev = 14;\n            setImageUploaded(true);\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(task.then(function () {\n              setImageUploaded(false);\n              setProgress(0);\n            }));\n\n          case 18:\n            _context.next = 23;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](14);\n            console.log(_context.t0);\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[14, 20]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#fff\",\n      paddingTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }, React.createElement(HeaderTile, {\n    navigation: navigation,\n    name: \"Add Story\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width,\n      margin: 20,\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Category Name\",\n    placeholderTextColor: \"#fff\",\n    onChangeText: function onChangeText(text) {\n      return setCategoryTitle(text);\n    },\n    value: categoryTitle,\n    keyboardType: \"default\",\n    style: styles.textInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Story Title\",\n    placeholderTextColor: \"#fff\",\n    onChangeText: function onChangeText(text) {\n      return setStoryTitle(text);\n    },\n    value: storyTitle,\n    keyboardType: \"default\",\n    style: styles.textInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Story Content\",\n    value: storyContent,\n    onChangeText: function onChangeText(text) {\n      return setStoryContent(text);\n    },\n    placeholderTextColor: \"#fff\",\n    keyboardType: \"default\",\n    multiline: true,\n    style: [styles.textInput, {\n      height: 100\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }), imageUrl !== null && React.createElement(Image, {\n    source: {\n      uri: imageUrl\n    },\n    style: {\n      height: height * 0.7,\n      width: \"90%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }), imageUploaded && React.createElement(React.Fragment, null, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, progress * 100, \" %\"), React.createElement(ProgressBar, {\n    style: {\n      backgroundColor: \"#e7e7e7\",\n      width: width * 0.8\n    },\n    indeterminate: false,\n    progress: progress,\n    color: \"#E28633\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }))), key === null ? React.createElement(TouchableOpacity, {\n    onPress: addStory,\n    style: {\n      backgroundColor: \"#E28633\",\n      marginHorizontal: 20,\n      padding: 20,\n      borderRadius: 10,\n      marginBottom: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, storyUploaded ? React.createElement(ActivityIndicator, {\n    color: \"#fff\",\n    size: 28,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }) : React.createElement(Text, {\n    style: {\n      fontFamily: Platform.OS === \"ios\" ? \"AvenirNext-Bold\" : \"Avenir\",\n      textAlign: \"center\",\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, \"Post Story\")) : React.createElement(TouchableOpacity, {\n    onPress: updateStory,\n    style: {\n      backgroundColor: \"#E28633\",\n      marginHorizontal: 20,\n      padding: 20,\n      borderRadius: 10,\n      marginBottom: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, storyUploaded ? React.createElement(ActivityIndicator, {\n    color: \"#fff\",\n    size: 28,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }) : React.createElement(Text, {\n    style: {\n      fontFamily: Platform.OS === \"ios\" ? \"AvenirNext-Bold\" : \"Avenir\",\n      textAlign: \"center\",\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, \"Update Story\"))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }, React.createElement(Fab, {\n    direction: \"up\",\n    containerStyle: {\n      padding: 30\n    },\n    style: {\n      backgroundColor: \"#E28633\"\n    },\n    position: \"bottomRight\",\n    onPress: function onPress() {\n      return pickImage();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, React.createElement(Entypo, {\n    name: \"plus\",\n    size: 24,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default AddStories;\nvar styles = StyleSheet.create({\n  textInput: {\n    height: 50,\n    backgroundColor: \"#0004\",\n    fontSize: 16,\n    fontFamily: \"Andika\",\n    paddingHorizontal: 20,\n    width: \"90%\",\n    color: \"#fff\",\n    borderRadius: 10,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["D:/Project/TourOn/Touron-Mobileapp-1/src/Screens/StoriesScreens/AddStories.js"],"names":["React","useEffect","useState","useWindowDimensions","HeaderTile","Entypo","View","Fab","Toast","ImagePicker","storage","database","moment","ProgressBar","useIsFocused","AddStories","navigation","route","params","key","value","story","categoryName","console","log","storyTitle","setStoryTitle","storyContent","setStoryContent","imageUrl","setImageUrl","categoryTitle","setCategoryTitle","width","height","progress","setProgress","imageUploaded","setImageUploaded","storyUploaded","setStoryUploaded","isFocused","updateStory","createdAt","toString","type","ref","update","then","show","text","buttonText","duration","textStyle","marginHorizontal","fontFamily","buttonTextStyle","catch","err","message","addStory","push","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","quality","result","cancelled","fetch","uri","response","blob","format","Date","now","task","put","on","taskSnapshot","per","bytesTransferred","totalBytes","Math","round","getDownloadURL","url","flex","backgroundColor","paddingTop","margin","justifyContent","styles","textInput","padding","borderRadius","marginBottom","Platform","OS","textAlign","color","StyleSheet","create","fontSize","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  Image,\r\n  ScrollView,\r\n  useWindowDimensions,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport HeaderTile from \"./../../Reusable Components/HeaderTile\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nimport { View, Fab, Toast } from \"native-base\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { storage, database } from \"firebase\";\r\nimport moment from \"moment\";\r\nimport { ProgressBar } from \"react-native-paper\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nconst AddStories = ({ navigation, route }) => {\r\n  const { key, value, story, categoryName } = route.params;\r\n  console.log(`key,value`, key, value, story, categoryName);\r\n  console.log(`story`, story);\r\n  const [storyTitle, setStoryTitle] = useState(\"\");\r\n  const [storyContent, setStoryContent] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n\r\n  const [categoryTitle, setCategoryTitle] = useState(\"\");\r\n  const { width, height } = useWindowDimensions();\r\n  const [progress, setProgress] = useState(0);\r\n  const [imageUploaded, setImageUploaded] = useState(false);\r\n  const [storyUploaded, setStoryUploaded] = useState(false);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  const updateStory = () => {\r\n    const story = {\r\n      createdAt: moment().toString(),\r\n      storyTitle,\r\n      storyContent,\r\n      imageUrl,\r\n      type: imageUrl === null ? \"TEXT\" : \"IMAGE\",\r\n      categoryTitle,\r\n    };\r\n    setStoryUploaded(true);\r\n\r\n    database()\r\n      .ref(`stories/story${route.params.story}/${key}`)\r\n      .update(story)\r\n      .then(() => {\r\n        setStoryContent(\"\");\r\n        setStoryTitle(\"\");\r\n        setImageUrl(null);\r\n        setStoryUploaded(false);\r\n        Toast.show({\r\n          text: \"Posted!!\",\r\n          buttonText: \"Okay\",\r\n          duration: 2000,\r\n          textStyle: {\r\n            marginHorizontal: 20,\r\n            fontFamily: \"Andika\",\r\n            width: width * 0.7,\r\n          },\r\n          buttonTextStyle: {\r\n            fontFamily: \"Andika\",\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        Toast.show({\r\n          text: err.message,\r\n          buttonText: \"Okay\",\r\n          duration: 2000,\r\n          textStyle: {\r\n            marginHorizontal: 20,\r\n            fontFamily: \"Andika\",\r\n            width: width * 0.7,\r\n          },\r\n          buttonTextStyle: {\r\n            fontFamily: \"Andika\",\r\n          },\r\n        });\r\n        setStoryUploaded(true);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (value !== null && key !== null) {\r\n      setStoryTitle(value?.storyTitle);\r\n      setStoryContent(value?.storyContent);\r\n      setCategoryTitle(value?.categoryTitle);\r\n      setImageUrl(value?.imageUrl ? value?.imageUrl : null);\r\n    } else {\r\n      setCategoryTitle(categoryName);\r\n    }\r\n  }, [isFocused]);\r\n\r\n  const addStory = () => {\r\n    const story = {\r\n      createdAt: moment().toString(),\r\n      storyTitle,\r\n      storyContent,\r\n      imageUrl,\r\n      type: imageUrl === null ? \"TEXT\" : \"IMAGE\",\r\n      categoryTitle,\r\n    };\r\n    setStoryUploaded(true);\r\n\r\n    database()\r\n      .ref(`stories/story${route.params.story}`)\r\n      .push(story)\r\n      .then(() => {\r\n        setStoryContent(\"\");\r\n        setStoryTitle(\"\");\r\n        setImageUrl(null);\r\n        setStoryUploaded(false);\r\n        Toast.show({\r\n          text: \"Posted!!\",\r\n          buttonText: \"Okay\",\r\n          duration: 2000,\r\n          textStyle: {\r\n            marginHorizontal: 20,\r\n            fontFamily: \"Andika\",\r\n            width: width * 0.7,\r\n          },\r\n          buttonTextStyle: {\r\n            fontFamily: \"Andika\",\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        Toast.show({\r\n          text: err.message,\r\n          buttonText: \"Okay\",\r\n          duration: 2000,\r\n          textStyle: {\r\n            marginHorizontal: 20,\r\n            fontFamily: \"Andika\",\r\n            width: width * 0.7,\r\n          },\r\n          buttonTextStyle: {\r\n            fontFamily: \"Andika\",\r\n          },\r\n        });\r\n        setStoryUploaded(true);\r\n      });\r\n  };\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      // allowsEditing: true,\r\n      // aspect: [6, 10],\r\n      quality: 1,\r\n    });\r\n    if (!result.cancelled) {\r\n      const response = await fetch(result.uri);\r\n      const blob = await response.blob();\r\n      const ref = storage().ref(\r\n        `stories/${moment().format(\"MMM Do YY\")}/${Date.now()}images.jpg`\r\n      );\r\n      const task = ref.put(blob);\r\n\r\n      task.on(\"state_changed\", (taskSnapshot) => {\r\n        const per =\r\n          (taskSnapshot.bytesTransferred * 100) / taskSnapshot.totalBytes;\r\n\r\n        console.log(`object`, Math.round(per) / 100);\r\n        setProgress(Math.round(per) / 100);\r\n      });\r\n\r\n      task.then(() => {\r\n        ref.getDownloadURL().then((url) => setImageUrl(url));\r\n      });\r\n      try {\r\n        setImageUploaded(true);\r\n        await task.then(() => {\r\n          setImageUploaded(false);\r\n          setProgress(0);\r\n        });\r\n      } catch (E) {\r\n        console.log(E);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: \"#fff\", paddingTop: 20 }}>\r\n      <HeaderTile navigation={navigation} name=\"Add Story\" />\r\n      <ScrollView>\r\n        <View\r\n          style={{\r\n            width: width,\r\n            margin: 20,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <TextInput\r\n            placeholder=\"Category Name\"\r\n            placeholderTextColor=\"#fff\"\r\n            onChangeText={(text) => setCategoryTitle(text)}\r\n            value={categoryTitle}\r\n            keyboardType=\"default\"\r\n            style={styles.textInput}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Story Title\"\r\n            placeholderTextColor=\"#fff\"\r\n            onChangeText={(text) => setStoryTitle(text)}\r\n            value={storyTitle}\r\n            keyboardType=\"default\"\r\n            style={styles.textInput}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Story Content\"\r\n            value={storyContent}\r\n            onChangeText={(text) => setStoryContent(text)}\r\n            placeholderTextColor=\"#fff\"\r\n            keyboardType=\"default\"\r\n            multiline\r\n            style={[styles.textInput, { height: 100 }]}\r\n          />\r\n          {imageUrl !== null && (\r\n            <Image\r\n              source={{ uri: imageUrl }}\r\n              style={{ height: height * 0.7, width: \"90%\" }}\r\n            />\r\n          )}\r\n          {imageUploaded && (\r\n            <>\r\n              <Text>{progress * 100} %</Text>\r\n              <ProgressBar\r\n                style={{ backgroundColor: \"#e7e7e7\", width: width * 0.8 }}\r\n                indeterminate={false}\r\n                progress={progress}\r\n                color=\"#E28633\"\r\n              />\r\n            </>\r\n          )}\r\n        </View>\r\n\r\n        {key === null ? (\r\n          <TouchableOpacity\r\n            onPress={addStory}\r\n            style={{\r\n              backgroundColor: \"#E28633\",\r\n              marginHorizontal: 20,\r\n              padding: 20,\r\n              borderRadius: 10,\r\n              marginBottom: 40,\r\n            }}\r\n          >\r\n            {storyUploaded ? (\r\n              <ActivityIndicator color=\"#fff\" size={28} />\r\n            ) : (\r\n              <Text\r\n                style={{\r\n                  fontFamily:\r\n                    Platform.OS === \"ios\" ? \"AvenirNext-Bold\" : \"Avenir\",\r\n                  textAlign: \"center\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                Post Story\r\n              </Text>\r\n            )}\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <TouchableOpacity\r\n            onPress={updateStory}\r\n            style={{\r\n              backgroundColor: \"#E28633\",\r\n              marginHorizontal: 20,\r\n              padding: 20,\r\n              borderRadius: 10,\r\n              marginBottom: 40,\r\n            }}\r\n          >\r\n            {storyUploaded ? (\r\n              <ActivityIndicator color=\"#fff\" size={28} />\r\n            ) : (\r\n              <Text\r\n                style={{\r\n                  fontFamily:\r\n                    Platform.OS === \"ios\" ? \"AvenirNext-Bold\" : \"Avenir\",\r\n                  textAlign: \"center\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                Update Story\r\n              </Text>\r\n            )}\r\n          </TouchableOpacity>\r\n        )}\r\n      </ScrollView>\r\n\r\n      <View style={{ flex: 1 }}>\r\n        <Fab\r\n          direction=\"up\"\r\n          containerStyle={{ padding: 30 }}\r\n          style={{ backgroundColor: \"#E28633\" }}\r\n          position=\"bottomRight\"\r\n          onPress={() => pickImage()}\r\n        >\r\n          <Entypo name=\"plus\" size={24} color=\"#fff\" />\r\n        </Fab>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AddStories;\r\n\r\nconst styles = StyleSheet.create({\r\n  textInput: {\r\n    height: 50,\r\n    backgroundColor: \"#0004\",\r\n    fontSize: 16,\r\n    fontFamily: \"Andika\",\r\n    paddingHorizontal: 20,\r\n    width: \"90%\",\r\n    color: \"#fff\",\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}