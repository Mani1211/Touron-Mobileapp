{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Project\\\\TourOn\\\\Touron-Mobileapp-1\\\\src\\\\Screens\\\\CityScreens\\\\CityHomeScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { AuthContext } from \"../../context/AuthContext\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport touron from \"../../api/touron\";\nimport axios from \"axios\";\nimport SearchBar from \"./../../Reusable Components/SearchBar\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport CCTile from \"./../CountryScreens/CCTile\";\nimport HeaderTile from \"./../../Reusable Components/HeaderTile\";\n\nvar CityHomeScreen = function CityHomeScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      cities = _useContext.cities;\n\n  var _useState = useState(cities),\n      _useState2 = _slicedToArray(_useState, 2),\n      city = _useState2[0],\n      setCity = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loader = _useState6[0],\n      setLoader = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cityName = _useState8[0],\n      setCityName = _useState8[1];\n\n  var _useState9 = useState(10),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pageSize = _useState10[0],\n      setPageSize = _useState10[1];\n\n  var getCity = function getCity() {\n    var countryname, cityResponse;\n    return _regeneratorRuntime.async(function getCity$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!route.params.name) {\n              _context.next = 16;\n              break;\n            }\n\n            countryname = route.params.name;\n            _context.prev = 2;\n            setLoader(true);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(touron.get(\"/city/countryname/\" + countryname));\n\n          case 6:\n            cityResponse = _context.sent;\n            setCity(cityResponse.data);\n            setLoader(false);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            setErrorMessage(\"Something went wrong\");\n\n          case 14:\n            _context.next = 17;\n            break;\n\n          case 16:\n            setCity(cities);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 11]], Promise);\n  };\n\n  useEffect(function () {\n    var source = axios.CancelToken.source();\n    getCity();\n    return function () {\n      return source.cancel();\n    };\n  }, [route.params.name]);\n\n  var search = function search() {\n    var d = city.filter(function (c) {\n      return c.cityName.trim().toUpperCase().includes(cityName.trim().toUpperCase());\n    });\n    return d;\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(HeaderTile, {\n    name: \"City\",\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingHorizontal: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    onChangeText: function onChangeText(value) {\n      return setCityName(value);\n    },\n    placeholder: \"Search City....\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), loader ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    style: {\n      alignSelf: \"center\",\n      justifyContent: \"center\",\n      height: HEIGHT * 0.6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }) : React.createElement(ScrollView, {\n    contentContainerStyle: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: WIDTH\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, route.params.name !== \"\" && React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      marginBottom: 10,\n      fontFamily: \"Andika\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"Cities in \", route.params.name), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      width: WIDTH,\n      flexWrap: \"wrap\",\n      justifyContent: city.length % 2 === 0 ? \"center\" : \"flex-start\",\n      alignItems: \"center\",\n      marginBottom: 30,\n      paddingHorizontal: city.length % 2 === 0 ? 0 : 10,\n      paddingBottom: 150,\n      alignContent: \"stretch\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, search().map(function (item, index) {\n    if (index < pageSize) return React.createElement(CCTile, {\n      key: index,\n      navigation: navigation,\n      item: item,\n      navName: \"CityInner\",\n      name: item.cityName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    });\n  }), route.params.name === \"\" && pageSize < 145 && cityName === \"\" && React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setPageSize(pageSize + 10);\n    },\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      paddingVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      backgroundColor: \"#E28633\",\n      padding: 10,\n      borderRadius: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"Load More ...\"))))));\n};\n\nexport default CityHomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  imageContainer: {\n    padding: 5,\n    position: \"relative\"\n  },\n  image: {\n    height: HEIGHT / 3.3,\n    width: WIDTH / 2.28,\n    justifyContent: \"space-around\",\n    borderRadius: 18,\n    flexDirection: \"row\"\n  },\n  name: {\n    position: \"absolute\",\n    fontSize: 20,\n    color: \"#fff\",\n    fontFamily: \"Andika\",\n    zIndex: 1,\n    top: 10,\n    left: 20\n  }\n});","map":{"version":3,"sources":["D:/Project/TourOn/Touron-Mobileapp-1/src/Screens/CityScreens/CityHomeScreen.js"],"names":["React","useState","useEffect","useContext","AuthContext","WIDTH","Dimensions","get","width","HEIGHT","height","touron","axios","SearchBar","FontAwesome","CCTile","HeaderTile","CityHomeScreen","navigation","route","cities","city","setCity","error","setErrorMessage","loader","setLoader","cityName","setCityName","pageSize","setPageSize","getCity","params","name","countryname","cityResponse","data","source","CancelToken","cancel","search","d","filter","c","trim","toUpperCase","includes","styles","container","paddingHorizontal","value","alignSelf","justifyContent","alignItems","fontSize","marginBottom","fontFamily","flexDirection","flexWrap","length","paddingBottom","alignContent","map","item","index","paddingVertical","color","backgroundColor","padding","borderRadius","StyleSheet","create","flex","imageContainer","position","image","zIndex","top","left"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Platform,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\nimport touron from \"../../api/touron\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./../../Reusable Components/SearchBar\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport CCTile from \"./../CountryScreens/CCTile\";\r\nimport HeaderTile from \"./../../Reusable Components/HeaderTile\";\r\nconst CityHomeScreen = ({ navigation, route }) => {\r\n  const { cities } = useContext(AuthContext);\r\n  const [city, setCity] = useState(cities);\r\n  const [error, setErrorMessage] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const [pageSize, setPageSize] = useState(10);\r\n\r\n  const getCity = async () => {\r\n    if (route.params.name) {\r\n      const countryname = route.params.name;\r\n      try {\r\n        setLoader(true);\r\n        const cityResponse = await touron.get(\r\n          `/city/countryname/${countryname}`\r\n        );\r\n        // console.log(cityResponse.data, \"dataata\");\r\n\r\n        setCity(cityResponse.data);\r\n        setLoader(false);\r\n      } catch (err) {\r\n        setErrorMessage(\"Something went wrong\");\r\n      }\r\n    } else {\r\n      setCity(cities);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    getCity();\r\n\r\n    return () => source.cancel();\r\n  }, [route.params.name]);\r\n\r\n  const search = () => {\r\n    const d = city.filter((c) => {\r\n      return c.cityName\r\n        .trim()\r\n        .toUpperCase()\r\n        .includes(cityName.trim().toUpperCase());\r\n    });\r\n    return d;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ paddingHorizontal: 0 }}>\r\n        <HeaderTile name={\"City\"} navigation={navigation} />\r\n\r\n        <View style={{ paddingHorizontal: 10 }}>\r\n          <SearchBar\r\n            onChangeText={(value) => setCityName(value)}\r\n            placeholder={\"Search City....\"}\r\n          />\r\n        </View>\r\n        {loader ? (\r\n          <ActivityIndicator\r\n            size=\"large\"\r\n            style={{\r\n              alignSelf: \"center\",\r\n              justifyContent: \"center\",\r\n              height: HEIGHT * 0.6,\r\n            }}\r\n          />\r\n        ) : (\r\n          <ScrollView\r\n            contentContainerStyle={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: WIDTH,\r\n            }}\r\n          >\r\n            {route.params.name !== \"\" && (\r\n              <Text\r\n                style={{ fontSize: 20, marginBottom: 10, fontFamily: \"Andika\" }}\r\n              >\r\n                Cities in {route.params.name}\r\n              </Text>\r\n            )}\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                width: WIDTH,\r\n                flexWrap: \"wrap\",\r\n                justifyContent: city.length % 2 === 0 ? \"center\" : \"flex-start\",\r\n                alignItems: \"center\",\r\n                marginBottom: 30,\r\n                paddingHorizontal: city.length % 2 === 0 ? 0 : 10,\r\n                paddingBottom: 150,\r\n                alignContent: \"stretch\",\r\n              }}\r\n            >\r\n              {search().map((item, index) => {\r\n                if (index < pageSize)\r\n                  return (\r\n                    <CCTile\r\n                      key={index}\r\n                      navigation={navigation}\r\n                      item={item}\r\n                      navName={\"CityInner\"}\r\n                      name={item.cityName}\r\n                    />\r\n                  );\r\n              })}\r\n              {route.params.name === \"\" && pageSize < 145 && cityName === \"\" && (\r\n                <TouchableOpacity\r\n                  onPress={() => setPageSize(pageSize + 10)}\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    paddingVertical: 20,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: \"#fff\",\r\n                      backgroundColor: \"#E28633\",\r\n                      padding: 10,\r\n                      borderRadius: 10,\r\n                    }}\r\n                  >\r\n                    Load More ...\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </ScrollView>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CityHomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  imageContainer: {\r\n    padding: 5,\r\n    position: \"relative\",\r\n  },\r\n  image: {\r\n    height: HEIGHT / 3.3,\r\n    width: WIDTH / 2.28,\r\n    justifyContent: \"space-around\",\r\n    borderRadius: 18,\r\n    flexDirection: \"row\",\r\n  },\r\n  name: {\r\n    position: \"absolute\",\r\n    fontSize: 20,\r\n    color: \"#fff\",\r\n    fontFamily: \"Andika\",\r\n    zIndex: 1,\r\n    top: 10,\r\n    left: 20,\r\n  },\r\n\r\n  // countryGrid: {\r\n  //   flexDirection: \"row\",\r\n  //   width: WIDTH,\r\n  //   flexWrap: \"wrap\",\r\n  //   justifyContent: city % 2 === 0 ? \"center\" : \"flex-start\",\r\n  //   alignItems: \"center\",\r\n  //   marginBottom: 30,\r\n  //   paddingBottom: 150,\r\n  //   alignContent: \"stretch\",\r\n  // },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}