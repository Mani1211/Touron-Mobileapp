{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\TourOn\\\\Touron-Mobileapp-1\\\\src\\\\Screens\\\\SelfPlanTourScreens\\\\SelfPlanningScreen.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar HEIGHT = Dimensions.get(\"window\").height;\nvar WIDTH = Dimensions.get(\"window\").width;\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport HeaderTile from \"./../../Reusable Components/HeaderTile\";\nimport TextButton from \"./../../Reusable Components/TextButton\";\n\nvar SelfPlanningScreen = function SelfPlanningScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      isLoggedIn = _useContext.isLoggedIn;\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      if (!isLoggedIn) {\n        navigation.navigate(\"SignInScreen\");\n      }\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(HeaderTile, {\n    name: \"Self Planned Tour\",\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: \"https://image.freepik.com/free-vector/visual-data-concept-illustration_114360-1713.jpg\"\n    },\n    style: {\n      height: HEIGHT / 3.4,\n      width: 230,\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      marginHorizontal: WIDTH / 9\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 14,\n      fontFamily: \"Andika\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Do you constantly find yourself getting frustrated with all the rigidly planned itineraries,when your soul yearns to wander on its own? Well,no more settling!Not if tourOn has a say about it. Even though the option reads \\\"Plan it yourself\\\",all you need to do is answer a few questions and leave the rest to us experts.We will help you curate your tour plan,just the way you picture it! So, what're you waiting for?\")), React.createElement(TextButton, {\n    label: \"Get Started\",\n    customContainerStyle: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginVertical: 30\n    },\n    customLabelStyle: {\n      borderRadius: 10,\n      backgroundColor: \"#E28633\",\n      padding: 15,\n      fontSize: 16\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"SelfPlanForm\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  imageContainer: {\n    width: WIDTH,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginVertical: 10\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFF\"\n  }\n});\nexport default SelfPlanningScreen;","map":{"version":3,"sources":["D:/Project/TourOn/Touron-Mobileapp-1/src/Screens/SelfPlanTourScreens/SelfPlanningScreen.js"],"names":["React","useContext","useEffect","HEIGHT","Dimensions","get","height","WIDTH","width","AuthContext","AntDesign","HeaderTile","TextButton","SelfPlanningScreen","navigation","isLoggedIn","mounted","navigate","styles","container","imageContainer","uri","marginTop","marginHorizontal","fontSize","fontFamily","textAlign","alignItems","justifyContent","marginVertical","borderRadius","backgroundColor","padding","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Image,\r\n  TouchableOpacity,\r\n  Platform,\r\n} from \"react-native\";\r\n\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport HeaderTile from \"./../../Reusable Components/HeaderTile\";\r\nimport TextButton from \"./../../Reusable Components/TextButton\";\r\nconst SelfPlanningScreen = ({ navigation }) => {\r\n  const { isLoggedIn } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted) {\r\n      if (!isLoggedIn) {\r\n        navigation.navigate(\"SignInScreen\");\r\n      }\r\n    }\r\n    return () => (mounted = false);\r\n  }, []);\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <HeaderTile name={\"Self Planned Tour\"} navigation={navigation} />\r\n\r\n      <View>\r\n        <View style={styles.imageContainer}>\r\n          <Image\r\n            source={{\r\n              uri: \"https://image.freepik.com/free-vector/visual-data-concept-illustration_114360-1713.jpg\",\r\n            }}\r\n            style={{ height: HEIGHT / 3.4, width: 230, marginTop: 20 }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ marginHorizontal: WIDTH / 9 }}>\r\n          <Text\r\n            style={{ fontSize: 14, fontFamily: \"Andika\", textAlign: \"center\" }}\r\n          >\r\n            Do you constantly find yourself getting frustrated with all the\r\n            rigidly planned itineraries,when your soul yearns to wander on its\r\n            own? Well,no more settling!Not if tourOn has a say about it. Even\r\n            though the option reads \"Plan it yourself\",all you need to do is\r\n            answer a few questions and leave the rest to us experts.We will help\r\n            you curate your tour plan,just the way you picture it! So, what're\r\n            you waiting for?\r\n          </Text>\r\n        </View>\r\n\r\n        {/* <TouchableOpacity onPress={() => navigation.navigate(\"SelfPlanForm\")}>\r\n          <View style={styles.buttonContainer}>\r\n            <Text style={styles.buttonText}>Get Started</Text>\r\n          </View>\r\n        </TouchableOpacity> */}\r\n        <TextButton\r\n          label=\"Get Started\"\r\n          customContainerStyle={{\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginVertical: 30,\r\n          }}\r\n          customLabelStyle={{\r\n            borderRadius: 10,\r\n            backgroundColor: \"#E28633\",\r\n            padding: 15,\r\n            fontSize: 16,\r\n          }}\r\n          onPress={() => navigation.navigate(\"SelfPlanForm\")}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  imageContainer: {\r\n    width: WIDTH,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginVertical: 10,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#FFF\",\r\n  },\r\n});\r\nexport default SelfPlanningScreen;\r\n"]},"metadata":{},"sourceType":"module"}