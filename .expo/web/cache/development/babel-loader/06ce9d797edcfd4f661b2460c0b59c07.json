{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { database } from \"firebase\";\nimport axios from \"axios\";\nexport var getExpoToken = function getExpoToken(userId) {\n  var token = \"\";\n  database().ref(\"userGeneralInfo/\" + userId).on(\"value\", function (data) {\n    if (data.val() !== null) {\n      var val = data.val();\n      token = val.pushNotificationToken;\n    }\n  });\n  return token;\n};\nexport var sendPushNotification = function sendPushNotification(message) {\n  var messages;\n  return _regeneratorRuntime.async(function sendPushNotification$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          messages = {\n            to: message.to,\n            sound: message.sound,\n            title: message.title,\n            body: message.body\n          };\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://exp.host/--/api/v2/push/send\", {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Accept-encoding\": \"gzip, deflate\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(messages)\n          }));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var sendEmail = function sendEmail(email, countryname) {\n  return _regeneratorRuntime.async(function sendEmail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(\"https://us-central1-touronapp-248e4.cloudfunctions.net/sendMail?dest=\" + email + \"&countryName=\" + countryname).then(function (d) {\n            return console.log(\"d\", d);\n          }).catch(function (err) {\n            return console.log(\"err\", err);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["D:/Tour On/Touron-Mobileapp/src/Screens/CategoryScreens/utils/PushNotification.js"],"names":["database","axios","getExpoToken","userId","token","ref","on","data","val","pushNotificationToken","sendPushNotification","message","messages","to","sound","title","body","fetch","method","headers","Accept","JSON","stringify","sendEmail","email","countryname","post","then","d","console","log","catch","err"],"mappings":";AAAA,SAASA,QAAT,QAAyB,UAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AACtC,MAAIC,KAAK,GAAG,EAAZ;AACAJ,EAAAA,QAAQ,GACLK,GADH,sBAC0BF,MAD1B,EAEGG,EAFH,CAEM,OAFN,EAEe,UAACC,IAAD,EAAU;AACrB,QAAIA,IAAI,CAACC,GAAL,OAAe,IAAnB,EAAyB;AACvB,UAAIA,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAV;AACAJ,MAAAA,KAAK,GAAGI,GAAG,CAACC,qBAAZ;AACD;AACF,GAPH;AAQA,SAAOL,KAAP;AACD,CAXM;AAaP,OAAO,IAAMM,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,UAAAA,QAD4B,GACjB;AACfC,YAAAA,EAAE,EAAEF,OAAO,CAACE,EADG;AAEfC,YAAAA,KAAK,EAAEH,OAAO,CAACG,KAFA;AAGfC,YAAAA,KAAK,EAAEJ,OAAO,CAACI,KAHA;AAIfC,YAAAA,IAAI,EAAEL,OAAO,CAACK;AAJC,WADiB;AAAA;AAAA,2CAQ5BC,KAAK,CAAC,sCAAD,EAAyC;AAClDC,YAAAA,MAAM,EAAE,MAD0C;AAElDC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE,kBADD;AAEP,iCAAmB,eAFZ;AAGP,8BAAgB;AAHT,aAFyC;AAOlDJ,YAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeV,QAAf;AAP4C,WAAzC,CARuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;AAmBP,OAAO,IAAMW,SAAS,GAAG,SAAZA,SAAY,CAAOC,KAAP,EAAcC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACjBxB,KAAK,CACRyB,IADG,2EAEsEF,KAFtE,qBAE2FC,WAF3F,EAIHE,IAJG,CAIE,UAACC,CAAD;AAAA,mBAAOC,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,CAAjB,CAAP;AAAA,WAJF,EAKHG,KALG,CAKG,UAACC,GAAD;AAAA,mBAASH,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBE,GAAnB,CAAT;AAAA,WALH,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import { database } from \"firebase\";\r\nimport axios from \"axios\";\r\n\r\nexport const getExpoToken = (userId) => {\r\n  let token = \"\";\r\n  database()\r\n    .ref(`userGeneralInfo/${userId}`)\r\n    .on(\"value\", (data) => {\r\n      if (data.val() !== null) {\r\n        let val = data.val();\r\n        token = val.pushNotificationToken;\r\n      }\r\n    });\r\n  return token;\r\n};\r\n\r\nexport const sendPushNotification = async (message) => {\r\n  const messages = {\r\n    to: message.to,\r\n    sound: message.sound,\r\n    title: message.title,\r\n    body: message.body,\r\n  };\r\n\r\n  await fetch(\"https://exp.host/--/api/v2/push/send\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Accept-encoding\": \"gzip, deflate\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(messages),\r\n  });\r\n};\r\n\r\nexport const sendEmail = async (email, countryname) => {\r\n  await axios\r\n    .post(\r\n      `https://us-central1-touronapp-248e4.cloudfunctions.net/sendMail?dest=${email}&countryName=${countryname}`\r\n    )\r\n    .then((d) => console.log(\"d\", d))\r\n    .catch((err) => console.log(\"err\", err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}