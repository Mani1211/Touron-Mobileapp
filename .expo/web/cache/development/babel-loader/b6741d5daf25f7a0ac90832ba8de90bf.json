{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Tour On\\\\Touron-Mobileapp\\\\src\\\\Screens\\\\AuthScreens\\\\GettingStartedScreen.js\";\nimport React, { useState, useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useWindowDimensions } from \"react-native-web/dist/index\";\nvar HEIGHT = Dimensions.get(\"window\").height;\nvar WIDTH = Dimensions.get(\"window\").width;\n\nvar GettingStartedScreen = function GettingStartedScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentIndex = _useState2[0],\n      setCurrentIndex = _useState2[1];\n\n  var scrollX = useRef(new Animated.Value(0)).current;\n  var viewConfig = useRef({\n    viewAreaCoveragePercentThreshold: 50\n  }).current;\n  var slidesRef = useRef(null);\n  var viewableItemChanged = useRef(function (_ref2) {\n    var viewableItems = _ref2.viewableItems;\n    setCurrentIndex(viewableItems[0].index);\n  }).current;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var slides = [{\n    key: \"1\",\n    image: require(\"../../../assets/intros/1.png\")\n  }, {\n    key: \"2\",\n    image: require(\"../../../assets/intros/2.png\")\n  }, {\n    key: \"3\",\n    image: require(\"../../../assets/intros/3.png\")\n  }, {\n    key: \"4\",\n    image: require(\"../../../assets/intros/4.png\")\n  }];\n\n  var _onDone = function _onDone() {\n    navigation.navigate(\"HomeDrawer\");\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flex: 1,\n      backgroundColor: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: slides,\n    key: function key(item, index) {\n      return item.key;\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: item.image,\n        resizeMode: \"cover\",\n        style: {\n          height: height * 0.8,\n          width: width\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }));\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    pagingEnabled: true,\n    scrollEventThrottle: 32,\n    onScroll: new Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          x: scrollX\n        }\n      }\n    }], {\n      useNativeDriver: false\n    }),\n    bounces: true,\n    onViewableItemsChanged: viewableItemChanged,\n    viewabilityConfig: viewConfig,\n    ref: slidesRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), currentIndex === slides.length - 1 && React.createElement(TouchableOpacity, {\n    onPress: _onDone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      borderRadius: 5,\n      paddingHorizontal: 20,\n      paddingVertical: 6,\n      backgroundColor: \"#ff6b81\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      fontFamily: \"Andika\",\n      fontSize: 18\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Get Started\"))), React.createElement(View, {\n    style: {\n      marginTop: 20,\n      flexDirection: \"row\",\n      height: 64\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, slides.map(function (s, i) {\n    var inputRange = [(i - 1) * width, i * width, (i + 1) * width];\n    var dotWidth = scrollX.interpolate({\n      inputRange: inputRange,\n      outputRange: [10, 20, 10],\n      extrapolate: \"clamp\"\n    });\n    var opacity = scrollX.interpolate({\n      inputRange: inputRange,\n      outputRange: [0.3, 1, 0.3],\n      extrapolate: \"clamp\"\n    });\n    return React.createElement(Animated.View, {\n      style: [styles.dot, {\n        width: dotWidth,\n        opacity: opacity\n      }],\n      key: i.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    });\n  }))));\n};\n\nexport default GettingStartedScreen;\nvar styles = new StyleSheet.create({\n  dot: {\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: \"#ff6b81\",\n    marginHorizontal: 8\n  },\n  loginButton: {\n    marginVertical: 10,\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 55,\n    paddingVertical: 15,\n    borderRadius: 10\n  },\n  signupButton: {\n    marginVertical: 20,\n    backgroundColor: \"black\",\n    paddingHorizontal: 45,\n    paddingVertical: 15,\n    borderRadius: 10\n  },\n  buttonContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    width: WIDTH,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Tour On/Touron-Mobileapp/src/Screens/AuthScreens/GettingStartedScreen.js"],"names":["React","useState","useRef","useWindowDimensions","HEIGHT","Dimensions","get","height","WIDTH","width","GettingStartedScreen","navigation","currentIndex","setCurrentIndex","scrollX","Animated","Value","current","viewConfig","viewAreaCoveragePercentThreshold","slidesRef","viewableItemChanged","viewableItems","index","slides","key","image","require","_onDone","navigate","justifyContent","alignItems","flex","backgroundColor","item","event","nativeEvent","contentOffset","x","useNativeDriver","length","borderRadius","paddingHorizontal","paddingVertical","color","fontFamily","fontSize","marginTop","flexDirection","map","s","i","inputRange","dotWidth","interpolate","outputRange","extrapolate","opacity","styles","dot","toString","StyleSheet","create","marginHorizontal","loginButton","marginVertical","signupButton","buttonContainer","position","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  Animated,\r\n  Dimensions,\r\n  Text,\r\n  FlatList,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\n\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\n\r\nconst GettingStartedScreen = ({ navigation }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const scrollX = useRef(new Animated.Value(0)).current;\r\n  const viewConfig = useRef({ viewAreaCoveragePercentThreshold: 50 }).current;\r\n  const slidesRef = useRef(null);\r\n  const viewableItemChanged = useRef(({ viewableItems }) => {\r\n    setCurrentIndex(viewableItems[0].index);\r\n  }).current;\r\n  const { width, height } = useWindowDimensions();\r\n  const slides = [\r\n    {\r\n      key: \"1\",\r\n      image: require(\"../../../assets/intros/1.png\"),\r\n    },\r\n    {\r\n      key: \"2\",\r\n      image: require(\"../../../assets/intros/2.png\"),\r\n    },\r\n    {\r\n      key: \"3\",\r\n      image: require(\"../../../assets/intros/3.png\"),\r\n    },\r\n    {\r\n      key: \"4\",\r\n      image: require(\"../../../assets/intros/4.png\"),\r\n    },\r\n  ];\r\n\r\n  const _onDone = () => {\r\n    navigation.navigate(\"HomeDrawer\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          flex: 1,\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      >\r\n        <FlatList\r\n          data={slides}\r\n          key={(item, index) => item.key}\r\n          renderItem={({ item }) => (\r\n            <View>\r\n              <Image\r\n                source={item.image}\r\n                resizeMode=\"cover\"\r\n                style={{ height: height * 0.8, width: width }}\r\n              />\r\n            </View>\r\n          )}\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          pagingEnabled\r\n          scrollEventThrottle={32}\r\n          onScroll={\r\n            new Animated.event(\r\n              [{ nativeEvent: { contentOffset: { x: scrollX } } }],\r\n              { useNativeDriver: false }\r\n            )\r\n          }\r\n          bounces={true}\r\n          onViewableItemsChanged={viewableItemChanged}\r\n          viewabilityConfig={viewConfig}\r\n          ref={slidesRef}\r\n        />\r\n        {currentIndex === slides.length - 1 && (\r\n          <TouchableOpacity onPress={_onDone}>\r\n            <View\r\n              style={{\r\n                borderRadius: 5,\r\n                paddingHorizontal: 20,\r\n                paddingVertical: 6,\r\n                backgroundColor: \"#ff6b81\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ color: \"#fff\", fontFamily: \"Andika\", fontSize: 18 }}\r\n              >\r\n                Get Started\r\n              </Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        )}\r\n        <View style={{ marginTop: 20, flexDirection: \"row\", height: 64 }}>\r\n          {slides.map((s, i) => {\r\n            const inputRange = [(i - 1) * width, i * width, (i + 1) * width];\r\n            const dotWidth = scrollX.interpolate({\r\n              inputRange,\r\n              outputRange: [10, 20, 10],\r\n              extrapolate: \"clamp\",\r\n            });\r\n            const opacity = scrollX.interpolate({\r\n              inputRange,\r\n              outputRange: [0.3, 1, 0.3],\r\n              extrapolate: \"clamp\",\r\n            });\r\n\r\n            return (\r\n              <Animated.View\r\n                style={[styles.dot, { width: dotWidth, opacity }]}\r\n                key={i.toString()}\r\n              ></Animated.View>\r\n            );\r\n          })}\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GettingStartedScreen;\r\n\r\nconst styles = new StyleSheet.create({\r\n  dot: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n    backgroundColor: \"#ff6b81\",\r\n    marginHorizontal: 8,\r\n  },\r\n  loginButton: {\r\n    marginVertical: 10,\r\n    backgroundColor: \"#fff\",\r\n    paddingHorizontal: 55,\r\n    paddingVertical: 15,\r\n    borderRadius: 10,\r\n  },\r\n  signupButton: {\r\n    marginVertical: 20,\r\n    backgroundColor: \"black\",\r\n    paddingHorizontal: 45,\r\n    paddingVertical: 15,\r\n    borderRadius: 10,\r\n  },\r\n  buttonContainer: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    width: WIDTH,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}