{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Tour On\\\\Touron-Mobileapp\\\\src\\\\Screens\\\\AuthScreens\\\\SignInScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport Constants from \"expo-constants\";\nimport { database, auth } from \"firebase\";\nimport * as Animatable from \"react-native-animatable\";\nimport { Spinner } from \"native-base\";\nimport { AuthContext } from \"../../context/AuthContext\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: true,\n              shouldSetBadge: true\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\n\nfunction SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loaded = _useState6[0],\n      setLoaded = _useState6[1];\n\n  var _useContext = useContext(AuthContext),\n      setIsLoggedIn = _useContext.setIsLoggedIn,\n      setUser = _useContext.setUser,\n      setUserInfo = _useContext.setUserInfo;\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      step = _useState8[0],\n      setStep = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      err = _useState10[0],\n      setErr = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      req = _useState12[0],\n      setReq = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      expoToken = _useState14[0],\n      setExpoToken = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      notification = _useState16[0],\n      setNotification = _useState16[1];\n\n  var notificationListener = useRef();\n  var responseListener = useRef();\n\n  var storeToken = function storeToken(value) {\n    var token, pToken, userToken, _userToken;\n\n    return _regeneratorRuntime.async(function storeToken$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            token = AsyncStorage.getItem(\"userToken\");\n            pToken = JSON.stringify(token);\n            console.log(\"pToken\", pToken);\n\n            if (!pToken) {\n              _context2.next = 13;\n              break;\n            }\n\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"userToken\"));\n\n          case 7:\n            userToken = JSON.stringify(value);\n            console.log(\"userToken\", userToken);\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userToken\", userToken));\n\n          case 11:\n            _context2.next = 17;\n            break;\n\n          case 13:\n            _userToken = JSON.stringify(value);\n            console.log(\"userToken\", _userToken);\n            _context2.next = 17;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userToken\", _userToken));\n\n          case 17:\n            _context2.next = 22;\n            break;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 19]], Promise);\n  };\n\n  var removeToken = function removeToken() {\n    return _regeneratorRuntime.async(function removeToken$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"userToken\"));\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var forgetPassword = function forgetPassword() {\n    setLoaded(true);\n    auth().sendPasswordResetEmail(email).then(function (res) {\n      setLoaded(false);\n      setReq(true);\n      setTimeout(function () {\n        setStep(0);\n        setReq(false);\n      }, 3000);\n    }).catch(function (err) {\n      return console.log(err, \"err\");\n    });\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      auth().onAuthStateChanged(function (user) {\n        setUser(user);\n      });\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var getUserData = function getUserData(uid) {\n    console.log(\"user.uid\", uid);\n    database().ref(\"userGeneralInfo/\" + uid).on(\"value\", function (data) {\n      console.log(\"d\", data);\n\n      if (data === null) {\n        setUserInfo({});\n      } else {\n        var val = data.val();\n        setUserInfo(val);\n      }\n    });\n  };\n\n  var updateUserToken = function updateUserToken(user) {\n    if (user !== null) {\n      database().ref(\"userGeneralInfo/\" + user.uid).child(\"pushNotificationToken\").set(expoToken);\n    }\n  };\n\n  var signIn = function signIn() {\n    setLoaded(true);\n    auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      setUser(user.user);\n      setLoaded(false);\n      storeToken(user.user);\n      updateUserToken(user.user);\n      getUserData(user.user.uid);\n      setEmail(\"\");\n      setPassword(\"\");\n      setIsLoggedIn(true);\n      navigation.navigate(\"Main\");\n    }).catch(function (err) {\n      setLoaded(false);\n      setUser(null);\n      removeToken();\n      console.log(err.message, \"pcco\");\n      setErr(err.message);\n    });\n  };\n\n  var registerForPushNotificationsAsync = function registerForPushNotificationsAsync() {\n    var token, _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!Constants.isDevice) {\n              _context4.next = 21;\n              break;\n            }\n\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n          case 3:\n            _await$Permissions$ge = _context4.sent;\n            existingStatus = _await$Permissions$ge.status;\n            finalStatus = existingStatus;\n            console.log(finalStatus, existingStatus, \"stst\");\n\n            if (!(existingStatus !== \"granted\" || Platform.OS === \"android\")) {\n              _context4.next = 13;\n              break;\n            }\n\n            _context4.next = 10;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n          case 10:\n            _await$Permissions$as = _context4.sent;\n            status = _await$Permissions$as.status;\n            finalStatus = status;\n\n          case 13:\n            if (!(finalStatus !== \"granted\")) {\n              _context4.next = 16;\n              break;\n            }\n\n            alert(\"Failed to get push token for push notification!\");\n            return _context4.abrupt(\"return\");\n\n          case 16:\n            _context4.next = 18;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 18:\n            token = _context4.sent.data;\n            _context4.next = 22;\n            break;\n\n          case 21:\n            alert(\"Must use physical device for Push Notifications\");\n\n          case 22:\n            if (Platform.OS === \"android\") {\n              Notifications.setNotificationChannelAsync(\"default\", {\n                name: \"default\",\n                importance: Notifications.AndroidImportance.MAX,\n                vibrationPattern: [0, 250, 250, 250],\n                lightColor: \"#FF231F7C\"\n              });\n            }\n\n            return _context4.abrupt(\"return\", token);\n\n          case 24:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      registerForPushNotificationsAsync().then(function (token) {\n        return setExpoToken(token);\n      });\n      notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n        setNotification(notification);\n      });\n      responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n        console.log(response);\n      });\n      return function () {\n        Notifications.removeNotificationSubscription(notificationListener);\n        Notifications.removeNotificationSubscription(responseListener);\n      };\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var renderForm = function renderForm() {\n    switch (step) {\n      case 0:\n        return React.createElement(Animatable.View, {\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"flex-end\"\n          },\n          animation: \"fadeInUp\",\n          duration: 1500,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            position: \"absolute\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            marginBottom: HEIGHT / 10,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 40,\n            fontFamily: \"Andika\",\n            color: \"black\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }\n        }, \"Sign In\")), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: [styles.inputContainer, {\n            marginBottom: 30\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setEmail(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 19\n          }\n        })), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"visible-password\",\n          onChangeText: function onChangeText(value) {\n            return setPassword(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 19\n          }\n        })), err !== \"\" ? React.createElement(View, {\n          style: [styles.inputContainer, {\n            backgroundColor: \"transparent\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: [styles.input, {\n            color: \"red\",\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }\n        }, err)) : null), React.createElement(View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }\n        }, loaded ? React.createElement(View, {\n          style: {\n            paddingVertical: -10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 19\n          }\n        }, React.createElement(Spinner, {\n          color: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 21\n          }\n        })) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return signIn();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: styles.signinButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 21\n          }\n        }, \"Sign In\"))), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return setStep(1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: \"900\",\n            paddingTop: 20,\n            color: \"white\",\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }\n        }, \"Forgot Password ?\")), React.createElement(View, {\n          style: {\n            width: WIDTH * 0.9\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"SignUpScreen\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: \"900\",\n            color: \"white\",\n            textAlign: \"center\",\n            marginVertical: Platform.OS === \"ios\" ? 30 : 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 19\n          }\n        }, \"Don't have a account? Sign Up\")))), React.createElement(ImageBackground, {\n          style: {\n            width: WIDTH,\n            height: HEIGHT,\n            zIndex: -2\n          },\n          source: {\n            uri: \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }\n        }), React.createElement(View, {\n          style: styles.skipButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Main\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            color: \"#333\",\n            fontFamily: \"Andika\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }\n        }, \"Home\"))));\n\n      case 1:\n        return React.createElement(Animatable.View, {\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"flex-end\"\n          },\n          animation: \"fadeInUp\",\n          duration: 1500,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            position: \"absolute\",\n            paddingBottom: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            marginBottom: HEIGHT / 10,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 40,\n            fontFamily: \"Andika\",\n            color: \"black\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }\n        }, \"Enter the Email\")), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: [styles.inputContainer, {\n            marginBottom: 30\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setEmail(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 19\n          }\n        })), err !== \"\" ? React.createElement(View, {\n          style: [styles.inputContainer, {\n            backgroundColor: \"transparent\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: [styles.input, {\n            color: \"red\",\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 21\n          }\n        }, err)) : null), React.createElement(View, {\n          style: styles.forgetbuttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }\n        }, loaded ? React.createElement(View, {\n          style: {\n            paddingVertical: -10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 19\n          }\n        }, React.createElement(Spinner, {\n          color: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 21\n          }\n        })) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return forgetPassword();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 19\n          }\n        }, req ? React.createElement(Text, {\n          style: styles.forgetButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 23\n          }\n        }, \"Password reset mail sent to your email .\") : React.createElement(Text, {\n          style: styles.forgetButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 23\n          }\n        }, \"Change password\"))), React.createElement(View, {\n          style: {\n            width: WIDTH * 0.9\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return setStep(0);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: \"900\",\n            color: \"white\",\n            textAlign: \"center\",\n            marginVertical: Platform.OS === \"ios\" ? 30 : 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 19\n          }\n        }, \"Already have an account? Try Sign In\")))), React.createElement(ImageBackground, {\n          style: {\n            width: WIDTH,\n            height: HEIGHT,\n            zIndex: -2\n          },\n          source: {\n            uri: \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }\n        }));\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }\n  }, React.createElement(React.Fragment, null, renderForm())));\n}\n\nexport default SignInScreen;\nvar styles = StyleSheet.create({\n  input: {\n    marginHorizontal: 20,\n    width: WIDTH * 0.8,\n    height: 60,\n    color: \"#FFF\",\n    fontFamily: \"Andika\"\n  },\n  inputContainer: {\n    height: 60,\n    borderRadius: 10,\n    backgroundColor: \"#0005\"\n  },\n  skipButton: {\n    position: \"absolute\",\n    right: 20,\n    top: 0,\n    marginTop: HEIGHT / 20\n  },\n  signinButton: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"black\",\n    fontFamily: \"Andika\",\n    fontSize: 16\n  },\n  buttonContainer: {\n    marginTop: HEIGHT / 25,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\"\n  },\n  forgetButton: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"black\",\n    fontFamily: \"Andika\",\n    fontSize: 16\n  },\n  forgetbuttonContainer: {\n    marginBottom: 30,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\"\n  }\n});","map":{"version":3,"sources":["D:/Tour On/Touron-Mobileapp/src/Screens/AuthScreens/SignInScreen.js"],"names":["React","useState","useContext","useEffect","useRef","AsyncStorage","Notifications","Permissions","Constants","database","auth","Animatable","Spinner","AuthContext","WIDTH","Dimensions","get","width","HEIGHT","height","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","SignInScreen","navigation","password","setPassword","email","setEmail","loaded","setLoaded","setIsLoggedIn","setUser","setUserInfo","step","setStep","err","setErr","req","setReq","expoToken","setExpoToken","notification","setNotification","notificationListener","responseListener","storeToken","value","token","getItem","pToken","JSON","stringify","console","log","removeItem","userToken","setItem","removeToken","forgetPassword","sendPasswordResetEmail","then","res","setTimeout","catch","mounted","onAuthStateChanged","user","getUserData","uid","ref","on","data","val","updateUserToken","child","set","signIn","signInWithEmailAndPassword","navigate","message","registerForPushNotificationsAsync","isDevice","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","Platform","OS","askAsync","alert","getExpoPushTokenAsync","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor","current","addNotificationReceivedListener","addNotificationResponseReceivedListener","response","removeNotificationSubscription","renderForm","flex","alignItems","justifyContent","position","marginBottom","fontSize","fontFamily","color","styles","inputContainer","input","backgroundColor","buttonContainer","paddingVertical","signinButton","fontWeight","paddingTop","textAlign","marginVertical","zIndex","uri","skipButton","paddingBottom","forgetbuttonContainer","forgetButton","Keyboard","dismiss","StyleSheet","create","marginHorizontal","borderRadius","right","top","marginTop","alignContent"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Platform,\r\n  ImageBackground,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport * as Notifications from \"expo-notifications\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport Constants from \"expo-constants\";\r\nimport { database, auth } from \"firebase\";\r\nimport * as Animatable from \"react-native-animatable\";\r\nimport { Spinner } from \"native-base\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: true,\r\n    shouldSetBadge: true,\r\n  }),\r\n});\r\nfunction SignInScreen({ navigation }) {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loaded, setLoaded] = useState(false);\r\n  const { setIsLoggedIn, setUser, setUserInfo } = useContext(AuthContext);\r\n  const [step, setStep] = useState(0);\r\n  const [err, setErr] = useState(\"\");\r\n  const [req, setReq] = useState(false);\r\n  const [expoToken, setExpoToken] = useState(\"\");\r\n  const [notification, setNotification] = useState(false);\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n  const storeToken = async (value) => {\r\n    try {\r\n      const token = AsyncStorage.getItem(\"userToken\");\r\n      const pToken = JSON.stringify(token);\r\n      console.log(`pToken`, pToken);\r\n\r\n      if (pToken) {\r\n        await AsyncStorage.removeItem(\"userToken\");\r\n        const userToken = JSON.stringify(value);\r\n        console.log(`userToken`, userToken);\r\n        await AsyncStorage.setItem(\"userToken\", userToken);\r\n      } else {\r\n        const userToken = JSON.stringify(value);\r\n        console.log(`userToken`, userToken);\r\n\r\n        await AsyncStorage.setItem(\"userToken\", userToken);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const removeToken = async () => {\r\n    try {\r\n      await AsyncStorage.removeItem(\"userToken\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const forgetPassword = () => {\r\n    setLoaded(true);\r\n    auth()\r\n      .sendPasswordResetEmail(email)\r\n      .then((res) => {\r\n        setLoaded(false);\r\n        setReq(true);\r\n        setTimeout(() => {\r\n          setStep(0);\r\n          setReq(false);\r\n        }, 3000);\r\n      })\r\n      .catch((err) => console.log(err, \"err\"));\r\n  };\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted) {\r\n      auth().onAuthStateChanged((user) => {\r\n        setUser(user);\r\n      });\r\n    }\r\n    return () => (mounted = false);\r\n  }, []);\r\n\r\n  const getUserData = (uid) => {\r\n    console.log(`user.uid`, uid);\r\n    database()\r\n      .ref(`userGeneralInfo/${uid}`)\r\n      .on(\"value\", (data) => {\r\n        console.log(`d`, data);\r\n        if (data === null) {\r\n          setUserInfo({});\r\n        } else {\r\n          let val = data.val();\r\n          setUserInfo(val);\r\n        }\r\n      });\r\n  };\r\n  const updateUserToken = (user) => {\r\n    if (user !== null) {\r\n      database()\r\n        .ref(`userGeneralInfo/${user.uid}`)\r\n        .child(\"pushNotificationToken\")\r\n        .set(expoToken);\r\n    }\r\n  };\r\n  const signIn = () => {\r\n    setLoaded(true);\r\n\r\n    auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        setUser(user.user);\r\n        setLoaded(false);\r\n        storeToken(user.user);\r\n        updateUserToken(user.user);\r\n        getUserData(user.user.uid);\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setIsLoggedIn(true);\r\n        navigation.navigate(\"Main\");\r\n      })\r\n      .catch((err) => {\r\n        setLoaded(false);\r\n        setUser(null);\r\n        removeToken();\r\n        console.log(err.message, \"pcco\");\r\n        setErr(err.message);\r\n      });\r\n  };\r\n\r\n  const registerForPushNotificationsAsync = async () => {\r\n    let token;\r\n    if (Constants.isDevice) {\r\n      const { status: existingStatus } = await Permissions.getAsync(\r\n        Permissions.NOTIFICATIONS\r\n      );\r\n      let finalStatus = existingStatus;\r\n      console.log(finalStatus, existingStatus, \"stst\");\r\n\r\n      if (existingStatus !== \"granted\" || Platform.OS === \"android\") {\r\n        const { status } = await Permissions.askAsync(\r\n          Permissions.NOTIFICATIONS\r\n        );\r\n        finalStatus = status;\r\n      }\r\n      if (finalStatus !== \"granted\") {\r\n        alert(\"Failed to get push token for push notification!\");\r\n        return;\r\n      }\r\n      token = (await Notifications.getExpoPushTokenAsync()).data;\r\n    } else {\r\n      alert(\"Must use physical device for Push Notifications\");\r\n    }\r\n\r\n    if (Platform.OS === \"android\") {\r\n      Notifications.setNotificationChannelAsync(\"default\", {\r\n        name: \"default\",\r\n        importance: Notifications.AndroidImportance.MAX,\r\n        vibrationPattern: [0, 250, 250, 250],\r\n        lightColor: \"#FF231F7C\",\r\n      });\r\n    }\r\n\r\n    return token;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted) {\r\n      registerForPushNotificationsAsync().then((token) => setExpoToken(token));\r\n      // This listener is fired whenever a notification is received while the app is foregrounded\r\n      notificationListener.current =\r\n        Notifications.addNotificationReceivedListener((notification) => {\r\n          setNotification(notification);\r\n        });\r\n\r\n      // This listener is fired whenever a user taps on or interacts with a notification (works when app is foregrounded, backgrounded, or killed)\r\n      responseListener.current =\r\n        Notifications.addNotificationResponseReceivedListener((response) => {\r\n          console.log(response);\r\n        });\r\n\r\n      return () => {\r\n        Notifications.removeNotificationSubscription(notificationListener);\r\n        Notifications.removeNotificationSubscription(responseListener);\r\n      };\r\n    }\r\n\r\n    return () => (mounted = false);\r\n  }, []);\r\n\r\n  const renderForm = () => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <Animatable.View\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n            animation=\"fadeInUp\"\r\n            duration={1500}\r\n          >\r\n            <View style={{ position: \"absolute\" }}>\r\n              <View style={{ marginBottom: HEIGHT / 10, alignItems: \"center\" }}>\r\n                <Text\r\n                  style={{\r\n                    fontSize: 40,\r\n                    fontFamily: \"Andika\",\r\n                    color: \"black\",\r\n                  }}\r\n                >\r\n                  Sign In\r\n                </Text>\r\n              </View>\r\n              <View>\r\n                <View style={[styles.inputContainer, { marginBottom: 30 }]}>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Email\"\r\n                    keyboardType=\"visible-password\"\r\n                    keyboardAppearance=\"dark\"\r\n                    keyboardType=\"email-address\"\r\n                    onChangeText={(value) => setEmail(value)}\r\n                  />\r\n                </View>\r\n\r\n                <View style={styles.inputContainer}>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Password\"\r\n                    keyboardType=\"visible-password\"\r\n                    keyboardAppearance=\"dark\"\r\n                    keyboardType=\"visible-password\"\r\n                    onChangeText={(value) => setPassword(value)}\r\n                    // secureTextEntry={true}\r\n                  />\r\n                </View>\r\n                {err !== \"\" ? (\r\n                  <View\r\n                    style={[\r\n                      styles.inputContainer,\r\n                      { backgroundColor: \"transparent\" },\r\n                    ]}\r\n                  >\r\n                    <Text\r\n                      style={[styles.input, { color: \"red\", fontSize: 16 }]}\r\n                    >\r\n                      {err}\r\n                    </Text>\r\n                  </View>\r\n                ) : null}\r\n              </View>\r\n\r\n              <View style={styles.buttonContainer}>\r\n                {loaded ? (\r\n                  <View style={{ paddingVertical: -10 }}>\r\n                    <Spinner color=\"black\" />\r\n                  </View>\r\n                ) : (\r\n                  <TouchableOpacity onPress={() => signIn()}>\r\n                    <Text style={styles.signinButton}>Sign In</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </View>\r\n              <TouchableOpacity onPress={() => setStep(1)}>\r\n                <Text\r\n                  style={{\r\n                    fontWeight: \"900\",\r\n                    paddingTop: 20,\r\n                    color: \"white\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Forgot Password ?\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={{ width: WIDTH * 0.9 }}>\r\n                <TouchableOpacity\r\n                  onPress={() => navigation.navigate(\"SignUpScreen\")}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontWeight: \"900\",\r\n                      color: \"white\",\r\n                      textAlign: \"center\",\r\n                      marginVertical: Platform.OS === \"ios\" ? 30 : 20,\r\n                    }}\r\n                  >\r\n                    Don't have a account? Sign Up\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n            <ImageBackground\r\n              style={{ width: WIDTH, height: HEIGHT, zIndex: -2 }}\r\n              source={{\r\n                uri: \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n              }}\r\n            />\r\n            <View style={styles.skipButton}>\r\n              <TouchableOpacity onPress={() => navigation.navigate(\"Main\")}>\r\n                <Text\r\n                  style={{\r\n                    fontSize: 18,\r\n                    color: \"#333\",\r\n                    fontFamily: \"Andika\",\r\n                  }}\r\n                >\r\n                  Home\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Animatable.View>\r\n        );\r\n\r\n      case 1:\r\n        return (\r\n          <Animatable.View\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n            animation=\"fadeInUp\"\r\n            duration={1500}\r\n          >\r\n            <View style={{ position: \"absolute\", paddingBottom: 10 }}>\r\n              <View style={{ marginBottom: HEIGHT / 10, alignItems: \"center\" }}>\r\n                <Text\r\n                  style={{ fontSize: 40, fontFamily: \"Andika\", color: \"black\" }}\r\n                >\r\n                  Enter the Email\r\n                </Text>\r\n              </View>\r\n              <View>\r\n                <View style={[styles.inputContainer, { marginBottom: 30 }]}>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Email\"\r\n                    keyboardType=\"visible-password\"\r\n                    keyboardAppearance=\"dark\"\r\n                    keyboardType=\"email-address\"\r\n                    onChangeText={(value) => setEmail(value)}\r\n                  />\r\n                </View>\r\n\r\n                {err !== \"\" ? (\r\n                  <View\r\n                    style={[\r\n                      styles.inputContainer,\r\n                      { backgroundColor: \"transparent\" },\r\n                    ]}\r\n                  >\r\n                    <Text\r\n                      style={[styles.input, { color: \"red\", fontSize: 16 }]}\r\n                    >\r\n                      {err}\r\n                    </Text>\r\n                  </View>\r\n                ) : null}\r\n              </View>\r\n\r\n              <View style={styles.forgetbuttonContainer}>\r\n                {loaded ? (\r\n                  <View style={{ paddingVertical: -10 }}>\r\n                    <Spinner color=\"black\" />\r\n                  </View>\r\n                ) : (\r\n                  <TouchableOpacity onPress={() => forgetPassword()}>\r\n                    {req ? (\r\n                      <Text style={styles.forgetButton}>\r\n                        Password reset mail sent to your email .\r\n                      </Text>\r\n                    ) : (\r\n                      <Text style={styles.forgetButton}>Change password</Text>\r\n                    )}\r\n                  </TouchableOpacity>\r\n                )}\r\n              </View>\r\n              <View style={{ width: WIDTH * 0.9 }}>\r\n                <TouchableOpacity onPress={() => setStep(0)}>\r\n                  <Text\r\n                    style={{\r\n                      fontWeight: \"900\",\r\n                      color: \"white\",\r\n                      textAlign: \"center\",\r\n                      marginVertical: Platform.OS === \"ios\" ? 30 : 20,\r\n                    }}\r\n                  >\r\n                    Already have an account? Try Sign In\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n            <ImageBackground\r\n              style={{ width: WIDTH, height: HEIGHT, zIndex: -2 }}\r\n              source={{\r\n                uri: \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n              }}\r\n            />\r\n          </Animatable.View>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={{ flex: 1 }}\r\n        // style={styles.container}\r\n      >\r\n        <>{renderForm()}</>\r\n      </KeyboardAvoidingView>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nexport default SignInScreen;\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    marginHorizontal: 20,\r\n    width: WIDTH * 0.8,\r\n    height: 60,\r\n    color: \"#FFF\",\r\n    fontFamily: \"Andika\",\r\n  },\r\n  inputContainer: {\r\n    height: 60,\r\n    borderRadius: 10,\r\n    backgroundColor: \"#0005\",\r\n  },\r\n  skipButton: {\r\n    position: \"absolute\",\r\n    right: 20,\r\n    top: 0,\r\n    marginTop: HEIGHT / 20,\r\n  },\r\n  signinButton: {\r\n    textAlign: \"center\",\r\n    paddingVertical: 20,\r\n    color: \"black\",\r\n    fontFamily: \"Andika\",\r\n    fontSize: 16,\r\n  },\r\n  buttonContainer: {\r\n    marginTop: HEIGHT / 25,\r\n    backgroundColor: \"#FFF\",\r\n    borderRadius: 10,\r\n    width: WIDTH * 0.9,\r\n    alignContent: \"center\",\r\n    position: \"relative\",\r\n  },\r\n  forgetButton: {\r\n    textAlign: \"center\",\r\n    paddingVertical: 20,\r\n    color: \"black\",\r\n    fontFamily: \"Andika\",\r\n    fontSize: 16,\r\n  },\r\n  forgetbuttonContainer: {\r\n    marginBottom: 30,\r\n    backgroundColor: \"#FFF\",\r\n    borderRadius: 10,\r\n    width: WIDTH * 0.9,\r\n    alignContent: \"center\",\r\n    position: \"relative\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}