{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Tour On\\\\Touron-Mobileapp\\\\src\\\\Screens\\\\CountryScreens\\\\CountryHomeScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Feather } from \"@expo/vector-icons\";\nimport touron from \"../../api/touron\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport ProgressiveImage from \"./../../Reusable Components/ProgressiveImage\";\nimport axios from \"axios\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\n\nvar CountryHomeScreen = function CountryHomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      countries = _useContext.countries;\n\n  var _useState = useState(countries),\n      _useState2 = _slicedToArray(_useState, 2),\n      country = _useState2[0],\n      setCountry = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loader = _useState4[0],\n      setLoader = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      countryName = _useState8[0],\n      setCountryName = _useState8[1];\n\n  var showLoader = function showLoader() {\n    setTimeout(function () {\n      setLoader(false);\n    }, 500);\n  };\n\n  useEffect(function () {\n    var source = axios.CancelToken.source();\n    getCountry();\n    showLoader();\n    return function () {\n      return source.cancel();\n    };\n  }, []);\n\n  var getCountry = function getCountry() {\n    var countryResponse;\n    return _regeneratorRuntime.async(function getCountry$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(touron.get(\"/country\"));\n\n          case 3:\n            countryResponse = _context.sent;\n            setCountry(countryResponse.data);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setErrorMessage(\"Something went wrong\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var search = function search() {\n    console.log(countryName, \"NAME\");\n    var d = country.filter(function (c) {\n      return c.countryName.trim().toUpperCase().includes(countryName.trim().toUpperCase());\n    });\n    return d;\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, loader ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, React.createElement(Feather, {\n    name: \"search\",\n    style: styles.iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Ex. Dubai,Australia\",\n    onChangeText: function onChangeText(value) {\n      return setCountryName(value);\n    },\n    onSubmitEditing: search,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.countryGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, search().map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      key: item._id,\n      onPress: function onPress() {\n        navigation.navigate(\"CountryInner\", {\n          item: item\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styles.imageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, item.countryName), React.createElement(ProgressiveImage, {\n      style: styles.image,\n      source: {\n        uri: item.imageUrl\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }))));\n  }))));\n};\n\nexport default CountryHomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 70\n  },\n  imageContainer: {\n    padding: 5,\n    position: \"relative\"\n  },\n  image: {\n    height: HEIGHT / 3.25,\n    width: WIDTH / 2.25,\n    justifyContent: \"space-around\",\n    borderRadius: 18,\n    flexDirection: \"row\"\n  },\n  name: {\n    position: \"absolute\",\n    fontSize: 20,\n    color: \"#fff\",\n    zIndex: 1,\n    fontFamily: \"Andika\",\n    top: 10,\n    left: 20\n  },\n  background: {\n    backgroundColor: \"#fff\",\n    height: HEIGHT / 15,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    width: WIDTH * 0.9,\n    marginVertical: 20,\n    marginHorizontal: 20\n  },\n  inputStyle: {\n    fontSize: 18,\n    flex: 1\n  },\n  iconStyle: {\n    fontSize: 30,\n    alignSelf: \"center\",\n    marginHorizontal: 15\n  },\n  countryGrid: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    marginBottom: 30\n  }\n});","map":{"version":3,"sources":["D:/Tour On/Touron-Mobileapp/src/Screens/CountryScreens/CountryHomeScreen.js"],"names":["React","useEffect","useState","useContext","Feather","touron","AuthContext","ProgressiveImage","axios","WIDTH","Dimensions","get","width","HEIGHT","height","CountryHomeScreen","navigation","countries","country","setCountry","loader","setLoader","error","setErrorMessage","countryName","setCountryName","showLoader","setTimeout","source","CancelToken","getCountry","cancel","countryResponse","data","search","console","log","d","filter","c","trim","toUpperCase","includes","styles","container","background","iconStyle","inputStyle","value","countryGrid","map","item","_id","navigate","imageContainer","name","image","uri","imageUrl","StyleSheet","create","flex","paddingTop","padding","position","justifyContent","borderRadius","flexDirection","fontSize","color","zIndex","fontFamily","top","left","backgroundColor","marginVertical","marginHorizontal","alignSelf","flexWrap","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Dimensions,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport touron from \"../../api/touron\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport ProgressiveImage from \"./../../Reusable Components/ProgressiveImage\";\r\nimport axios from \"axios\";\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\n\r\nconst CountryHomeScreen = ({ navigation }) => {\r\n  const { countries } = useContext(AuthContext);\r\n  const [country, setCountry] = useState(countries);\r\n  const [loader, setLoader] = useState(false);\r\n  const [error, setErrorMessage] = useState(\"\");\r\n  const [countryName, setCountryName] = useState(\"\");\r\n\r\n  const showLoader = () => {\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n    }, 500);\r\n  };\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    getCountry();\r\n    showLoader();\r\n\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  const getCountry = async () => {\r\n    try {\r\n      const countryResponse = await touron.get(\"/country\");\r\n      setCountry(countryResponse.data);\r\n    } catch (err) {\r\n      setErrorMessage(\"Something went wrong\");\r\n    }\r\n  };\r\n  const search = () => {\r\n    console.log(countryName, \"NAME\");\r\n\r\n    const d = country.filter((c) => {\r\n      return c.countryName\r\n        .trim()\r\n        .toUpperCase()\r\n        .includes(countryName.trim().toUpperCase());\r\n    });\r\n    return d;\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {loader ? (\r\n        <ActivityIndicator size=\"large\" />\r\n      ) : (\r\n        <View>\r\n          <View style={styles.background}>\r\n            <Feather name=\"search\" style={styles.iconStyle}></Feather>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              placeholder=\"Ex. Dubai,Australia\"\r\n              onChangeText={(value) => setCountryName(value)}\r\n              onSubmitEditing={search}\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n              keyboardType=\"email-address\"\r\n            />\r\n          </View>\r\n          <View style={styles.countryGrid}>\r\n            {search().map((item) => (\r\n              <TouchableOpacity\r\n                key={item._id}\r\n                onPress={() => {\r\n                  navigation.navigate(\"CountryInner\", { item: item });\r\n                }}\r\n              >\r\n                <View style={styles.imageContainer}>\r\n                  <View>\r\n                    <Text style={styles.name}>{item.countryName}</Text>\r\n                    <ProgressiveImage\r\n                      style={styles.image}\r\n                      source={{ uri: item.imageUrl }}\r\n                    />\r\n                  </View>\r\n                </View>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        </View>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default CountryHomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 70,\r\n  },\r\n  imageContainer: {\r\n    padding: 5,\r\n    position: \"relative\",\r\n  },\r\n  image: {\r\n    height: HEIGHT / 3.25,\r\n    width: WIDTH / 2.25,\r\n    justifyContent: \"space-around\",\r\n    borderRadius: 18,\r\n    flexDirection: \"row\",\r\n  },\r\n  name: {\r\n    position: \"absolute\",\r\n    fontSize: 20,\r\n    color: \"#fff\",\r\n    zIndex: 1,\r\n    fontFamily: \"Andika\",\r\n    top: 10,\r\n    left: 20,\r\n  },\r\n  background: {\r\n    backgroundColor: \"#fff\",\r\n    height: HEIGHT / 15,\r\n    borderRadius: 20,\r\n    flexDirection: \"row\",\r\n    width: WIDTH * 0.9,\r\n    marginVertical: 20,\r\n    marginHorizontal: 20,\r\n  },\r\n  inputStyle: {\r\n    fontSize: 18,\r\n    flex: 1,\r\n  },\r\n  iconStyle: {\r\n    fontSize: 30,\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 15,\r\n  },\r\n  countryGrid: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}