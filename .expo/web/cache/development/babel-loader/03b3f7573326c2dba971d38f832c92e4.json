{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Tour On\\\\Touron-Mobileapp\\\\src\\\\Screens\\\\AuthScreens\\\\SignUpScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as Animatable from \"react-native-animatable\";\nimport { database, auth } from \"firebase\";\nimport { Spinner } from \"native-base\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport Constants from \"expo-constants\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: true,\n              shouldSetBadge: true\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\n\nfunction SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      step = _useState10[0],\n      setStep = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      code = _useState12[0],\n      setCode = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sessionID = _useState14[0],\n      setSessionID = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loaded = _useState16[0],\n      setLoaded = _useState16[1];\n\n  var _useContext = useContext(AuthContext),\n      setIsLoggedIn = _useContext.setIsLoggedIn,\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      err = _useState18[0],\n      setErr = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      numerr = _useState20[0],\n      setNumErr = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      emailerr = _useState22[0],\n      setEmailErr = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      nameerr = _useState24[0],\n      setNameErr = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      passerr = _useState26[0],\n      setPassErr = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      otperr = _useState28[0],\n      setOtpErr = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      expoToken = _useState30[0],\n      setExpoToken = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      notification = _useState32[0],\n      setNotification = _useState32[1];\n\n  var notificationListener = useRef();\n  var responseListener = useRef();\n\n  var storeToken = function storeToken(value) {\n    var token, pToken, userToken, _userToken;\n\n    return _regeneratorRuntime.async(function storeToken$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            token = AsyncStorage.getItem(\"userToken\");\n            pToken = JSON.stringify(token);\n\n            if (!pToken) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"userToken\"));\n\n          case 6:\n            userToken = JSON.stringify(value);\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userToken\", userToken));\n\n          case 9:\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _userToken = JSON.stringify(value);\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userToken\", _userToken));\n\n          case 14:\n            _context2.next = 19;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 16]], Promise);\n  };\n\n  var nextStep = function nextStep() {\n    setStep(step + 1);\n    setLoaded(false);\n  };\n\n  var prevStep = function prevStep() {\n    setStep(step - 1);\n    setLoaded(false);\n  };\n\n  var sendOtp = function sendOtp() {\n    console.log(\"clicked\");\n    setEmailErr(false);\n    setNumErr(false);\n    setPassErr(false);\n    setNameErr(false);\n\n    if (number.length === 10 && email.includes(\"@\") && password !== \"\" && name !== \" \") {\n      setLoaded(true);\n      auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n        setUser(user.user);\n        database().ref(\"userGeneralInfo/\" + user.user.uid).set({\n          phoneNumber: number,\n          name: name,\n          address: \"\",\n          age: \"\",\n          gender: \"\",\n          aboutMe: \"\",\n          travellerType: \"\",\n          admin: false,\n          pushNotificationToken: \"\",\n          photoURL: \"\",\n          email: email,\n          profession: \"\",\n          userID: user.user.uid\n        });\n        user.user.updateProfile({\n          displayName: name\n        }).then(function (displayName) {\n          return console.log(displayName);\n        }).catch(function (err) {\n          return console.log(err);\n        });\n        setIsLoggedIn(true);\n        storeToken(user.user);\n        axios.get(\"https://2factor.in/API/V1/8697a4f2-e821-11ea-9fa5-0200cd936042/SMS/+91\" + number + \"/AUTOGEN/touron\").then(function (response) {\n          var session = response.data.Details;\n          console.log(session, \"RESPONSE DATA\");\n          setLoaded(false);\n          setSessionID(session);\n          nextStep();\n        }).catch(function (err) {\n          console.log(err, \"kjhk\");\n        });\n      }).catch(function (err) {\n        setLoaded(false);\n        setErr(err.message);\n        console.log(err.message);\n      });\n    } else {\n      if (email.includes(\"@\") === false) {\n        setEmailErr(true);\n      }\n\n      if (number.length !== 10) {\n        setNumErr(true);\n      }\n\n      if (name == \"\") {\n        setNameErr(true);\n      }\n\n      if (password.length < 6) {\n        setPassErr(true);\n      }\n    }\n  };\n\n  var registerForPushNotificationsAsync = function registerForPushNotificationsAsync() {\n    var token, _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!Constants.isDevice) {\n              _context3.next = 22;\n              break;\n            }\n\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n          case 3:\n            _await$Permissions$ge = _context3.sent;\n            existingStatus = _await$Permissions$ge.status;\n            finalStatus = existingStatus;\n            console.log(finalStatus, existingStatus, \"stst\");\n\n            if (!(existingStatus !== \"granted\" || Platform.OS === \"android\")) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n          case 10:\n            _await$Permissions$as = _context3.sent;\n            status = _await$Permissions$as.status;\n            finalStatus = status;\n            console.log(finalStatus, \"fianl\");\n\n          case 14:\n            if (!(finalStatus !== \"granted\")) {\n              _context3.next = 17;\n              break;\n            }\n\n            alert(\"Failed to get push token for push notification!\");\n            return _context3.abrupt(\"return\");\n\n          case 17:\n            _context3.next = 19;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 19:\n            token = _context3.sent.data;\n            _context3.next = 23;\n            break;\n\n          case 22:\n            alert(\"Must use physical device for Push Notifications\");\n\n          case 23:\n            if (Platform.OS === \"android\") {\n              Notifications.setNotificationChannelAsync(\"default\", {\n                name: \"default\",\n                importance: Notifications.AndroidImportance.MAX,\n                vibrationPattern: [0, 250, 250, 250],\n                lightColor: \"#FF231F7C\"\n              });\n            }\n\n            return _context3.abrupt(\"return\", token);\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    registerForPushNotificationsAsync().then(function (token) {\n      return setExpoToken(token);\n    });\n    notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n      setNotification(notification);\n    });\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n      console.log(response);\n    });\n    return function () {\n      Notifications.removeNotificationSubscription(notificationListener);\n      Notifications.removeNotificationSubscription(responseListener);\n    };\n  }, []);\n\n  var verifyOtp = function verifyOtp() {\n    setLoaded(true);\n    axios.get(\"https://2factor.in/API/V1/8697a4f2-e821-11ea-9fa5-0200cd936042/SMS/VERIFY/\" + sessionID + \"/\" + code).then(function (response) {\n      console.log(response, \"RESPONSE\");\n      var status = response.data.Details;\n      console.log(status, \"STATUS\");\n\n      if (status == \"OTP Matched\") {\n        setName(\"\");\n        setNumber(\"\");\n        setPassword(\"\");\n        setEmail(\"\");\n        setUser(user);\n        setIsLoggedIn(true);\n        storeToken(user);\n        setLoaded(false);\n        navigation.navigate(\"Main\");\n        prevStep();\n      }\n    }).catch(function (err) {\n      setLoaded(false);\n      console.log(err, \"err\");\n      setOtpErr(true);\n    });\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      auth().onAuthStateChanged(function (user) {\n        setUser(user);\n      });\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var renderView = function renderView(step) {\n    switch (step) {\n      case 0:\n        return React.createElement(ScrollView, {\n          showsVerticalScrollIndicator: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.skip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Main\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            color: \"#333\",\n            fontFamily: \"Andika\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }\n        }, \"Skip\"))), React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"flex-end\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }\n        }, React.createElement(Animatable.View, {\n          animation: \"fadeInUp\",\n          duration: 1500,\n          style: {\n            alignItems: \"flex-end\",\n            alignItems: \"center\",\n            marginTop: HEIGHT / 6\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            marginBottom: HEIGHT / 7,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 40,\n            color: \"white\",\n            fontFamily: \"NewYorkl\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 19\n          }\n        }, \"Sign Up\")), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          value: name,\n          placeholder: \"Name\",\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setName(value);\n          },\n          placeholderTextColor: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 19\n          }\n        })), !nameerr ? null : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 0\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            marginBottom: 10,\n            fontSize: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 21\n          }\n        }, \"Enter Your Name\")), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          autoCapitalize: \"none\",\n          value: email,\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setEmail(value);\n          },\n          placeholderTextColor: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 19\n          }\n        })), !emailerr ? null && err !== \"\" : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 10\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            margin: 0,\n            fontSize: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 21\n          }\n        }, \"Enter a Valid email id\"), React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            margin: 0,\n            fontSize: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 21\n          }\n        }, err)), err == \"\" ? null : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 10\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            margin: 0,\n            fontSize: 14\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 21\n          }\n        }, err)), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          value: number,\n          placeholder: \"Whatsapp Number\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"number-pad\",\n          placeholderTextColor: \"white\",\n          onChangeText: function onChangeText(value) {\n            return setNumber(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 19\n          }\n        })), !numerr ? null : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 10\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            margin: 0,\n            fontSize: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 21\n          }\n        }, \"Phone number should be 10 number\")), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          secureTextEntry: true,\n          placeholder: \"Password\",\n          value: password,\n          placeholderTextColor: \"white\",\n          keyboardType: \"visible-password\",\n          onChangeText: function onChangeText(value) {\n            return setPassword(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 19\n          }\n        })), !passerr ? null : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 10\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            margin: 0,\n            fontSize: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 21\n          }\n        }, \"Password should be atleast minimum 6 charecters\")), React.createElement(View, {\n          style: styles.otpButtonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 17\n          }\n        }, loaded ? React.createElement(View, {\n          style: {\n            paddingVertical: -10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 21\n          }\n        }, React.createElement(Spinner, {\n          color: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 23\n          }\n        })) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            sendOtp();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.optButtonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 23\n          }\n        }, \"Send Otp\"))), React.createElement(View, {\n          style: {\n            position: \"absolute\",\n            bottom: 20,\n            width: WIDTH * 0.9\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"SignInScreen\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: \"900\",\n            textAlign: \"center\",\n            color: \"white\",\n            marginVertical: WIDTH / 14\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 21\n          }\n        }, \"Already have an account? Try Sign In\"))))));\n\n      case 1:\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            marginVertical: HEIGHT / 10,\n            position: \"absolute\",\n            bottom: HEIGHT * 0.7\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 25,\n            color: \"white\",\n            fontFamily: \"Andika\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }\n        }, \"Enter the otp send to\"), React.createElement(Text, {\n          style: {\n            fontSize: 25,\n            color: \"white\",\n            fontFamily: \"Andika\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }\n        }, \"+91 \", number)), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter Otp\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"number-pad\",\n          onChangeText: function onChangeText(value) {\n            return setCode(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 17\n          }\n        })), !otperr ? null : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 0\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"red\",\n            marginBottom: 0,\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 19\n          }\n        }, \"Enter Valid Otp\")), React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            prevStep();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.otpButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: styles.otpText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 21\n          }\n        }, \" Back\"))), React.createElement(View, {\n          style: [styles.otpButton, {\n            backgroundColor: \"white\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 17\n          }\n        }, loaded ? React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 21\n          }\n        }, React.createElement(Spinner, {\n          color: \"black\",\n          size: \"large\",\n          style: {\n            padding: 20,\n            margin: -15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 23\n          }\n        })) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            verifyOtp();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: [styles.otpText, {\n            color: \"black\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 23\n          }\n        }, \"Sign Up\"))))));\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 7\n    }\n  }, React.createElement(Animatable.View, {\n    duration: 1000,\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    style: {\n      width: WIDTH,\n      height: HEIGHT + 30,\n      position: \"absolute\"\n    },\n    source: {\n      uri: \"https://images.pexels.com/photos/2249602/pexels-photo-2249602.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 11\n    }\n  }), renderView(step))));\n}\n\nexport default SignUpScreen;\nvar styles = new StyleSheet.create({\n  otpButton: {\n    marginTop: HEIGHT / 25,\n    marginBottom: 85,\n    backgroundColor: \"black\",\n    borderRadius: 10,\n    width: WIDTH / 3,\n    alignContent: \"center\",\n    marginHorizontal: 20,\n    paddingHorizontal: 10,\n    position: \"relative\"\n  },\n  otpText: {\n    textAlign: \"center\",\n    paddingVertical: 10,\n    color: \"white\",\n    fontSize: 16,\n    fontFamily: \"Andika\"\n  },\n  input: {\n    marginHorizontal: 20,\n    width: WIDTH * 0.8,\n    height: 60,\n    color: \"white\",\n    fontFamily: \"Andika\"\n  },\n  inputContainer: {\n    height: 60,\n    borderRadius: 10,\n    backgroundColor: \"#0005\",\n    marginBottom: 20\n  },\n  optButtonText: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"white\",\n    fontSize: 16,\n    fontFamily: \"Andika\"\n  },\n  otpButtonContainer: {\n    marginBottom: HEIGHT / 8,\n    backgroundColor: \"black\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\"\n  },\n  skip: {\n    position: \"absolute\",\n    right: 20,\n    color: \"#333\",\n    fontWeight: \"bold\",\n    marginTop: HEIGHT / 20\n  }\n});","map":{"version":3,"sources":["D:/Tour On/Touron-Mobileapp/src/Screens/AuthScreens/SignUpScreen.js"],"names":["React","useState","useRef","useEffect","useContext","AsyncStorage","Animatable","database","auth","Spinner","Notifications","Permissions","Constants","WIDTH","Dimensions","get","width","HEIGHT","height","axios","AuthContext","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","SignUpScreen","navigation","number","setNumber","email","setEmail","name","setName","password","setPassword","step","setStep","code","setCode","sessionID","setSessionID","loaded","setLoaded","setIsLoggedIn","user","setUser","err","setErr","numerr","setNumErr","emailerr","setEmailErr","nameerr","setNameErr","passerr","setPassErr","otperr","setOtpErr","expoToken","setExpoToken","notification","setNotification","notificationListener","responseListener","storeToken","value","token","getItem","pToken","JSON","stringify","removeItem","userToken","setItem","console","log","nextStep","prevStep","sendOtp","length","includes","createUserWithEmailAndPassword","then","ref","uid","set","phoneNumber","address","age","gender","aboutMe","travellerType","admin","pushNotificationToken","photoURL","profession","userID","updateProfile","displayName","catch","response","session","data","Details","message","registerForPushNotificationsAsync","isDevice","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","Platform","OS","askAsync","alert","getExpoPushTokenAsync","setNotificationChannelAsync","importance","AndroidImportance","MAX","vibrationPattern","lightColor","current","addNotificationReceivedListener","addNotificationResponseReceivedListener","removeNotificationSubscription","verifyOtp","navigate","mounted","onAuthStateChanged","renderView","styles","skip","fontSize","color","fontFamily","flex","justifyContent","alignItems","marginTop","marginBottom","inputContainer","input","backgroundColor","margin","otpButtonContainer","paddingVertical","optButtonText","position","bottom","fontWeight","textAlign","marginVertical","flexDirection","otpButton","otpText","padding","Keyboard","dismiss","uri","StyleSheet","create","borderRadius","alignContent","marginHorizontal","paddingHorizontal","right"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n  StyleSheet,\r\n  KeyboardAvoidingView,\r\n  Dimensions,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Platform,\r\n  ScrollView,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport * as Animatable from \"react-native-animatable\";\r\nimport { database, auth } from \"firebase\";\r\nimport { Spinner } from \"native-base\";\r\nimport * as Notifications from \"expo-notifications\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport Constants from \"expo-constants\";\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: true,\r\n    shouldSetBadge: true,\r\n  }),\r\n});\r\n\r\nfunction SignUpScreen({ navigation }) {\r\n  const [number, setNumber] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [step, setStep] = useState(0);\r\n  const [code, setCode] = useState(0);\r\n  const [sessionID, setSessionID] = useState(\"\");\r\n  const [loaded, setLoaded] = useState(false);\r\n  const { setIsLoggedIn, user, setUser } = useContext(AuthContext);\r\n  const [err, setErr] = useState(\"\");\r\n  const [numerr, setNumErr] = useState(false);\r\n  const [emailerr, setEmailErr] = useState(false);\r\n  const [nameerr, setNameErr] = useState(false);\r\n  const [passerr, setPassErr] = useState(false);\r\n  const [otperr, setOtpErr] = useState(false);\r\n  const [expoToken, setExpoToken] = useState(\"\");\r\n  const [notification, setNotification] = useState(false);\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n  const storeToken = async (value) => {\r\n    try {\r\n      const token = AsyncStorage.getItem(\"userToken\");\r\n      const pToken = JSON.stringify(token);\r\n\r\n      if (pToken) {\r\n        await AsyncStorage.removeItem(\"userToken\");\r\n        const userToken = JSON.stringify(value);\r\n        await AsyncStorage.setItem(\"userToken\", userToken);\r\n      } else {\r\n        const userToken = JSON.stringify(value);\r\n        await AsyncStorage.setItem(\"userToken\", userToken);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const nextStep = () => {\r\n    setStep(step + 1);\r\n    setLoaded(false);\r\n  };\r\n  const prevStep = () => {\r\n    setStep(step - 1);\r\n    setLoaded(false);\r\n  };\r\n\r\n  const sendOtp = () => {\r\n    console.log(\"clicked\");\r\n    setEmailErr(false);\r\n    setNumErr(false);\r\n    setPassErr(false);\r\n    setNameErr(false);\r\n\r\n    if (\r\n      number.length === 10 &&\r\n      email.includes(\"@\") &&\r\n      password !== \"\" &&\r\n      name !== \" \"\r\n    ) {\r\n      setLoaded(true);\r\n\r\n      auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((user) => {\r\n          setUser(user.user);\r\n          database().ref(`userGeneralInfo/${user.user.uid}`).set({\r\n            phoneNumber: number,\r\n            name: name,\r\n            address: \"\",\r\n            age: \"\",\r\n            gender: \"\",\r\n            aboutMe: \"\",\r\n            travellerType: \"\",\r\n            admin: false,\r\n            pushNotificationToken: \"\",\r\n            photoURL: \"\",\r\n            email: email,\r\n            profession: \"\",\r\n            userID: user.user.uid,\r\n          });\r\n          user.user\r\n            .updateProfile({\r\n              displayName: name,\r\n            })\r\n            .then((displayName) => console.log(displayName))\r\n            .catch((err) => console.log(err));\r\n          setIsLoggedIn(true);\r\n          storeToken(user.user);\r\n          axios\r\n            .get(\r\n              `https://2factor.in/API/V1/8697a4f2-e821-11ea-9fa5-0200cd936042/SMS/+91${number}/AUTOGEN/touron`\r\n            )\r\n            .then((response) => {\r\n              let session = response.data.Details;\r\n              console.log(session, \"RESPONSE DATA\");\r\n              setLoaded(false);\r\n              setSessionID(session);\r\n              nextStep();\r\n            })\r\n            .catch((err) => {\r\n              console.log(err, \"kjhk\");\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          setLoaded(false);\r\n          setErr(err.message);\r\n          console.log(err.message);\r\n        });\r\n    } else {\r\n      if (email.includes(\"@\") === false) {\r\n        setEmailErr(true);\r\n      }\r\n      if (number.length !== 10) {\r\n        setNumErr(true);\r\n      }\r\n      if (name == \"\") {\r\n        setNameErr(true);\r\n      }\r\n      if (password.length < 6) {\r\n        setPassErr(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const registerForPushNotificationsAsync = async () => {\r\n    let token;\r\n    if (Constants.isDevice) {\r\n      const { status: existingStatus } = await Permissions.getAsync(\r\n        Permissions.NOTIFICATIONS\r\n      );\r\n      let finalStatus = existingStatus;\r\n      console.log(finalStatus, existingStatus, \"stst\");\r\n\r\n      if (existingStatus !== \"granted\" || Platform.OS === \"android\") {\r\n        const { status } = await Permissions.askAsync(\r\n          Permissions.NOTIFICATIONS\r\n        );\r\n        finalStatus = status;\r\n\r\n        console.log(finalStatus, \"fianl\");\r\n      }\r\n      if (finalStatus !== \"granted\") {\r\n        alert(\"Failed to get push token for push notification!\");\r\n        return;\r\n      }\r\n      token = (await Notifications.getExpoPushTokenAsync()).data;\r\n    } else {\r\n      alert(\"Must use physical device for Push Notifications\");\r\n    }\r\n\r\n    if (Platform.OS === \"android\") {\r\n      Notifications.setNotificationChannelAsync(\"default\", {\r\n        name: \"default\",\r\n        importance: Notifications.AndroidImportance.MAX,\r\n        vibrationPattern: [0, 250, 250, 250],\r\n        lightColor: \"#FF231F7C\",\r\n      });\r\n    }\r\n\r\n    return token;\r\n  };\r\n\r\n  useEffect(() => {\r\n    registerForPushNotificationsAsync().then((token) => setExpoToken(token));\r\n    // This listener is fired whenever a notification is received while the app is foregrounded\r\n    notificationListener.current = Notifications.addNotificationReceivedListener(\r\n      (notification) => {\r\n        setNotification(notification);\r\n      }\r\n    );\r\n\r\n    // This listener is fired whenever a user taps on or interacts with a notification (works when app is foregrounded, backgrounded, or killed)\r\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(\r\n      (response) => {\r\n        console.log(response);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(notificationListener);\r\n      Notifications.removeNotificationSubscription(responseListener);\r\n    };\r\n  }, []);\r\n\r\n  const verifyOtp = () => {\r\n    setLoaded(true);\r\n    axios\r\n      .get(\r\n        `https://2factor.in/API/V1/8697a4f2-e821-11ea-9fa5-0200cd936042/SMS/VERIFY/${sessionID}/${code}`\r\n      )\r\n      .then((response) => {\r\n        console.log(response, \"RESPONSE\");\r\n        const status = response.data.Details;\r\n        console.log(status, \"STATUS\");\r\n        if (status == \"OTP Matched\") {\r\n          setName(\"\");\r\n          setNumber(\"\");\r\n          setPassword(\"\");\r\n          setEmail(\"\");\r\n          setUser(user);\r\n          setIsLoggedIn(true);\r\n          storeToken(user);\r\n          setLoaded(false);\r\n          navigation.navigate(\"Main\");\r\n          prevStep();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoaded(false);\r\n        console.log(err, \"err\");\r\n        setOtpErr(true);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted) {\r\n      auth().onAuthStateChanged((user) => {\r\n        setUser(user);\r\n      });\r\n    }\r\n    return () => (mounted = false);\r\n  }, []);\r\n\r\n  const renderView = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <ScrollView showsVerticalScrollIndicator={false}>\r\n            <View style={styles.skip}>\r\n              <TouchableOpacity onPress={() => navigation.navigate(\"Main\")}>\r\n                <Text\r\n                  style={{ fontSize: 18, color: \"#333\", fontFamily: \"Andika\" }}\r\n                >\r\n                  Skip\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Animatable.View\r\n                animation=\"fadeInUp\"\r\n                duration={1500}\r\n                style={{\r\n                  alignItems: \"flex-end\",\r\n                  alignItems: \"center\",\r\n                  marginTop: HEIGHT / 6,\r\n                }}\r\n              >\r\n                <View\r\n                  style={{ marginBottom: HEIGHT / 7, alignItems: \"center\" }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 40,\r\n                      color: \"white\",\r\n                      fontFamily: \"NewYorkl\",\r\n                    }}\r\n                  >\r\n                    Sign Up\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    value={name}\r\n                    placeholder=\"Name\"\r\n                    keyboardType=\"visible-password\"\r\n                    keyboardAppearance=\"dark\"\r\n                    keyboardType=\"email-address\"\r\n                    onChangeText={(value) => setName(value)}\r\n                    placeholderTextColor=\"white\"\r\n                  />\r\n                </View>\r\n                {!nameerr ? null : (\r\n                  <View\r\n                    style={\r\n                      ([styles.inputContainer],\r\n                      { backgroundColor: \"transparent\", marginBottom: 0 })\r\n                    }\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"yellow\",\r\n                        marginBottom: 10,\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      Enter Your Name\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                <View style={styles.inputContainer}>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Email\"\r\n                    autoCapitalize=\"none\"\r\n                    value={email}\r\n                    keyboardType=\"visible-password\"\r\n                    keyboardAppearance=\"dark\"\r\n                    keyboardType=\"email-address\"\r\n                    onChangeText={(value) => setEmail(value)}\r\n                    placeholderTextColor=\"white\"\r\n                  />\r\n                </View>\r\n                {!emailerr ? (\r\n                  null && err !== \"\"\r\n                ) : (\r\n                  <View\r\n                    style={\r\n                      ([styles.inputContainer],\r\n                      { backgroundColor: \"transparent\", marginBottom: 10 })\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"yellow\", margin: 0, fontSize: 16 }}>\r\n                      Enter a Valid email id\r\n                    </Text>\r\n                    <Text style={{ color: \"yellow\", margin: 0, fontSize: 16 }}>\r\n                      {err}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                {err == \"\" ? null : (\r\n                  <View\r\n                    style={\r\n                      ([styles.inputContainer],\r\n                      { backgroundColor: \"transparent\", marginBottom: 10 })\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"yellow\", margin: 0, fontSize: 14 }}>\r\n                      {err}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n\r\n                <View style={styles.inputContainer}>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    value={number}\r\n                    placeholder=\"Whatsapp Number\"\r\n                    keyboardAppearance=\"dark\"\r\n                    keyboardType=\"number-pad\"\r\n                    placeholderTextColor=\"white\"\r\n                    onChangeText={(value) => setNumber(value)}\r\n                  />\r\n                </View>\r\n                {!numerr ? null : (\r\n                  <View\r\n                    style={\r\n                      ([styles.inputContainer],\r\n                      { backgroundColor: \"transparent\", marginBottom: 10 })\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"yellow\", margin: 0, fontSize: 16 }}>\r\n                      Phone number should be 10 number\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n                <View style={styles.inputContainer}>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    secureTextEntry={true}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    placeholderTextColor=\"white\"\r\n                    keyboardType=\"visible-password\"\r\n                    // secureTextEntry={true}\r\n                    onChangeText={(value) => setPassword(value)}\r\n                  />\r\n                </View>\r\n                {!passerr ? null : (\r\n                  <View\r\n                    style={\r\n                      ([styles.inputContainer],\r\n                      { backgroundColor: \"transparent\", marginBottom: 10 })\r\n                    }\r\n                  >\r\n                    <Text style={{ color: \"yellow\", margin: 0, fontSize: 16 }}>\r\n                      Password should be atleast minimum 6 charecters\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n\r\n                <View style={styles.otpButtonContainer}>\r\n                  {loaded ? (\r\n                    <View style={{ paddingVertical: -10 }}>\r\n                      <Spinner color=\"white\" />\r\n                    </View>\r\n                  ) : (\r\n                    <TouchableOpacity\r\n                      onPress={() => {\r\n                        sendOtp();\r\n                      }}\r\n                    >\r\n                      <Text style={styles.optButtonText}>Send Otp</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: 20,\r\n                    width: WIDTH * 0.9,\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    onPress={() => navigation.navigate(\"SignInScreen\")}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontWeight: \"900\",\r\n                        textAlign: \"center\",\r\n                        color: \"white\",\r\n                        marginVertical: WIDTH / 14,\r\n                      }}\r\n                    >\r\n                      Already have an account? Try Sign In\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </Animatable.View>\r\n            </View>\r\n          </ScrollView>\r\n        );\r\n      case 1:\r\n        return (\r\n          <View>\r\n            <View\r\n              style={{\r\n                marginVertical: HEIGHT / 10,\r\n                position: \"absolute\",\r\n                bottom: HEIGHT * 0.7,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: 25,\r\n                  color: \"white\",\r\n                  fontFamily: \"Andika\",\r\n                }}\r\n              >\r\n                Enter the otp send to\r\n              </Text>\r\n              <Text\r\n                style={{ fontSize: 25, color: \"white\", fontFamily: \"Andika\" }}\r\n              >\r\n                +91 {number}\r\n              </Text>\r\n            </View>\r\n            <View>\r\n              <View style={styles.inputContainer}>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  placeholder=\"Enter Otp\"\r\n                  keyboardAppearance=\"dark\"\r\n                  keyboardType=\"number-pad\"\r\n                  onChangeText={(value) => setCode(value)}\r\n                />\r\n              </View>\r\n              {!otperr ? null : (\r\n                <View\r\n                  style={\r\n                    ([styles.inputContainer],\r\n                    { backgroundColor: \"transparent\", marginBottom: 0 })\r\n                  }\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginBottom: 0,\r\n                      fontSize: 20,\r\n                    }}\r\n                  >\r\n                    Enter Valid Otp\r\n                  </Text>\r\n                </View>\r\n              )}\r\n\r\n              <View style={{ flexDirection: \"row\" }}>\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    prevStep();\r\n                  }}\r\n                >\r\n                  <View style={styles.otpButton}>\r\n                    <Text style={styles.otpText}> Back</Text>\r\n                  </View>\r\n                </TouchableOpacity>\r\n\r\n                <View style={[styles.otpButton, { backgroundColor: \"white\" }]}>\r\n                  {loaded ? (\r\n                    <View>\r\n                      <Spinner\r\n                        color=\"black\"\r\n                        size=\"large\"\r\n                        style={{ padding: 20, margin: -15 }}\r\n                      />\r\n                    </View>\r\n                  ) : (\r\n                    <TouchableOpacity\r\n                      onPress={() => {\r\n                        verifyOtp();\r\n                      }}\r\n                    >\r\n                      <Text style={[styles.otpText, { color: \"black\" }]}>\r\n                        Sign Up\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={{ flex: 1 }}\r\n      >\r\n        <Animatable.View\r\n          duration={1000}\r\n          style={{\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <ImageBackground\r\n            style={{\r\n              width: WIDTH,\r\n              height: HEIGHT + 30,\r\n              position: \"absolute\",\r\n              //zIndex: -2,\r\n            }}\r\n            source={{\r\n              uri:\r\n                \"https://images.pexels.com/photos/2249602/pexels-photo-2249602.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n            }}\r\n          />\r\n          {renderView(step)}\r\n        </Animatable.View>\r\n      </KeyboardAvoidingView>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nexport default SignUpScreen;\r\n\r\nconst styles = new StyleSheet.create({\r\n  otpButton: {\r\n    marginTop: HEIGHT / 25,\r\n    marginBottom: 85,\r\n    backgroundColor: \"black\",\r\n    borderRadius: 10,\r\n    width: WIDTH / 3,\r\n    alignContent: \"center\",\r\n    marginHorizontal: 20,\r\n    paddingHorizontal: 10,\r\n    position: \"relative\",\r\n  },\r\n  otpText: {\r\n    textAlign: \"center\",\r\n    paddingVertical: 10,\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontFamily: \"Andika\",\r\n    // fontWeight: \"bold\",\r\n  },\r\n  input: {\r\n    marginHorizontal: 20,\r\n    width: WIDTH * 0.8,\r\n    height: 60,\r\n    color: \"white\",\r\n    fontFamily: \"Andika\",\r\n  },\r\n  inputContainer: {\r\n    height: 60,\r\n    borderRadius: 10,\r\n    backgroundColor: \"#0005\",\r\n    marginBottom: 20,\r\n  },\r\n  optButtonText: {\r\n    textAlign: \"center\",\r\n    paddingVertical: 20,\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontFamily: \"Andika\",\r\n    //  fontWeight: \"bold\",\r\n  },\r\n  otpButtonContainer: {\r\n    marginBottom: HEIGHT / 8,\r\n    backgroundColor: \"black\",\r\n    borderRadius: 10,\r\n    width: WIDTH * 0.9,\r\n    alignContent: \"center\",\r\n    position: \"relative\",\r\n  },\r\n  skip: {\r\n    position: \"absolute\",\r\n    right: 20,\r\n    color: \"#333\",\r\n    fontWeight: \"bold\",\r\n    marginTop: HEIGHT / 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}