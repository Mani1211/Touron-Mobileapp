{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Project\\\\TourOn\\\\Touron-Mobileapp-1\\\\src\\\\Screens\\\\CountryScreens\\\\CountryHomeScreen.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport SearchBar from \"../../Reusable Components/SearchBar\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport CCTile from \"./CCTile\";\nimport HeaderTile from \"./../../Reusable Components/HeaderTile\";\n\nvar CountryHomeScreen = function CountryHomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      countries = _useContext.countries;\n\n  var _useState = useState(countries),\n      _useState2 = _slicedToArray(_useState, 2),\n      country = _useState2[0],\n      setCountry = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loader = _useState4[0],\n      setLoader = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      countryName = _useState8[0],\n      setCountryName = _useState8[1];\n\n  var _useState9 = useState(10),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pageSize = _useState10[0],\n      setPageSize = _useState10[1];\n\n  var showLoader = function showLoader() {\n    setTimeout(function () {\n      setLoader(false);\n    }, 1000);\n  };\n\n  useEffect(function () {\n    var source = axios.CancelToken.source();\n    showLoader();\n    return function () {\n      return source.cancel();\n    };\n  }, []);\n\n  var search = function search() {\n    var d = country.filter(function (c) {\n      return c.countryName.trim().toUpperCase().includes(countryName.trim().toUpperCase());\n    });\n    return d;\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(HeaderTile, {\n    name: \"Countries\",\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingHorizontal: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    onChangeText: function onChangeText(value) {\n      return setCountryName(value);\n    },\n    placeholder: \"Search Country....\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), loader ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    style: {\n      alignSelf: \"center\",\n      justifyContent: \"center\",\n      height: HEIGHT * 0.6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }) : React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.countryGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, search().map(function (item, index) {\n    if (index < pageSize) return React.createElement(CCTile, {\n      index: index,\n      navigation: navigation,\n      item: item,\n      navName: \"CountryInner\",\n      name: item.countryName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    });\n  }), pageSize < 45 && countryName === \"\" && React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setPageSize(pageSize + 10);\n    },\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      paddingVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      backgroundColor: \"#E28633\",\n      padding: 10,\n      borderRadius: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, \"Load More ...\"))))));\n};\n\nexport default CountryHomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  countryGrid: {\n    flexDirection: \"row\",\n    width: WIDTH,\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 30,\n    paddingBottom: 150\n  }\n});","map":{"version":3,"sources":["D:/Project/TourOn/Touron-Mobileapp-1/src/Screens/CountryScreens/CountryHomeScreen.js"],"names":["React","useEffect","useState","useContext","AuthContext","axios","WIDTH","Dimensions","get","width","HEIGHT","height","SearchBar","FontAwesome","CCTile","HeaderTile","CountryHomeScreen","navigation","countries","country","setCountry","loader","setLoader","error","setErrorMessage","countryName","setCountryName","pageSize","setPageSize","showLoader","setTimeout","source","CancelToken","cancel","search","d","filter","c","trim","toUpperCase","includes","styles","container","paddingHorizontal","value","alignSelf","justifyContent","countryGrid","map","item","index","alignItems","paddingVertical","color","backgroundColor","padding","borderRadius","StyleSheet","create","flex","flexDirection","flexWrap","marginBottom","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Dimensions,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\nimport SearchBar from \"../../Reusable Components/SearchBar\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport CCTile from \"./CCTile\";\r\nimport HeaderTile from \"./../../Reusable Components/HeaderTile\";\r\nconst CountryHomeScreen = ({ navigation }) => {\r\n  const { countries } = useContext(AuthContext);\r\n  const [country, setCountry] = useState(countries);\r\n  const [loader, setLoader] = useState(true);\r\n  const [error, setErrorMessage] = useState(\"\");\r\n  const [countryName, setCountryName] = useState(\"\");\r\n  const [pageSize, setPageSize] = useState(10);\r\n\r\n  const showLoader = () => {\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n    }, 1000);\r\n  };\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    showLoader();\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  const search = () => {\r\n    const d = country.filter((c) => {\r\n      return c.countryName\r\n        .trim()\r\n        .toUpperCase()\r\n        .includes(countryName.trim().toUpperCase());\r\n    });\r\n    return d;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <HeaderTile name={\"Countries\"} navigation={navigation} />\r\n\r\n        <View style={{ paddingHorizontal: 10 }}>\r\n          <SearchBar\r\n            onChangeText={(value) => setCountryName(value)}\r\n            placeholder={\"Search Country....\"}\r\n          />\r\n        </View>\r\n        {loader ? (\r\n          <ActivityIndicator\r\n            size=\"large\"\r\n            style={{\r\n              alignSelf: \"center\",\r\n              justifyContent: \"center\",\r\n              height: HEIGHT * 0.6,\r\n            }}\r\n          />\r\n        ) : (\r\n          <ScrollView>\r\n            <View style={styles.countryGrid}>\r\n              {search().map((item, index) => {\r\n                if (index < pageSize)\r\n                  return (\r\n                    <CCTile\r\n                      index={index}\r\n                      navigation={navigation}\r\n                      item={item}\r\n                      navName={\"CountryInner\"}\r\n                      name={item.countryName}\r\n                    />\r\n                  );\r\n              })}\r\n\r\n              {pageSize < 45 && countryName === \"\" && (\r\n                <TouchableOpacity\r\n                  onPress={() => setPageSize(pageSize + 10)}\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    paddingVertical: 20,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: \"#fff\",\r\n                      backgroundColor: \"#E28633\",\r\n                      padding: 10,\r\n                      borderRadius: 10,\r\n                    }}\r\n                  >\r\n                    Load More ...\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </ScrollView>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CountryHomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n\r\n  countryGrid: {\r\n    flexDirection: \"row\",\r\n    width: WIDTH,\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 30,\r\n    paddingBottom: 150,\r\n    // marginHorizontal: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}