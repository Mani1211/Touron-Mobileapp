{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Project\\\\TourOn\\\\Touron-Mobileapp-1\\\\src\\\\Screens\\\\StoryScreens\\\\StoryView.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useRoute, useIsFocused, useNavigation } from \"@react-navigation/native\";\nimport StoryViewTile from \"./StoryViewTile\";\n\nvar StoryView = function StoryView() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var story = route.params.story;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      fleetIndex = _useState2[0],\n      setFleetIndex = _useState2[1];\n\n  var _useState3 = useState((story == null ? void 0 : story.stories[fleetIndex]) || null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fleet = _useState4[0],\n      setFleet = _useState4[1];\n\n  console.log(\"flbjhveet\", fleet);\n  var isFocused = useIsFocused();\n  useEffect(function () {\n    var _story$stories, _story$stories2;\n\n    if (!story) {\n      return;\n    }\n\n    if (fleetIndex < (story == null ? void 0 : (_story$stories = story.stories) == null ? void 0 : _story$stories.length)) {\n      setFleet(story == null ? void 0 : story.stories[0]);\n    } else if (fleetIndex === (story == null ? void 0 : (_story$stories2 = story.stories) == null ? void 0 : _story$stories2.length)) {\n      navigation.navigate(\"StorySection\");\n    }\n  }, [isFocused, fleetIndex]);\n\n  var _goToNextFleet = function goToNextFleet() {\n    setFleetIndex(fleetIndex + 1);\n  };\n\n  var _goToPrevFleet = function goToPrevFleet() {\n    if (fleetIndex > 0) {\n      setFleetIndex(fleetIndex - 1);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, fleet === null ? React.createElement(ActivityIndicator, {\n    size: 30,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }) : React.createElement(StoryViewTile, {\n    fleetIndex: fleetIndex,\n    fleet: fleet,\n    user: story,\n    goToPrevFleet: function goToPrevFleet() {\n      return _goToPrevFleet();\n    },\n    goToNextFleet: function goToNextFleet() {\n      return _goToNextFleet();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default StoryView;","map":{"version":3,"sources":["D:/Project/TourOn/Touron-Mobileapp-1/src/Screens/StoryScreens/StoryView.js"],"names":["React","useState","useEffect","useContext","useRoute","useIsFocused","useNavigation","StoryViewTile","StoryView","navigation","route","story","params","fleetIndex","setFleetIndex","stories","fleet","setFleet","console","log","isFocused","length","navigate","goToNextFleet","goToPrevFleet"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;AAEA,SACEC,QADF,EAEEC,YAFF,EAGEC,aAHF,QAIO,0BAJP;AAKA,OAAOC,aAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,UAAU,GAAGH,aAAa,EAAhC;AACA,MAAMI,KAAK,GAAGN,QAAQ,EAAtB;AACA,MAAQO,KAAR,GAAkBD,KAAK,CAACE,MAAxB,CAAQD,KAAR;;AACA,kBAAoCV,QAAQ,CAAC,CAAD,CAA5C;AAAA;AAAA,MAAOY,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA0Bb,QAAQ,CAAC,CAAAU,KAAK,QAAL,YAAAA,KAAK,CAAEI,OAAP,CAAeF,UAAf,MAA8B,IAA/B,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AACAC,EAAAA,OAAO,CAACC,GAAR,cAAyBH,KAAzB;AACA,MAAMI,SAAS,GAAGf,YAAY,EAA9B;AAEAH,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd,QAAI,CAACS,KAAL,EAAY;AACV;AACD;;AACD,QAAIE,UAAU,IAAGF,KAAH,sCAAGA,KAAK,CAAEI,OAAV,qBAAG,eAAgBM,MAAnB,CAAd,EAAyC;AACvCJ,MAAAA,QAAQ,CAACN,KAAD,oBAACA,KAAK,CAAEI,OAAP,CAAe,CAAf,CAAD,CAAR;AACD,KAFD,MAEO,IAAIF,UAAU,MAAKF,KAAL,uCAAKA,KAAK,CAAEI,OAAZ,qBAAK,gBAAgBM,MAArB,CAAd,EAA2C;AAChDZ,MAAAA,UAAU,CAACa,QAAX,CAAoB,cAApB;AACD;AACF,GATQ,EASN,CAACF,SAAD,EAAYP,UAAZ,CATM,CAAT;;AAWA,MAAMU,cAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BT,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACD,GAFD;;AAIA,MAAMW,cAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIX,UAAU,GAAG,CAAjB,EAAoB;AAClBC,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACD;AACF,GAJD;;AAMA,SACE,0CACGG,KAAK,KAAK,IAAV,GACC,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAE,EAAzB;AAA6B,IAAA,KAAK,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,aAAD;AACE,IAAA,UAAU,EAAEH,UADd;AAEE,IAAA,KAAK,EAAEG,KAFT;AAGE,IAAA,IAAI,EAAEL,KAHR;AAIE,IAAA,aAAa,EAAE;AAAA,aAAMa,cAAa,EAAnB;AAAA,KAJjB;AAKE,IAAA,aAAa,EAAE;AAAA,aAAMD,cAAa,EAAnB;AAAA,KALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAeD,CA7CD;;AA+CA,eAAef,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ActivityIndicator } from \"react-native\";\r\nimport {\r\n  useRoute,\r\n  useIsFocused,\r\n  useNavigation,\r\n} from \"@react-navigation/native\";\r\nimport StoryViewTile from \"./StoryViewTile\";\r\n\r\nconst StoryView = () => {\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const { story } = route.params;\r\n  const [fleetIndex, setFleetIndex] = useState(0);\r\n  const [fleet, setFleet] = useState(story?.stories[fleetIndex] || null);\r\n  console.log(`flbjhveet`, fleet);\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {\r\n    if (!story) {\r\n      return;\r\n    }\r\n    if (fleetIndex < story?.stories?.length) {\r\n      setFleet(story?.stories[0]);\r\n    } else if (fleetIndex === story?.stories?.length) {\r\n      navigation.navigate(\"StorySection\");\r\n    }\r\n  }, [isFocused, fleetIndex]);\r\n\r\n  const goToNextFleet = () => {\r\n    setFleetIndex(fleetIndex + 1);\r\n  };\r\n\r\n  const goToPrevFleet = () => {\r\n    if (fleetIndex > 0) {\r\n      setFleetIndex(fleetIndex - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {fleet === null ? (\r\n        <ActivityIndicator size={30} color=\"black\" />\r\n      ) : (\r\n        <StoryViewTile\r\n          fleetIndex={fleetIndex}\r\n          fleet={fleet}\r\n          user={story}\r\n          goToPrevFleet={() => goToPrevFleet()}\r\n          goToNextFleet={() => goToNextFleet()}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StoryView;\r\n"]},"metadata":{},"sourceType":"module"}