{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Project\\\\TourOn\\\\Touron-Mobileapp-1\\\\src\\\\Screens\\\\AccountScreens\\\\MyPlansScreen.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AuthContext } from \"../../context/AuthContext\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { database } from \"firebase\";\nimport { Feather } from \"@expo/vector-icons\";\n\nvar MyPlansScreen = function MyPlansScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      userInfo = _useContext.userInfo;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selfPlans = _useState2[0],\n      setSelfPlans = _useState2[1];\n\n  var isFocused = useIsFocused();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loaded = _useState4[0],\n      setLoaded = _useState4[1];\n\n  var getUserPlans = function getUserPlans() {\n    setLoaded(true);\n    database().ref(\"self-planned-tours\").on(\"value\", function (data) {\n      var plans = [];\n      data.forEach(function (c) {\n        if (c.val().userId === userInfo.userID) {\n          plans.push(c.val());\n        }\n      });\n      setSelfPlans(plans);\n    });\n    setLoaded(false);\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      getUserPlans();\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, [isFocused]);\n  return React.createElement(View, {\n    animation: \"bounceIn\",\n    duration: 3000,\n    style: {\n      flex: 1,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"#28C9E1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: \"#fff\",\n      alignItems: \"center\",\n      paddingTop: Platform.OS === \"ios\" ? 80 : 40,\n      paddingBottom: Platform.OS === \"ios\" ? 20 : 20,\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.toggleDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, React.createElement(Feather, {\n    name: \"arrow-left\",\n    size: 28,\n    color: \"black\",\n    style: {\n      paddingHorizontal: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 25,\n      fontFamily: \"NewYorkl\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"My Plans\"))), React.createElement(React.Fragment, null, loaded ? React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })) : React.createElement(React.Fragment, null, selfPlans.length == 0 ? React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: HEIGHT / 2,\n      width: WIDTH * 0.7,\n      marginTop: WIDTH / 10,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    source: {\n      uri: \"https://firebasestorage.googleapis.com/v0/b/touronapp-248e4.appspot.com/o/Touron%20app%2Fstats%20and%20Default%2Fmyplans.png?alt=media&token=cb00ebb1-1511-4994-ac33-cc1f36e6a399\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontFamily: \"Avenir\",\n      fontSize: 20,\n      marginTop: WIDTH / 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"No Tour Plans Yet\"), React.createElement(Text, {\n    style: {\n      fontFamily: \"Andika\",\n      fontSize: 20,\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Go to Home and start planning\")) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, React.createElement(FlatList, {\n    data: selfPlans,\n    keyExtractor: function keyExtractor(item) {\n      return item.requestID;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"MyPlanInner\", {\n            item: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 23\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          marginTop: 20,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          borderBottomColor: \"#fff\",\n          borderTopColor: \"#fff\",\n          borderBottomWidth: 4,\n          paddingVertical: 10,\n          backgroundColor: \"#f1f2f1\",\n          marginHorizontal: 25,\n          paddingHorizontal: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: \"center\",\n          paddingHorizontal: 20,\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 27\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 14,\n          paddingBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }\n      }, \"Request ID: \", item.requestID), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }\n      }, item.selectedCities.map(function (c, index) {\n        if (index === item.selectedCities.length - 1) {\n          return React.createElement(Text, {\n            style: {\n              fontSize: 18,\n              fontFamily: \"NewYorkl\"\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 37\n            }\n          }, c.cityName);\n        }\n\n        return React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            fontFamily: \"NewYorkl\"\n          },\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 35\n          }\n        }, c.cityName, \",\", \"  \");\n      })))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default MyPlansScreen;","map":{"version":3,"sources":["D:/Project/TourOn/Touron-Mobileapp-1/src/Screens/AccountScreens/MyPlansScreen.js"],"names":["React","useEffect","useState","useContext","AuthContext","WIDTH","Dimensions","get","width","HEIGHT","height","useIsFocused","database","Feather","MyPlansScreen","navigation","userInfo","selfPlans","setSelfPlans","isFocused","loaded","setLoaded","getUserPlans","ref","on","data","plans","forEach","c","val","userId","userID","push","mounted","flex","backgroundColor","alignItems","paddingTop","Platform","OS","paddingBottom","flexDirection","toggleDrawer","paddingHorizontal","justifyContent","fontSize","fontFamily","length","marginTop","uri","textAlign","item","requestID","navigate","borderBottomColor","borderTopColor","borderBottomWidth","paddingVertical","marginHorizontal","selectedCities","map","index","cityName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Text,\r\n  Image,\r\n  View,\r\n  Dimensions,\r\n  StatusBar,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  ActivityIndicator,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { database } from \"firebase\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nconst MyPlansScreen = ({ navigation }) => {\r\n  const { userInfo } = useContext(AuthContext);\r\n  const [selfPlans, setSelfPlans] = useState([]);\r\n  const isFocused = useIsFocused();\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const getUserPlans = () => {\r\n    setLoaded(true);\r\n    database()\r\n      .ref(`self-planned-tours`)\r\n      .on(\"value\", (data) => {\r\n        let plans = [];\r\n        data.forEach((c) => {\r\n          if (c.val().userId === userInfo.userID) {\r\n            plans.push(c.val());\r\n          }\r\n        });\r\n        setSelfPlans(plans);\r\n      });\r\n    setLoaded(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted) {\r\n      getUserPlans();\r\n    }\r\n    return () => (mounted = false);\r\n  }, [isFocused]);\r\n  return (\r\n    <View\r\n      animation=\"bounceIn\"\r\n      duration={3000}\r\n      style={{ flex: 1, backgroundColor: \"white\" }}\r\n    >\r\n      <StatusBar backgroundColor=\"#28C9E1\" />\r\n\r\n      <View\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          alignItems: \"center\",\r\n          paddingTop: Platform.OS === \"ios\" ? 80 : 40,\r\n          paddingBottom: Platform.OS === \"ios\" ? 20 : 20,\r\n\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <TouchableOpacity onPress={() => navigation.toggleDrawer()}>\r\n          <View>\r\n            <Feather\r\n              name=\"arrow-left\"\r\n              size={28}\r\n              color=\"black\"\r\n              style={{\r\n                paddingHorizontal: 20,\r\n                // paddingTop: Platform.OS === \"ios\" ? 25 : 0,\r\n              }}\r\n            />\r\n          </View>\r\n        </TouchableOpacity>\r\n        <View\r\n          style={{\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Text style={{ fontSize: 25, fontFamily: \"NewYorkl\" }}>My Plans</Text>\r\n        </View>\r\n      </View>\r\n      <>\r\n        {loaded ? (\r\n          <View\r\n            style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}\r\n          >\r\n            <ActivityIndicator size=\"large\" color=\"black\" />\r\n          </View>\r\n        ) : (\r\n          <>\r\n            {selfPlans.length == 0 ? (\r\n              <View\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Image\r\n                  style={{\r\n                    height: HEIGHT / 2,\r\n                    width: WIDTH * 0.7,\r\n                    marginTop: WIDTH / 10,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  source={{\r\n                    uri: \"https://firebasestorage.googleapis.com/v0/b/touronapp-248e4.appspot.com/o/Touron%20app%2Fstats%20and%20Default%2Fmyplans.png?alt=media&token=cb00ebb1-1511-4994-ac33-cc1f36e6a399\",\r\n                  }}\r\n                />\r\n                <Text\r\n                  style={{\r\n                    fontFamily: \"Avenir\",\r\n                    fontSize: 20,\r\n                    marginTop: WIDTH / 10,\r\n                  }}\r\n                >\r\n                  No Tour Plans Yet\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontFamily: \"Andika\",\r\n                    fontSize: 20,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Go to Home and start planning\r\n                </Text>\r\n              </View>\r\n            ) : (\r\n              <View>\r\n                <FlatList\r\n                  data={selfPlans}\r\n                  keyExtractor={(item) => item.requestID}\r\n                  renderItem={({ item }) => {\r\n                    return (\r\n                      <TouchableOpacity\r\n                        onPress={() =>\r\n                          navigation.navigate(\"MyPlanInner\", { item: item })\r\n                        }\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            flexDirection: \"row\",\r\n                            marginTop: 20,\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            borderBottomColor: \"#fff\",\r\n                            borderTopColor: \"#fff\",\r\n                            borderBottomWidth: 4,\r\n                            paddingVertical: 10,\r\n                            backgroundColor: \"#f1f2f1\",\r\n                            marginHorizontal: 25,\r\n                            paddingHorizontal: 10,\r\n                          }}\r\n                        >\r\n                          <View\r\n                            style={{\r\n                              justifyContent: \"center\",\r\n                              paddingHorizontal: 20,\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            <Text style={{ fontSize: 14, paddingBottom: 20 }}>\r\n                              Request ID: {item.requestID}\r\n                            </Text>\r\n                            <View style={{ flexDirection: \"row\" }}>\r\n                              {item.selectedCities.map((c, index) => {\r\n                                if (index === item.selectedCities.length - 1) {\r\n                                  return (\r\n                                    <Text\r\n                                      style={{\r\n                                        fontSize: 18,\r\n                                        fontFamily: \"NewYorkl\",\r\n                                      }}\r\n                                      key={index}\r\n                                    >\r\n                                      {c.cityName}\r\n                                    </Text>\r\n                                  );\r\n                                }\r\n                                return (\r\n                                  <Text\r\n                                    style={{\r\n                                      fontSize: 18,\r\n                                      fontFamily: \"NewYorkl\",\r\n                                    }}\r\n                                    key={index}\r\n                                  >\r\n                                    {c.cityName},{\"  \"}\r\n                                  </Text>\r\n                                );\r\n                              })}\r\n                            </View>\r\n                          </View>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                    );\r\n                  }}\r\n                />\r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MyPlansScreen;\r\n"]},"metadata":{},"sourceType":"module"}