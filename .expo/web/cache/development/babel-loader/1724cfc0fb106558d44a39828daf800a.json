{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Project\\\\TourOn\\\\Touron-Mobileapp-1\\\\src\\\\Screens\\\\StoriesScreens\\\\StorySection.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport { database } from \"firebase\";\nimport HeaderTile from \"./../../Reusable Components/HeaderTile\";\n\nvar StorySection = function StorySection(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      countries = _useContext.countries;\n\n  var _useState = useState(countries),\n      _useState2 = _slicedToArray(_useState, 2),\n      country = _useState2[0],\n      setCountry = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loader = _useState4[0],\n      setLoader = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      countryName = _useState8[0],\n      setCountryName = _useState8[1];\n\n  var _useState9 = useState(10),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pageSize = _useState10[0],\n      setPageSize = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fleetData = _useState12[0],\n      setFleetData = _useState12[1];\n\n  console.log(\"fleetData\", fleetData);\n\n  var getStoriesData = function getStoriesData() {\n    setLoader(true);\n    var v = [];\n    database().ref(\"stories\").on(\"value\", function (data) {\n      data.forEach(function (d) {\n        v.push(d.val());\n      });\n    });\n    console.log(\"v\", v);\n    setFleetData(v);\n    setLoader(false);\n  };\n\n  useEffect(function () {\n    getStoriesData();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(HeaderTile, {\n    name: \"Stories\",\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), loader ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    style: {\n      alignSelf: \"center\",\n      justifyContent: \"center\",\n      height: HEIGHT * 0.6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }) : React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.countryGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, fleetData.map(function (item, index) {\n    if (index < pageSize) return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"StoryView\", {\n          story: item\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: styles.imageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.imageContainer1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 27\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"image-filter-none\",\n      size: 24,\n      style: {\n        alignSelf: \"flex-end\",\n        padding: 10,\n        zIndex: 10\n      },\n      color: \"#fff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    })), React.createElement(Text, {\n      style: styles.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 27\n      }\n    }, item.categoryTitle), React.createElement(Image, {\n      style: styles.image,\n      source: {\n        uri: item.stories[0].imageUrl\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 27\n      }\n    }))));\n  })))));\n};\n\nexport default StorySection;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  countryGrid: {\n    flexDirection: \"row\",\n    width: WIDTH,\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 30,\n    paddingBottom: 50,\n    paddingTop: 30\n  },\n  image: {\n    height: HEIGHT / 3.25,\n    width: WIDTH / 2.25,\n    justifyContent: \"space-around\",\n    borderRadius: 18,\n    flexDirection: \"row\"\n  },\n  imageContainer: {\n    padding: 5,\n    position: \"relative\"\n  },\n  imageContainer1: {\n    position: \"absolute\",\n    backgroundColor: \"#0003\",\n    height: HEIGHT / 3.25,\n    width: WIDTH / 2.25,\n    borderRadius: 18,\n    zIndex: 2\n  },\n  name: {\n    position: \"absolute\",\n    fontSize: 20,\n    color: \"#fff\",\n    zIndex: 10,\n    fontFamily: \"Andika\",\n    bottom: 10,\n    left: 20\n  }\n});","map":{"version":3,"sources":["D:/Project/TourOn/Touron-Mobileapp-1/src/Screens/StoriesScreens/StorySection.js"],"names":["React","useEffect","useState","useContext","AuthContext","MaterialCommunityIcons","WIDTH","Dimensions","get","width","HEIGHT","height","database","HeaderTile","StorySection","navigation","countries","country","setCountry","loader","setLoader","error","setErrorMessage","countryName","setCountryName","pageSize","setPageSize","fleetData","setFleetData","console","log","getStoriesData","v","ref","on","data","forEach","d","push","val","styles","container","alignSelf","justifyContent","countryGrid","map","item","index","navigate","story","imageContainer","imageContainer1","padding","zIndex","name","categoryTitle","image","uri","stories","imageUrl","StyleSheet","create","flex","backgroundColor","flexDirection","flexWrap","alignItems","marginBottom","paddingBottom","paddingTop","borderRadius","position","fontSize","color","fontFamily","bottom","left"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Dimensions,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\nimport { database } from \"firebase\";\r\nimport HeaderTile from \"./../../Reusable Components/HeaderTile\";\r\nconst StorySection = ({ navigation }) => {\r\n  const { countries } = useContext(AuthContext);\r\n  const [country, setCountry] = useState(countries);\r\n  const [loader, setLoader] = useState(true);\r\n  const [error, setErrorMessage] = useState(\"\");\r\n  const [countryName, setCountryName] = useState(\"\");\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [fleetData, setFleetData] = useState([]);\r\n  console.log(`fleetData`, fleetData);\r\n\r\n  const getStoriesData = () => {\r\n    setLoader(true);\r\n    let v = [];\r\n    database()\r\n      .ref(\"stories\")\r\n      .on(\"value\", (data) => {\r\n        data.forEach((d) => {\r\n          v.push(d.val());\r\n        });\r\n      });\r\n    console.log(`v`, v);\r\n    setFleetData(v);\r\n    setLoader(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStoriesData();\r\n  }, []);\r\n\r\n  // const search = () => {\r\n  //   const d = country.filter((c) => {\r\n  //     return c.countryName\r\n  //       .trim()\r\n  //       .toUpperCase()\r\n  //       .includes(countryName.trim().toUpperCase());\r\n  //   });\r\n  //   return d;\r\n  // };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <HeaderTile name={\"Stories\"} navigation={navigation} />\r\n\r\n        {/* <View style={{ paddingHorizontal: 10 }}>\r\n          <SearchBar\r\n            onChangeText={(value) => setCountryName(value)}\r\n            placeholder={\"Search Country....\"}\r\n          />\r\n        </View> */}\r\n        {loader ? (\r\n          <ActivityIndicator\r\n            size=\"large\"\r\n            style={{\r\n              alignSelf: \"center\",\r\n              justifyContent: \"center\",\r\n              height: HEIGHT * 0.6,\r\n            }}\r\n          />\r\n        ) : (\r\n          <ScrollView>\r\n            <View style={styles.countryGrid}>\r\n              {fleetData.map((item, index) => {\r\n                if (index < pageSize)\r\n                  return (\r\n                    <TouchableOpacity\r\n                      onPress={() =>\r\n                        navigation.navigate(\"StoryView\", { story: item })\r\n                      }\r\n                    >\r\n                      <View style={styles.imageContainer}>\r\n                        <View>\r\n                          <View style={styles.imageContainer1}>\r\n                            <MaterialCommunityIcons\r\n                              name=\"image-filter-none\"\r\n                              size={24}\r\n                              style={{\r\n                                alignSelf: \"flex-end\",\r\n                                padding: 10,\r\n                                zIndex: 10,\r\n                              }}\r\n                              color=\"#fff\"\r\n                            />\r\n                          </View>\r\n                          <Text style={styles.name}>{item.categoryTitle}</Text>\r\n                          <Image\r\n                            style={styles.image}\r\n                            source={{ uri: item.stories[0].imageUrl }}\r\n                          />\r\n                        </View>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                  );\r\n              })}\r\n            </View>\r\n          </ScrollView>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default StorySection;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n\r\n  countryGrid: {\r\n    flexDirection: \"row\",\r\n    width: WIDTH,\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 30,\r\n    paddingBottom: 50,\r\n    paddingTop: 30,\r\n    // marginHorizontal: 10,\r\n  },\r\n  image: {\r\n    height: HEIGHT / 3.25,\r\n    width: WIDTH / 2.25,\r\n    justifyContent: \"space-around\",\r\n    borderRadius: 18,\r\n    flexDirection: \"row\",\r\n  },\r\n  imageContainer: {\r\n    padding: 5,\r\n    position: \"relative\",\r\n  },\r\n  imageContainer1: {\r\n    position: \"absolute\",\r\n    backgroundColor: \"#0003\",\r\n    height: HEIGHT / 3.25,\r\n    width: WIDTH / 2.25,\r\n    borderRadius: 18,\r\n    zIndex: 2,\r\n  },\r\n  name: {\r\n    position: \"absolute\",\r\n    fontSize: 20,\r\n    color: \"#fff\",\r\n    zIndex: 10,\r\n    fontFamily: \"Andika\",\r\n    bottom: 10,\r\n    left: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}