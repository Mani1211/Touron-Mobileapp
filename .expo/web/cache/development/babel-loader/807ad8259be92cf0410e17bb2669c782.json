{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Tour On\\\\Touron-Mobileapp\\\\src\\\\Screens\\\\CityScreens\\\\CityHomeScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../../context/AuthContext\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport touron from \"../../api/touron\";\nimport ProgressiveImage from \"./../../Reusable Components/ProgressiveImage\";\nimport axios from \"axios\";\n\nvar CityHomeScreen = function CityHomeScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      cities = _useContext.cities;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      city = _useState2[0],\n      setCity = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loader = _useState6[0],\n      setLoader = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cityName = _useState8[0],\n      setCityName = _useState8[1];\n\n  var showLoader = function showLoader() {\n    setTimeout(function () {\n      setLoader(false);\n    }, 500);\n  };\n\n  var getCity = function getCity() {\n    var countryname, cityResponse;\n    return _regeneratorRuntime.async(function getCity$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(route.params.name, \"kk\");\n\n            if (!route.params.name) {\n              _context.next = 16;\n              break;\n            }\n\n            countryname = route.params.name;\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(touron.get(\"/city/countryname/\" + countryname));\n\n          case 6:\n            cityResponse = _context.sent;\n            console.log(cityResponse.data, \"dataata\");\n            setCity(cityResponse.data);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](3);\n            setErrorMessage(\"Something went wrong\");\n\n          case 14:\n            _context.next = 17;\n            break;\n\n          case 16:\n            setCity(cities);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 11]], Promise);\n  };\n\n  useEffect(function () {\n    var source = axios.CancelToken.source();\n    getCity(), showLoader();\n    return function () {\n      return source.cancel();\n    };\n  }, []);\n\n  var search = function search() {\n    var d = city.filter(function (c) {\n      return c.cityName.trim().toUpperCase().includes(cityName.trim().toUpperCase());\n    });\n    return d;\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, loader ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, React.createElement(Feather, {\n    name: \"search\",\n    style: styles.iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Ex. Paris,Sharjah\",\n    onChangeText: function onChangeText(value) {\n      return setCityName(value);\n    },\n    onSubmitEditing: search,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.countryGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, search().map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      key: item._id,\n      onPress: function onPress() {\n        navigation.navigate(\"CityInner\", {\n          item: item\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styles.imageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, item.cityName), React.createElement(ProgressiveImage, {\n      style: styles.image,\n      source: {\n        uri: item.imageUrl\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }))));\n  }))));\n};\n\nexport default CityHomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 70\n  },\n  imageContainer: {\n    padding: 5,\n    position: \"relative\"\n  },\n  image: {\n    height: HEIGHT / 3.25,\n    width: WIDTH / 2.25,\n    justifyContent: \"space-around\",\n    borderRadius: 18,\n    flexDirection: \"row\"\n  },\n  name: {\n    position: \"absolute\",\n    fontSize: 20,\n    color: \"#fff\",\n    fontFamily: \"Andika\",\n    zIndex: 1,\n    top: 10,\n    left: 20\n  },\n  background: {\n    backgroundColor: \"#fff\",\n    height: HEIGHT / 15,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    width: WIDTH * 0.9,\n    marginVertical: 20,\n    marginHorizontal: 20\n  },\n  inputStyle: {\n    fontSize: 18\n  },\n  iconStyle: {\n    fontSize: 30,\n    alignSelf: \"center\",\n    marginHorizontal: 15\n  },\n  countryGrid: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginBottom: 30,\n    marginHorizontal: 10\n  }\n});","map":{"version":3,"sources":["D:/Tour On/Touron-Mobileapp/src/Screens/CityScreens/CityHomeScreen.js"],"names":["React","useState","useEffect","useContext","Feather","AuthContext","WIDTH","Dimensions","get","width","HEIGHT","height","touron","ProgressiveImage","axios","CityHomeScreen","navigation","route","cities","city","setCity","error","setErrorMessage","loader","setLoader","cityName","setCityName","showLoader","setTimeout","getCity","console","log","params","name","countryname","cityResponse","data","source","CancelToken","cancel","search","d","filter","c","trim","toUpperCase","includes","styles","container","background","iconStyle","inputStyle","value","countryGrid","map","item","_id","navigate","imageContainer","image","uri","imageUrl","StyleSheet","create","flex","paddingTop","padding","position","justifyContent","borderRadius","flexDirection","fontSize","color","fontFamily","zIndex","top","left","backgroundColor","marginVertical","marginHorizontal","alignSelf","flexWrap","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  TextInput,\r\n  ActivityIndicator,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\nimport touron from \"../../api/touron\";\r\nimport ProgressiveImage from \"./../../Reusable Components/ProgressiveImage\";\r\nimport axios from \"axios\";\r\n\r\nconst CityHomeScreen = ({ navigation, route }) => {\r\n  const { cities } = useContext(AuthContext);\r\n  const [city, setCity] = useState([]);\r\n  const [error, setErrorMessage] = useState(\"\");\r\n  const [loader, setLoader] = useState();\r\n  const [cityName, setCityName] = useState(\"\");\r\n\r\n  const showLoader = () => {\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n    }, 500);\r\n  };\r\n\r\n  const getCity = async () => {\r\n    console.log(route.params.name, \"kk\");\r\n    if (route.params.name) {\r\n      const countryname = route.params.name;\r\n      try {\r\n        const cityResponse = await touron.get(\r\n          `/city/countryname/${countryname}`\r\n        );\r\n        console.log(cityResponse.data, \"dataata\");\r\n\r\n        setCity(cityResponse.data);\r\n      } catch (err) {\r\n        setErrorMessage(\"Something went wrong\");\r\n      }\r\n    } else {\r\n      // console.log(\"executed\");\r\n      setCity(cities);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    getCity(), showLoader();\r\n\r\n    return () => source.cancel();\r\n  }, []);\r\n\r\n  const search = () => {\r\n    const d = city.filter((c) => {\r\n      return c.cityName\r\n        .trim()\r\n        .toUpperCase()\r\n        .includes(cityName.trim().toUpperCase());\r\n    });\r\n    return d;\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {loader ? (\r\n        <ActivityIndicator size=\"large\" />\r\n      ) : (\r\n        <View>\r\n          <View style={styles.background}>\r\n            <Feather name=\"search\" style={styles.iconStyle}></Feather>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              placeholder=\"Ex. Paris,Sharjah\"\r\n              onChangeText={(value) => setCityName(value)}\r\n              onSubmitEditing={search}\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n              keyboardType=\"email-address\"\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.countryGrid}>\r\n            {search().map((item) => (\r\n              <TouchableOpacity\r\n                key={item._id}\r\n                onPress={() => {\r\n                  navigation.navigate(\"CityInner\", { item: item });\r\n                }}\r\n              >\r\n                <View style={styles.imageContainer}>\r\n                  <View>\r\n                    <Text style={styles.name}>{item.cityName}</Text>\r\n                    <ProgressiveImage\r\n                      style={styles.image}\r\n                      source={{ uri: item.imageUrl }}\r\n                    />\r\n                  </View>\r\n                </View>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        </View>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default CityHomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n\r\n    paddingTop: 70,\r\n  },\r\n  imageContainer: {\r\n    padding: 5,\r\n    position: \"relative\",\r\n  },\r\n  image: {\r\n    height: HEIGHT / 3.25,\r\n    width: WIDTH / 2.25,\r\n    justifyContent: \"space-around\",\r\n    borderRadius: 18,\r\n    flexDirection: \"row\",\r\n  },\r\n  name: {\r\n    position: \"absolute\",\r\n    fontSize: 20,\r\n    color: \"#fff\",\r\n    fontFamily: \"Andika\",\r\n    zIndex: 1,\r\n    top: 10,\r\n    left: 20,\r\n  },\r\n  background: {\r\n    backgroundColor: \"#fff\",\r\n    height: HEIGHT / 15,\r\n    borderRadius: 20,\r\n    flexDirection: \"row\",\r\n    width: WIDTH * 0.9,\r\n    marginVertical: 20,\r\n    marginHorizontal: 20,\r\n  },\r\n  inputStyle: {\r\n    fontSize: 18,\r\n  },\r\n  iconStyle: {\r\n    fontSize: 30,\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 15,\r\n  },\r\n  countryGrid: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    // justifyContent: \"center\",\r\n    marginBottom: 30,\r\n    marginHorizontal: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}