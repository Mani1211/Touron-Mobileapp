{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { database, auth } from \"firebase\";\nimport touron from \"../api/touron\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar Data = function Data() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoggedIn = _useState4[0],\n      setIsLoggedIn = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tours = _useState6[0],\n      setTour = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      countries = _useState8[0],\n      setCountries = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cities = _useState10[0],\n      setCities = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      userInfo = _useState12[0],\n      setUserInfo = _useState12[1];\n\n  useEffect(function () {\n    auth().onAuthStateChanged(function (user) {\n      setUser(user);\n    });\n  }, []);\n  useEffect(function () {\n    var source = axios.CancelToken.source();\n\n    var getCities = function getCities() {\n      var cityResponse;\n      return _regeneratorRuntime.async(function getCities$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(touron.get(\"/city/search\"));\n\n            case 2:\n              cityResponse = _context.sent;\n              setCities(cityResponse.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getCities();\n    return function () {\n      source.cancel();\n    };\n    console.log(\"object\", source);\n  }, []);\n  useEffect(function () {\n    var source = axios.CancelToken.source();\n\n    var getTours = function getTours() {\n      var tourResponse;\n      return _regeneratorRuntime.async(function getTours$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(touron.get(\"/tour?page=1&pageSize=90\"));\n\n            case 2:\n              tourResponse = _context2.sent;\n              setTour(tourResponse.data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getTours();\n    return function () {\n      source.cancel();\n    };\n  }, []);\n  useEffect(function () {\n    var source = axios.CancelToken.source();\n\n    var getCountries = function getCountries() {\n      var countryResponse;\n      return _regeneratorRuntime.async(function getCountries$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(touron.get(\"/country\"));\n\n            case 2:\n              countryResponse = _context3.sent;\n              setCountries(countryResponse.data);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getCountries();\n    return function () {\n      source.cancel();\n    };\n  }, []);\n\n  var getUserData = function getUserData(uid) {\n    database().ref(\"userGeneralInfo/\" + uid).on(\"value\", function (data) {\n      if (data === null) {\n        setUserInfo({});\n      } else {\n        var val = data.val();\n        setUserInfo(val);\n      }\n    });\n  };\n\n  useEffect(function () {\n    var mounted = true;\n    console.log(\"mounted\", mounted);\n\n    if (mounted) {\n      var getToken = function getToken() {\n        var data, userToken;\n        return _regeneratorRuntime.async(function getToken$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n              case 3:\n                data = _context4.sent;\n                userToken = JSON.parse(data);\n\n                if (userToken) {\n                  setIsLoggedIn(true);\n                  setUser(userToken);\n                  getUserData(userToken.uid);\n                } else {\n                  setUser(null);\n                  setUserInfo({});\n                }\n\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, [[0, 8]], Promise);\n      };\n\n      getToken();\n      return function () {\n        mounted = false;\n        console.log(\"m\", mounted);\n      };\n    }\n  }, []);\n  return [user, setUser, userInfo, setUserInfo, isLoggedIn, setIsLoggedIn, cities, countries, tours];\n};\n\nexport default Data;","map":{"version":3,"sources":["D:/Tour On/Touron-Mobileapp/src/Data/Data.js"],"names":["React","useState","useEffect","database","auth","touron","axios","AsyncStorage","Data","user","setUser","isLoggedIn","setIsLoggedIn","tours","setTour","countries","setCountries","cities","setCities","userInfo","setUserInfo","onAuthStateChanged","source","CancelToken","getCities","get","cityResponse","data","cancel","console","log","getTours","tourResponse","getCountries","countryResponse","getUserData","uid","ref","on","val","mounted","getToken","getItem","userToken","JSON","parse"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,UAA/B;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,kBAAwBP,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAoCT,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOU,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAyBX,QAAQ,CAAC,EAAD,CAAjC;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,OAAd;;AACA,mBAAkCb,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOc,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA4Bf,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOgB,MAAP;AAAA,MAAeC,SAAf;;AACA,oBAAgCjB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOkB,QAAP;AAAA,MAAiBC,WAAjB;;AAIAlB,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,IAAI,GAAGiB,kBAAP,CAA0B,UAACZ,IAAD,EAAU;AAClCC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoB,MAAM,GAAGhB,KAAK,CAACiB,WAAN,CAAkBD,MAAlB,EAAf;;AACA,QAAME,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACWnB,MAAM,CAACoB,GAAP,gBADX;;AAAA;AACVC,cAAAA,YADU;AAEhBR,cAAAA,SAAS,CAACQ,YAAY,CAACC,IAAd,CAAT;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAIAH,IAAAA,SAAS;AACT,WAAO,YAAM;AACXF,MAAAA,MAAM,CAACM,MAAP;AACD,KAFD;AAGAC,IAAAA,OAAO,CAACC,GAAR,WAAsBR,MAAtB;AACD,GAXQ,EAWN,EAXM,CAAT;AAYApB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoB,MAAM,GAAGhB,KAAK,CAACiB,WAAN,CAAkBD,MAAlB,EAAf;;AACA,QAAMS,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACY1B,MAAM,CAACoB,GAAP,4BADZ;;AAAA;AACTO,cAAAA,YADS;AAEflB,cAAAA,OAAO,CAACkB,YAAY,CAACL,IAAd,CAAP;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAKAI,IAAAA,QAAQ;AACR,WAAO,YAAM;AACXT,MAAAA,MAAM,CAACM,MAAP;AACD,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;AAaA1B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoB,MAAM,GAAGhB,KAAK,CAACiB,WAAN,CAAkBD,MAAlB,EAAf;;AACA,QAAMW,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACW5B,MAAM,CAACoB,GAAP,YADX;;AAAA;AACbS,cAAAA,eADa;AAEnBlB,cAAAA,YAAY,CAACkB,eAAe,CAACP,IAAjB,CAAZ;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAIAM,IAAAA,YAAY;AACZ,WAAO,YAAM;AACXX,MAAAA,MAAM,CAACM,MAAP;AACD,KAFD;AAGD,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAS;AAC3BjC,IAAAA,QAAQ,GACLkC,GADH,sBAC0BD,GAD1B,EAEGE,EAFH,CAEM,OAFN,EAEe,UAACX,IAAD,EAAU;AAErB,UAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBP,QAAAA,WAAW,CAAC,EAAD,CAAX;AACD,OAFD,MAEO;AACL,YAAImB,GAAG,GAAGZ,IAAI,CAACY,GAAL,EAAV;AACAnB,QAAAA,WAAW,CAACmB,GAAD,CAAX;AACD;AACF,KAVH;AAWD,GAZD;;AAcArC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIsC,OAAO,GAAG,IAAd;AACAX,IAAAA,OAAO,CAACC,GAAR,YAAuBU,OAAvB;;AAEA,QAAIA,OAAJ,EAAa;AACX,UAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAEMlC,YAAY,CAACmC,OAAb,CAAqB,WAArB,CAFN;;AAAA;AAEPf,gBAAAA,IAFO;AAGPgB,gBAAAA,SAHO,GAGKC,IAAI,CAACC,KAAL,CAAWlB,IAAX,CAHL;;AAIb,oBAAIgB,SAAJ,EAAe;AACb/B,kBAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,kBAAAA,OAAO,CAACiC,SAAD,CAAP;AACAR,kBAAAA,WAAW,CAACQ,SAAS,CAACP,GAAX,CAAX;AACD,iBAJD,MAIO;AACL1B,kBAAAA,OAAO,CAAC,IAAD,CAAP;AACAU,kBAAAA,WAAW,CAAC,EAAD,CAAX;AACD;;AAXY;AAAA;;AAAA;AAAA;AAAA;AAabS,gBAAAA,OAAO,CAACC,GAAR;;AAba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjB;;AAgBAW,MAAAA,QAAQ;AAER,aAAO,YAAM;AACXD,QAAAA,OAAO,GAAG,KAAV;AACAX,QAAAA,OAAO,CAACC,GAAR,MAAiBU,OAAjB;AACD,OAHD;AAID;AACF,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA,SAAO,CACL/B,IADK,EAELC,OAFK,EAGLS,QAHK,EAILC,WAJK,EAKLT,UALK,EAMLC,aANK,EAOLK,MAPK,EAQLF,SARK,EASLF,KATK,CAAP;AAWD,CA3GD;;AA6GA,eAAeL,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { database, auth } from \"firebase\";\r\nimport touron from \"../api/touron\";\r\nimport axios from \"axios\";\r\n\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nconst Data = () => {\r\n  const [user, setUser] = useState({});\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [tours, setTour] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [userInfo, setUserInfo] = useState({});\r\n  //  return () => {\r\n  //    source.cancel();\r\n  //  };\r\n  useEffect(() => {\r\n    auth().onAuthStateChanged((user) => {\r\n      setUser(user);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    const getCities = async () => {\r\n      const cityResponse = await touron.get(`/city/search`);\r\n      setCities(cityResponse.data);\r\n    };\r\n    getCities();\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n    console.log(`object`, source);\r\n  }, []);\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    const getTours = async () => {\r\n      const tourResponse = await touron.get(`/tour?page=1&pageSize=90`);\r\n      setTour(tourResponse.data);\r\n    };\r\n\r\n    getTours();\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    const getCountries = async () => {\r\n      const countryResponse = await touron.get(`/country`);\r\n      setCountries(countryResponse.data);\r\n    };\r\n    getCountries();\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, []);\r\n\r\n  const getUserData = (uid) => {\r\n    database()\r\n      .ref(`userGeneralInfo/${uid}`)\r\n      .on(\"value\", (data) => {\r\n        // console.log(`d`, data);\r\n        if (data === null) {\r\n          setUserInfo({});\r\n        } else {\r\n          let val = data.val();\r\n          setUserInfo(val);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    console.log(`mounted`, mounted);\r\n\r\n    if (mounted) {\r\n      const getToken = async () => {\r\n        try {\r\n          const data = await AsyncStorage.getItem(\"userToken\");\r\n          const userToken = JSON.parse(data);\r\n          if (userToken) {\r\n            setIsLoggedIn(true);\r\n            setUser(userToken);\r\n            getUserData(userToken.uid);\r\n          } else {\r\n            setUser(null);\r\n            setUserInfo({});\r\n          }\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      };\r\n      getToken();\r\n\r\n      return () => {\r\n        mounted = false;\r\n        console.log(`m`, mounted);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return [\r\n    user,\r\n    setUser,\r\n    userInfo,\r\n    setUserInfo,\r\n    isLoggedIn,\r\n    setIsLoggedIn,\r\n    cities,\r\n    countries,\r\n    tours,\r\n  ];\r\n};\r\n\r\nexport default Data;\r\n"]},"metadata":{},"sourceType":"module"}